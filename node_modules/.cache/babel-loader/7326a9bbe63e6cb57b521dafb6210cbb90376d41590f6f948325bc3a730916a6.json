{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar axios = require('axios');\nvar fs = require('fs');\nvar HttpsProxyAgent = require('https-proxy-agent');\nvar Q = require('q');\nvar qs = require('qs');\nvar Response = require('../http/response');\nvar Request = require('../http/request');\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nvar RequestClient = function () {};\n\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n * @param {string} [opts.logLevel] - Show debug logs\n */\nRequestClient.prototype.request = function (opts) {\n  opts = opts || {};\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n  if (!headers.Connection && !headers.connection && opts.forever) {\n    headers.Connection = 'keep-alive';\n  } else if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n  var options = {\n    timeout: opts.timeout || 30000,\n    maxRedirects: opts.allowRedirects ? 10 : 0,\n    // Same number of allowed redirects as request module default\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    httpsAgent: process.env.HTTP_PROXY ? new HttpsProxyAgent(process.env.HTTP_PROXY) : undefined,\n    proxy: false,\n    validateStatus: status => status >= 100 && status < 600\n  };\n  if (process.env.TWILIO_CA_BUNDLE !== undefined) {\n    if (this.ca === undefined) {\n      this.ca = fs.readFileSync(process.env.TWILIO_CA_BUNDLE);\n    }\n    options.ca = this.ca;\n  }\n  if (!_.isNull(opts.data)) {\n    options.data = qs.stringify(opts.data, {\n      arrayFormat: 'repeat'\n    });\n  }\n  if (!_.isNull(opts.params)) {\n    options.params = opts.params;\n    options.paramsSerializer = params => {\n      return qs.stringify(params, {\n        arrayFormat: 'repeat'\n      });\n    };\n  }\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.params,\n    data: opts.data,\n    headers: options.headers,\n    ca: options.ca\n  };\n  if (opts.logLevel === 'debug') {\n    this.logRequest(options);\n  }\n  var _this = this;\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n  axios(options).then(response => {\n    if (opts.logLevel === 'debug') {\n      console.log(`response.statusCode: ${response.status}`);\n      console.log(`response.headers: ${JSON.stringify(response.headers)}`);\n    }\n    _this.lastResponse = new Response(response.status, response.data, response.headers);\n    deferred.resolve({\n      statusCode: response.status,\n      body: response.data\n    });\n  }).catch(error => {\n    _this.lastResponse = undefined;\n    deferred.reject(error);\n  });\n  return deferred.promise;\n};\nRequestClient.prototype.filterLoggingHeaders = function (headers) {\n  return Object.keys(headers).filter(header => {\n    return !'authorization'.includes(header.toLowerCase());\n  });\n};\nRequestClient.prototype.logRequest = function (options) {\n  console.log('-- BEGIN Twilio API Request --');\n  console.log(`${options.method} ${options.url}`);\n  if (options.params) {\n    console.log('Querystring:');\n    console.log(options.params);\n  }\n  if (options.headers) {\n    console.log('Headers:');\n    const filteredHeaderKeys = this.filterLoggingHeaders(options.headers);\n    filteredHeaderKeys.forEach(header => console.log(`${header}: ${options.headers[header]}`));\n  }\n  console.log('-- END Twilio API Request --');\n};\nmodule.exports = RequestClient;","map":{"version":3,"names":["_","require","axios","fs","HttpsProxyAgent","Q","qs","Response","Request","defaults","headers","post","RequestClient","prototype","request","opts","method","Error","uri","deferred","defer","Connection","connection","forever","username","password","b64Auth","Buffer","from","toString","Authorization","options","timeout","maxRedirects","allowRedirects","url","httpsAgent","process","env","HTTP_PROXY","undefined","proxy","validateStatus","status","TWILIO_CA_BUNDLE","ca","readFileSync","isNull","data","stringify","arrayFormat","params","paramsSerializer","optionsRequest","auth","logLevel","logRequest","_this","lastResponse","lastRequest","then","response","console","log","JSON","resolve","statusCode","body","catch","error","reject","promise","filterLoggingHeaders","Object","keys","filter","header","includes","toLowerCase","filteredHeaderKeys","forEach","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/base/RequestClient.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar axios = require('axios');\nvar fs = require('fs');\nvar HttpsProxyAgent = require('https-proxy-agent');\nvar Q = require('q');\nvar qs = require('qs');\nvar Response = require('../http/response');\nvar Request = require('../http/request');\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nvar RequestClient = function () { };\n\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n * @param {string} [opts.logLevel] - Show debug logs\n */\nRequestClient.prototype.request = function (opts) {\n  opts = opts || {};\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n\n  if (!headers.Connection && !headers.connection && opts.forever) {\n    headers.Connection = 'keep-alive';\n  } else if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n\n  var options = {\n    timeout: opts.timeout || 30000,\n    maxRedirects: opts.allowRedirects ? 10 : 0, // Same number of allowed redirects as request module default\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    httpsAgent: process.env.HTTP_PROXY ? new HttpsProxyAgent(process.env.HTTP_PROXY) : undefined,\n    proxy: false,\n    validateStatus: status => status >= 100 && status < 600,\n  };\n\n  if (process.env.TWILIO_CA_BUNDLE !== undefined) {\n    if (this.ca === undefined) {\n      this.ca = fs.readFileSync(process.env.TWILIO_CA_BUNDLE);\n    }\n    options.ca = this.ca;\n  }\n\n  if (!_.isNull(opts.data)) {\n    options.data = qs.stringify(opts.data, { arrayFormat: 'repeat' });\n  }\n\n  if (!_.isNull(opts.params)) {\n    options.params = opts.params;\n    options.paramsSerializer = (params) => {\n      return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n  }\n\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.params,\n    data: opts.data,\n    headers: options.headers,\n    ca: options.ca\n  };\n\n  if (opts.logLevel === 'debug') {\n    this.logRequest(options)\n  }\n\n  var _this = this;\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n\n  axios(options).then((response) => {\n    if (opts.logLevel === 'debug') {\n      console.log(`response.statusCode: ${response.status}`)\n      console.log(`response.headers: ${JSON.stringify(response.headers)}`)\n    }\n    _this.lastResponse = new Response(response.status, response.data, response.headers);\n    deferred.resolve({\n      statusCode: response.status,\n      body: response.data,\n    });\n  }).catch((error) => {\n    _this.lastResponse = undefined;\n    deferred.reject(error);\n  });\n\n  return deferred.promise;\n};\n\nRequestClient.prototype.filterLoggingHeaders = function (headers){\n  return Object.keys(headers).filter((header) => {\n    return !'authorization'.includes(header.toLowerCase());\n  });\n}\n\nRequestClient.prototype.logRequest = function (options){\n  console.log('-- BEGIN Twilio API Request --');\n  console.log(`${options.method} ${options.url}`);\n\n  if (options.params) {\n    console.log('Querystring:');\n    console.log(options.params);\n  }\n\n  if (options.headers) {\n    console.log('Headers:');\n    const filteredHeaderKeys = this.filterLoggingHeaders(options.headers);\n    filteredHeaderKeys.forEach((header) => console.log(`${header}: ${options.headers[header]}`));\n  }\n\n  console.log('-- END Twilio API Request --');\n}\n\nmodule.exports = RequestClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}