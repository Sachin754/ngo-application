{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Events\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SchemaListInstance = exports.SchemaInstance = exports.SchemaContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst schemaVersion_1 = require(\"./schema/schemaVersion\");\nclass SchemaContextImpl {\n  constructor(_version, id) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(id)) {\n      throw new Error(\"Parameter 'id' is not valid.\");\n    }\n    this._solution = {\n      id\n    };\n    this._uri = `/Schemas/${id}`;\n  }\n  get versions() {\n    this._versions = this._versions || (0, schemaVersion_1.SchemaVersionListInstance)(this._version, this._solution.id);\n    return this._versions;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new SchemaInstance(operationVersion, payload, instance._solution.id));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.SchemaContextImpl = SchemaContextImpl;\nclass SchemaInstance {\n  constructor(_version, payload, id) {\n    this._version = _version;\n    this.id = payload.id;\n    this.url = payload.url;\n    this.links = payload.links;\n    this.latestVersionDateCreated = deserialize.iso8601DateTime(payload.latest_version_date_created);\n    this.latestVersion = deserialize.integer(payload.latest_version);\n    this._solution = {\n      id: id || this.id\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new SchemaContextImpl(this._version, this._solution.id);\n    return this._context;\n  }\n  /**\n   * Fetch a SchemaInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed SchemaInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Access the versions.\n   */\n  versions() {\n    return this._proxy.versions;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      id: this.id,\n      url: this.url,\n      links: this.links,\n      latestVersionDateCreated: this.latestVersionDateCreated,\n      latestVersion: this.latestVersion\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.SchemaInstance = SchemaInstance;\nfunction SchemaListInstance(version) {\n  const instance = id => instance.get(id);\n  instance.get = function get(id) {\n    return new SchemaContextImpl(version, id);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.SchemaListInstance = SchemaListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","SchemaListInstance","SchemaInstance","SchemaContextImpl","util_1","require","deserialize","serialize","utility_1","schemaVersion_1","constructor","_version","id","isValidPathParam","Error","_solution","_uri","versions","_versions","SchemaVersionListInstance","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","url","links","latestVersionDateCreated","iso8601DateTime","latest_version_date_created","latestVersion","integer","latest_version","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/events/v1/schema.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Events\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SchemaListInstance = exports.SchemaInstance = exports.SchemaContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst schemaVersion_1 = require(\"./schema/schemaVersion\");\nclass SchemaContextImpl {\n    constructor(_version, id) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(id)) {\n            throw new Error(\"Parameter 'id' is not valid.\");\n        }\n        this._solution = { id };\n        this._uri = `/Schemas/${id}`;\n    }\n    get versions() {\n        this._versions =\n            this._versions ||\n                (0, schemaVersion_1.SchemaVersionListInstance)(this._version, this._solution.id);\n        return this._versions;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new SchemaInstance(operationVersion, payload, instance._solution.id));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.SchemaContextImpl = SchemaContextImpl;\nclass SchemaInstance {\n    constructor(_version, payload, id) {\n        this._version = _version;\n        this.id = payload.id;\n        this.url = payload.url;\n        this.links = payload.links;\n        this.latestVersionDateCreated = deserialize.iso8601DateTime(payload.latest_version_date_created);\n        this.latestVersion = deserialize.integer(payload.latest_version);\n        this._solution = { id: id || this.id };\n    }\n    get _proxy() {\n        this._context =\n            this._context || new SchemaContextImpl(this._version, this._solution.id);\n        return this._context;\n    }\n    /**\n     * Fetch a SchemaInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed SchemaInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Access the versions.\n     */\n    versions() {\n        return this._proxy.versions;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            url: this.url,\n            links: this.links,\n            latestVersionDateCreated: this.latestVersionDateCreated,\n            latestVersion: this.latestVersion,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.SchemaInstance = SchemaInstance;\nfunction SchemaListInstance(version) {\n    const instance = ((id) => instance.get(id));\n    instance.get = function get(id) {\n        return new SchemaContextImpl(version, id);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.SchemaListInstance = SchemaListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}