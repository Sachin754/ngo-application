{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar DataSessionList = require('./sim/dataSession').DataSessionList;\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar UsageRecordList = require('./sim/usageRecord').UsageRecordList;\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar SimList;\nvar SimPage;\nvar SimInstance;\nvar SimContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SimList\n *\n * @constructor Twilio.Wireless.V1.SimList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nSimList = function SimList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function sims\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n  /* jshint ignore:end */\n  function SimListInstance(sid) {\n    return SimListInstance.get(sid);\n  }\n  SimListInstance._version = version;\n  // Path Solution\n  SimListInstance._solution = {};\n  SimListInstance._uri = `/Sims`;\n  /* jshint ignore:start */\n  /**\n   * Streams SimInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SimListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SimInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'Iccid': _.get(opts, 'iccid'),\n      'RatePlan': _.get(opts, 'ratePlan'),\n      'EId': _.get(opts, 'eId'),\n      'SimRegistrationCode': _.get(opts, 'simRegistrationCode'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sim\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} sid - The SID of the Sim resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n  /* jshint ignore:end */\n  SimListInstance.get = function get(sid) {\n    return new SimContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SimListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  SimListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return SimListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SimPage\n *\n * @constructor Twilio.Wireless.V1.SimPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SimSolution} solution - Path solution\n *\n * @returns SimPage\n */\n/* jshint ignore:end */\nSimPage = function SimPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(SimPage.prototype, Page.prototype);\nSimPage.prototype.constructor = SimPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SimInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @param {SimPayload} payload - Payload response from the API\n *\n * @returns SimInstance\n */\n/* jshint ignore:end */\nSimPage.prototype.getInstance = function getInstance(payload) {\n  return new SimInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSimPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimInstance\n *\n * @property {string} sid - The unique string that identifies the Sim resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid -\n *          The SID of the Account to which the Sim resource belongs\n * @property {string} ratePlanSid -\n *          The SID of the RatePlan resource to which the Sim resource is assigned.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Sim resource\n * @property {string} iccid - The ICCID associated with the SIM\n * @property {string} eId - Deprecated\n * @property {sim.status} status - The status of the Sim resource\n * @property {sim.reset_status} resetStatus -\n *          The connectivity reset status of the SIM\n * @property {string} commandsCallbackUrl -\n *          The URL we call when the SIM originates a machine-to-machine Command\n * @property {string} commandsCallbackMethod -\n *          The HTTP method we use to call commands_callback_url\n * @property {string} smsFallbackMethod -\n *          The HTTP method we use to call sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL we call when an error occurs while retrieving or executing the TwiML requested from the sms_url\n * @property {string} smsMethod - The HTTP method we use to call sms_url\n * @property {string} smsUrl -\n *          The URL we call when the SIM-connected device sends an SMS message that is not a Command\n * @property {string} voiceFallbackMethod -\n *          The HTTP method we use to call voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @property {string} voiceMethod - The HTTP method we use to call voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the SIM-connected device makes a voice call\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the Sim resource was last updated\n * @property {string} url - The absolute URL of the resource\n * @property {string} links - The URLs of related subresources\n * @property {string} ipAddress - Deprecated\n *\n * @param {V1} version - Version of the resource\n * @param {SimPayload} payload - The instance payload\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n/* jshint ignore:end */\nSimInstance = function SimInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.ratePlanSid = payload.rate_plan_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.iccid = payload.iccid; // jshint ignore:line\n  this.eId = payload.e_id; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.resetStatus = payload.reset_status; // jshint ignore:line\n  this.commandsCallbackUrl = payload.commands_callback_url; // jshint ignore:line\n  this.commandsCallbackMethod = payload.commands_callback_method; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.ipAddress = payload.ip_address; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(SimInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SimContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method we should use to call voice_fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use when we call voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the SIM-connected device makes a voice call\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the usageRecords\n *\n * @function usageRecords\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.UsageRecordList}\n */\n/* jshint ignore:end */\nSimInstance.prototype.usageRecords = function usageRecords() {\n  return this._proxy.usageRecords;\n};\n\n/* jshint ignore:start */\n/**\n * Access the dataSessions\n *\n * @function dataSessions\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.DataSessionList}\n */\n/* jshint ignore:end */\nSimInstance.prototype.dataSessions = function dataSessions() {\n  return this._proxy.dataSessions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSimInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimContext\n *\n * @property {Twilio.Wireless.V1.SimContext.UsageRecordList} usageRecords -\n *          usageRecords resource\n * @property {Twilio.Wireless.V1.SimContext.DataSessionList} dataSessions -\n *          dataSessions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n/* jshint ignore:end */\nSimContext = function SimContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Sims/${sid}`;\n\n  // Dependents\n  this._usageRecords = undefined;\n  this._dataSessions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method we should use to call voice_fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use when we call voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the SIM-connected device makes a voice call\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'CallbackMethod': _.get(opts, 'callbackMethod'),\n    'CallbackUrl': _.get(opts, 'callbackUrl'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'RatePlan': _.get(opts, 'ratePlan'),\n    'Status': _.get(opts, 'status'),\n    'CommandsCallbackMethod': _.get(opts, 'commandsCallbackMethod'),\n    'CommandsCallbackUrl': _.get(opts, 'commandsCallbackUrl'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'ResetStatus': _.get(opts, 'resetStatus'),\n    'AccountSid': _.get(opts, 'accountSid')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(SimContext.prototype, 'usageRecords', {\n  get: function () {\n    if (!this._usageRecords) {\n      this._usageRecords = new UsageRecordList(this._version, this._solution.sid);\n    }\n    return this._usageRecords;\n  }\n});\nObject.defineProperty(SimContext.prototype, 'dataSessions', {\n  get: function () {\n    if (!this._dataSessions) {\n      this._dataSessions = new DataSessionList(this._version, this._solution.sid);\n    }\n    return this._dataSessions;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nSimContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  SimList: SimList,\n  SimPage: SimPage,\n  SimInstance: SimInstance,\n  SimContext: SimContext\n};","map":{"version":3,"names":["Q","require","_","util","DataSessionList","Page","UsageRecordList","deserialize","values","SimList","SimPage","SimInstance","SimContext","version","SimListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","uniqueName","unique_name","accountSid","account_sid","ratePlanSid","rate_plan_sid","friendlyName","friendly_name","iccid","eId","e_id","status","resetStatus","reset_status","commandsCallbackUrl","commands_callback_url","commandsCallbackMethod","commands_callback_method","smsFallbackMethod","sms_fallback_method","smsFallbackUrl","sms_fallback_url","smsMethod","sms_method","smsUrl","sms_url","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceMethod","voice_method","voiceUrl","voice_url","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","links","ipAddress","ip_address","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","usageRecords","dataSessions","_usageRecords","_dataSessions","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/wireless/v1/sim.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar DataSessionList = require('./sim/dataSession').DataSessionList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar UsageRecordList = require('./sim/usageRecord').UsageRecordList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar SimList;\nvar SimPage;\nvar SimInstance;\nvar SimContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SimList\n *\n * @constructor Twilio.Wireless.V1.SimList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nSimList = function SimList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function sims\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n  /* jshint ignore:end */\n  function SimListInstance(sid) {\n    return SimListInstance.get(sid);\n  }\n\n  SimListInstance._version = version;\n  // Path Solution\n  SimListInstance._solution = {};\n  SimListInstance._uri = `/Sims`;\n  /* jshint ignore:start */\n  /**\n   * Streams SimInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SimListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SimInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'Iccid': _.get(opts, 'iccid'),\n      'RatePlan': _.get(opts, 'ratePlan'),\n      'EId': _.get(opts, 'eId'),\n      'SimRegistrationCode': _.get(opts, 'simRegistrationCode'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sim\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} sid - The SID of the Sim resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n  /* jshint ignore:end */\n  SimListInstance.get = function get(sid) {\n    return new SimContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SimListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SimListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SimListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SimPage\n *\n * @constructor Twilio.Wireless.V1.SimPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SimSolution} solution - Path solution\n *\n * @returns SimPage\n */\n/* jshint ignore:end */\nSimPage = function SimPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SimPage.prototype, Page.prototype);\nSimPage.prototype.constructor = SimPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SimInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @param {SimPayload} payload - Payload response from the API\n *\n * @returns SimInstance\n */\n/* jshint ignore:end */\nSimPage.prototype.getInstance = function getInstance(payload) {\n  return new SimInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSimPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimInstance\n *\n * @property {string} sid - The unique string that identifies the Sim resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid -\n *          The SID of the Account to which the Sim resource belongs\n * @property {string} ratePlanSid -\n *          The SID of the RatePlan resource to which the Sim resource is assigned.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Sim resource\n * @property {string} iccid - The ICCID associated with the SIM\n * @property {string} eId - Deprecated\n * @property {sim.status} status - The status of the Sim resource\n * @property {sim.reset_status} resetStatus -\n *          The connectivity reset status of the SIM\n * @property {string} commandsCallbackUrl -\n *          The URL we call when the SIM originates a machine-to-machine Command\n * @property {string} commandsCallbackMethod -\n *          The HTTP method we use to call commands_callback_url\n * @property {string} smsFallbackMethod -\n *          The HTTP method we use to call sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL we call when an error occurs while retrieving or executing the TwiML requested from the sms_url\n * @property {string} smsMethod - The HTTP method we use to call sms_url\n * @property {string} smsUrl -\n *          The URL we call when the SIM-connected device sends an SMS message that is not a Command\n * @property {string} voiceFallbackMethod -\n *          The HTTP method we use to call voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @property {string} voiceMethod - The HTTP method we use to call voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the SIM-connected device makes a voice call\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the Sim resource was last updated\n * @property {string} url - The absolute URL of the resource\n * @property {string} links - The URLs of related subresources\n * @property {string} ipAddress - Deprecated\n *\n * @param {V1} version - Version of the resource\n * @param {SimPayload} payload - The instance payload\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n/* jshint ignore:end */\nSimInstance = function SimInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.ratePlanSid = payload.rate_plan_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.iccid = payload.iccid; // jshint ignore:line\n  this.eId = payload.e_id; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.resetStatus = payload.reset_status; // jshint ignore:line\n  this.commandsCallbackUrl = payload.commands_callback_url; // jshint ignore:line\n  this.commandsCallbackMethod = payload.commands_callback_method; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.ipAddress = payload.ip_address; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(SimInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SimContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method we should use to call voice_fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use when we call voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the SIM-connected device makes a voice call\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the usageRecords\n *\n * @function usageRecords\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.UsageRecordList}\n */\n/* jshint ignore:end */\nSimInstance.prototype.usageRecords = function usageRecords() {\n  return this._proxy.usageRecords;\n};\n\n/* jshint ignore:start */\n/**\n * Access the dataSessions\n *\n * @function dataSessions\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.DataSessionList}\n */\n/* jshint ignore:end */\nSimInstance.prototype.dataSessions = function dataSessions() {\n  return this._proxy.dataSessions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSimInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimContext\n *\n * @property {Twilio.Wireless.V1.SimContext.UsageRecordList} usageRecords -\n *          usageRecords resource\n * @property {Twilio.Wireless.V1.SimContext.DataSessionList} dataSessions -\n *          dataSessions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n/* jshint ignore:end */\nSimContext = function SimContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Sims/${sid}`;\n\n  // Dependents\n  this._usageRecords = undefined;\n  this._dataSessions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method we should use to call voice_fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use when we call voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the SIM-connected device makes a voice call\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'CallbackMethod': _.get(opts, 'callbackMethod'),\n    'CallbackUrl': _.get(opts, 'callbackUrl'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'RatePlan': _.get(opts, 'ratePlan'),\n    'Status': _.get(opts, 'status'),\n    'CommandsCallbackMethod': _.get(opts, 'commandsCallbackMethod'),\n    'CommandsCallbackUrl': _.get(opts, 'commandsCallbackUrl'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'ResetStatus': _.get(opts, 'resetStatus'),\n    'AccountSid': _.get(opts, 'accountSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(SimContext.prototype,\n  'usageRecords', {\n    get: function() {\n      if (!this._usageRecords) {\n        this._usageRecords = new UsageRecordList(this._version, this._solution.sid);\n      }\n      return this._usageRecords;\n    }\n});\n\nObject.defineProperty(SimContext.prototype,\n  'dataSessions', {\n    get: function() {\n      if (!this._dataSessions) {\n        this._dataSessions = new DataSessionList(this._version, this._solution.sid);\n      }\n      return this._dataSessions;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSimContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SimList: SimList,\n  SimPage: SimPage,\n  SimInstance: SimInstance,\n  SimContext: SimContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}