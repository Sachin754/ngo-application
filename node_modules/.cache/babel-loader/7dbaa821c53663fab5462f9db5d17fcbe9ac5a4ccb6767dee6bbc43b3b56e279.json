{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SyncMapPermissionPage = exports.SyncMapPermissionListInstance = exports.SyncMapPermissionInstance = exports.SyncMapPermissionContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass SyncMapPermissionContextImpl {\n  constructor(_version, serviceSid, mapSid, identity) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n      throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(mapSid)) {\n      throw new Error(\"Parameter 'mapSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(identity)) {\n      throw new Error(\"Parameter 'identity' is not valid.\");\n    }\n    this._solution = {\n      serviceSid,\n      mapSid,\n      identity\n    };\n    this._uri = `/Services/${serviceSid}/Maps/${mapSid}/Permissions/${identity}`;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new SyncMapPermissionInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.mapSid, instance._solution.identity));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"read\"] === null || params[\"read\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['read']\\\" missing.\");\n    }\n    if (params[\"write\"] === null || params[\"write\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['write']\\\" missing.\");\n    }\n    if (params[\"manage\"] === null || params[\"manage\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['manage']\\\" missing.\");\n    }\n    let data = {};\n    data[\"Read\"] = serialize.bool(params[\"read\"]);\n    data[\"Write\"] = serialize.bool(params[\"write\"]);\n    data[\"Manage\"] = serialize.bool(params[\"manage\"]);\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new SyncMapPermissionInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.mapSid, instance._solution.identity));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.SyncMapPermissionContextImpl = SyncMapPermissionContextImpl;\nclass SyncMapPermissionInstance {\n  constructor(_version, payload, serviceSid, mapSid, identity) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.serviceSid = payload.service_sid;\n    this.mapSid = payload.map_sid;\n    this.identity = payload.identity;\n    this.read = payload.read;\n    this.write = payload.write;\n    this.manage = payload.manage;\n    this.url = payload.url;\n    this._solution = {\n      serviceSid,\n      mapSid,\n      identity: identity || this.identity\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new SyncMapPermissionContextImpl(this._version, this._solution.serviceSid, this._solution.mapSid, this._solution.identity);\n    return this._context;\n  }\n  /**\n   * Remove a SyncMapPermissionInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a SyncMapPermissionInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed SyncMapPermissionInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      serviceSid: this.serviceSid,\n      mapSid: this.mapSid,\n      identity: this.identity,\n      read: this.read,\n      write: this.write,\n      manage: this.manage,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.SyncMapPermissionInstance = SyncMapPermissionInstance;\nfunction SyncMapPermissionListInstance(version, serviceSid, mapSid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(mapSid)) {\n    throw new Error(\"Parameter 'mapSid' is not valid.\");\n  }\n  const instance = identity => instance.get(identity);\n  instance.get = function get(identity) {\n    return new SyncMapPermissionContextImpl(version, serviceSid, mapSid, identity);\n  };\n  instance._version = version;\n  instance._solution = {\n    serviceSid,\n    mapSid\n  };\n  instance._uri = `/Services/${serviceSid}/Maps/${mapSid}/Permissions`;\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new SyncMapPermissionPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new SyncMapPermissionPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.SyncMapPermissionListInstance = SyncMapPermissionListInstance;\nclass SyncMapPermissionPage extends Page_1.default {\n  /**\n   * Initialize the SyncMapPermissionPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of SyncMapPermissionInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new SyncMapPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.SyncMapPermissionPage = SyncMapPermissionPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","SyncMapPermissionPage","SyncMapPermissionListInstance","SyncMapPermissionInstance","SyncMapPermissionContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","constructor","_version","serviceSid","mapSid","identity","isValidPathParam","Error","_solution","_uri","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","undefined","data","bool","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","service_sid","map_sid","read","write","manage","url","_proxy","_context","version","get","page","Function","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/preview/sync/service/syncMap/syncMapPermission.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyncMapPermissionPage = exports.SyncMapPermissionListInstance = exports.SyncMapPermissionInstance = exports.SyncMapPermissionContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass SyncMapPermissionContextImpl {\n    constructor(_version, serviceSid, mapSid, identity) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n            throw new Error(\"Parameter 'serviceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(mapSid)) {\n            throw new Error(\"Parameter 'mapSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(identity)) {\n            throw new Error(\"Parameter 'identity' is not valid.\");\n        }\n        this._solution = { serviceSid, mapSid, identity };\n        this._uri = `/Services/${serviceSid}/Maps/${mapSid}/Permissions/${identity}`;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new SyncMapPermissionInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.mapSid, instance._solution.identity));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"read\"] === null || params[\"read\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['read']\\\" missing.\");\n        }\n        if (params[\"write\"] === null || params[\"write\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['write']\\\" missing.\");\n        }\n        if (params[\"manage\"] === null || params[\"manage\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['manage']\\\" missing.\");\n        }\n        let data = {};\n        data[\"Read\"] = serialize.bool(params[\"read\"]);\n        data[\"Write\"] = serialize.bool(params[\"write\"]);\n        data[\"Manage\"] = serialize.bool(params[\"manage\"]);\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new SyncMapPermissionInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.mapSid, instance._solution.identity));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.SyncMapPermissionContextImpl = SyncMapPermissionContextImpl;\nclass SyncMapPermissionInstance {\n    constructor(_version, payload, serviceSid, mapSid, identity) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.serviceSid = payload.service_sid;\n        this.mapSid = payload.map_sid;\n        this.identity = payload.identity;\n        this.read = payload.read;\n        this.write = payload.write;\n        this.manage = payload.manage;\n        this.url = payload.url;\n        this._solution = {\n            serviceSid,\n            mapSid,\n            identity: identity || this.identity,\n        };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new SyncMapPermissionContextImpl(this._version, this._solution.serviceSid, this._solution.mapSid, this._solution.identity);\n        return this._context;\n    }\n    /**\n     * Remove a SyncMapPermissionInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a SyncMapPermissionInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed SyncMapPermissionInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            serviceSid: this.serviceSid,\n            mapSid: this.mapSid,\n            identity: this.identity,\n            read: this.read,\n            write: this.write,\n            manage: this.manage,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.SyncMapPermissionInstance = SyncMapPermissionInstance;\nfunction SyncMapPermissionListInstance(version, serviceSid, mapSid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(mapSid)) {\n        throw new Error(\"Parameter 'mapSid' is not valid.\");\n    }\n    const instance = ((identity) => instance.get(identity));\n    instance.get = function get(identity) {\n        return new SyncMapPermissionContextImpl(version, serviceSid, mapSid, identity);\n    };\n    instance._version = version;\n    instance._solution = { serviceSid, mapSid };\n    instance._uri = `/Services/${serviceSid}/Maps/${mapSid}/Permissions`;\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new SyncMapPermissionPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new SyncMapPermissionPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.SyncMapPermissionListInstance = SyncMapPermissionListInstance;\nclass SyncMapPermissionPage extends Page_1.default {\n    /**\n     * Initialize the SyncMapPermissionPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of SyncMapPermissionInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new SyncMapPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.SyncMapPermissionPage = SyncMapPermissionPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}