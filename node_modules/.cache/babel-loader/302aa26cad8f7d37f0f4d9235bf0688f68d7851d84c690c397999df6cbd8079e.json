{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass RestException extends Error {\n  constructor(response) {\n    super(\"[HTTP \" + response.statusCode + \"] Failed to execute request\");\n    const isResponseBodyString = typeof response.body == \"string\";\n    const body = isResponseBodyString ? parseResponseBody(response.body) : response.body;\n    this.status = response.statusCode;\n    if (body !== null) {\n      this.message = body.message;\n      this.code = body.code;\n      this.moreInfo = body.more_info; /* jshint ignore:line */\n      this.details = body.details;\n    } else {\n      this.message = \"[HTTP \" + response.statusCode + \"] Failed to execute request\";\n    }\n  }\n}\nexports.default = RestException;\nfunction parseResponseBody(response_body) {\n  let body = null;\n  try {\n    body = JSON.parse(response_body);\n  } catch (catchError) {\n    body = null;\n  }\n  return body;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","RestException","Error","constructor","response","statusCode","isResponseBodyString","body","parseResponseBody","status","message","code","moreInfo","more_info","details","default","response_body","JSON","parse","catchError"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/base/RestException.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RestException extends Error {\n    constructor(response) {\n        super(\"[HTTP \" + response.statusCode + \"] Failed to execute request\");\n        const isResponseBodyString = typeof response.body == \"string\";\n        const body = isResponseBodyString\n            ? parseResponseBody(response.body)\n            : response.body;\n        this.status = response.statusCode;\n        if (body !== null) {\n            this.message = body.message;\n            this.code = body.code;\n            this.moreInfo = body.more_info; /* jshint ignore:line */\n            this.details = body.details;\n        }\n        else {\n            this.message =\n                \"[HTTP \" + response.statusCode + \"] Failed to execute request\";\n        }\n    }\n}\nexports.default = RestException;\nfunction parseResponseBody(response_body) {\n    let body = null;\n    try {\n        body = JSON.parse(response_body);\n    }\n    catch (catchError) {\n        body = null;\n    }\n    return body;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,aAAa,SAASC,KAAK,CAAC;EAC9BC,WAAWA,CAACC,QAAQ,EAAE;IAClB,KAAK,CAAC,QAAQ,GAAGA,QAAQ,CAACC,UAAU,GAAG,6BAA6B,CAAC;IACrE,MAAMC,oBAAoB,GAAG,OAAOF,QAAQ,CAACG,IAAI,IAAI,QAAQ;IAC7D,MAAMA,IAAI,GAAGD,oBAAoB,GAC3BE,iBAAiB,CAACJ,QAAQ,CAACG,IAAI,CAAC,GAChCH,QAAQ,CAACG,IAAI;IACnB,IAAI,CAACE,MAAM,GAAGL,QAAQ,CAACC,UAAU;IACjC,IAAIE,IAAI,KAAK,IAAI,EAAE;MACf,IAAI,CAACG,OAAO,GAAGH,IAAI,CAACG,OAAO;MAC3B,IAAI,CAACC,IAAI,GAAGJ,IAAI,CAACI,IAAI;MACrB,IAAI,CAACC,QAAQ,GAAGL,IAAI,CAACM,SAAS,CAAC,CAAC;MAChC,IAAI,CAACC,OAAO,GAAGP,IAAI,CAACO,OAAO;IAC/B,CAAC,MACI;MACD,IAAI,CAACJ,OAAO,GACR,QAAQ,GAAGN,QAAQ,CAACC,UAAU,GAAG,6BAA6B;IACtE;EACJ;AACJ;AACAN,OAAO,CAACgB,OAAO,GAAGd,aAAa;AAC/B,SAASO,iBAAiBA,CAACQ,aAAa,EAAE;EACtC,IAAIT,IAAI,GAAG,IAAI;EACf,IAAI;IACAA,IAAI,GAAGU,IAAI,CAACC,KAAK,CAACF,aAAa,CAAC;EACpC,CAAC,CACD,OAAOG,UAAU,EAAE;IACfZ,IAAI,GAAG,IAAI;EACf;EACA,OAAOA,IAAI;AACf"},"metadata":{},"sourceType":"script","externalDependencies":[]}