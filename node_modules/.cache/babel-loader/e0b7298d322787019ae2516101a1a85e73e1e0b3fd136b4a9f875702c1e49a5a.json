{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nconst jsonwebtoken_1 = __importDefault(require(\"jsonwebtoken\"));\nclass AccessToken {\n  /**\n   * @param accountSid - The account's unique ID to which access is scoped\n   * @param keySid - The signing key's unique ID\n   * @param secret - The secret to sign the token with\n   * @param options - ...\n   * @param options.ttl - Time to live in seconds (default 3600)\n   * @param options.identity - The identity of the first person. Required.\n   * @param options.nbf - Time from epoch in seconds for not before value\n   * @param options.region - The region value associated with this account\n   */\n  constructor(accountSid, keySid, secret, options) {\n    if (!accountSid) {\n      throw new Error(\"accountSid is required\");\n    }\n    if (!keySid) {\n      throw new Error(\"keySid is required\");\n    }\n    if (!secret) {\n      throw new Error(\"secret is required\");\n    }\n    if (!options || !options.identity) {\n      throw new Error(\"identity is required to be specified in options\");\n    }\n    this.accountSid = accountSid;\n    this.keySid = keySid;\n    this.secret = secret;\n    this.ttl = options.ttl || 3600;\n    this.identity = options.identity;\n    this.nbf = options.nbf;\n    this.region = options.region;\n    this.grants = [];\n  }\n  addGrant(grant) {\n    this.grants.push(grant);\n  }\n  toJwt(algorithm) {\n    algorithm = algorithm || AccessToken.DEFAULT_ALGORITHM;\n    if (!AccessToken.ALGORITHMS.includes(algorithm)) {\n      throw new Error(\"Algorithm not supported. Allowed values are \" + AccessToken.ALGORITHMS.join(\", \"));\n    }\n    let grants = {};\n    if (Number.isInteger(this.identity) || typeof this.identity === \"string\") {\n      grants.identity = String(this.identity);\n    }\n    for (const grant of this.grants) {\n      grants[grant.key] = grant.toPayload();\n    }\n    const now = Math.floor(Date.now() / 1000);\n    let payload = {\n      jti: this.keySid + \"-\" + now,\n      grants: grants\n    };\n    if (typeof this.nbf === \"number\") {\n      payload.nbf = this.nbf;\n    }\n    let header = {\n      cty: \"twilio-fpa;v=1\",\n      typ: \"JWT\"\n    };\n    if (this.region && typeof this.region === \"string\") {\n      header.twr = this.region;\n    }\n    return jsonwebtoken_1.default.sign(payload, this.secret, {\n      header: header,\n      algorithm: algorithm,\n      issuer: this.keySid,\n      subject: this.accountSid,\n      expiresIn: this.ttl\n    });\n  }\n}\nAccessToken.DEFAULT_ALGORITHM = \"HS256\";\nAccessToken.ALGORITHMS = [\"HS256\", \"HS384\", \"HS512\"];\n(function (AccessToken) {\n  class Grant {\n    constructor(key) {\n      this.key = key;\n    }\n  }\n  AccessToken.Grant = Grant;\n  class TaskRouterGrant extends Grant {\n    /**\n     * @param options - ...\n     * @param options.workspaceSid - The workspace unique ID\n     * @param options.workerSid - The worker unique ID\n     * @param options.role - The role of the grant\n     */\n    constructor(options) {\n      options = options || {};\n      super(\"task_router\");\n      this.workspaceSid = options.workspaceSid;\n      this.workerSid = options.workerSid;\n      this.role = options.role;\n    }\n    toPayload() {\n      let grant = {};\n      if (this.workspaceSid) {\n        grant.workspace_sid = this.workspaceSid;\n      }\n      if (this.workerSid) {\n        grant.worker_sid = this.workerSid;\n      }\n      if (this.role) {\n        grant.role = this.role;\n      }\n      return grant;\n    }\n  }\n  AccessToken.TaskRouterGrant = TaskRouterGrant;\n  class ChatGrant extends Grant {\n    /**\n     * @param options - ...\n     * @param options.serviceSid - The service unique ID\n     * @param options.endpointId - The endpoint ID\n     * @param options.deploymentRoleSid - SID of the deployment role to be\n     *                 assigned to the user\n     * @param options.pushCredentialSid - The Push Credentials SID\n     */\n    constructor(options) {\n      options = options || {};\n      super(\"chat\");\n      this.serviceSid = options.serviceSid;\n      this.endpointId = options.endpointId;\n      this.deploymentRoleSid = options.deploymentRoleSid;\n      this.pushCredentialSid = options.pushCredentialSid;\n    }\n    toPayload() {\n      let grant = {};\n      if (this.serviceSid) {\n        grant.service_sid = this.serviceSid;\n      }\n      if (this.endpointId) {\n        grant.endpoint_id = this.endpointId;\n      }\n      if (this.deploymentRoleSid) {\n        grant.deployment_role_sid = this.deploymentRoleSid;\n      }\n      if (this.pushCredentialSid) {\n        grant.push_credential_sid = this.pushCredentialSid;\n      }\n      return grant;\n    }\n  }\n  AccessToken.ChatGrant = ChatGrant;\n  class VideoGrant extends Grant {\n    /**\n     * @param options - ...\n     * @param options.room - The Room name or Room sid.\n     */\n    constructor(options) {\n      options = options || {};\n      super(\"video\");\n      this.room = options.room;\n    }\n    toPayload() {\n      let grant = {};\n      if (this.room) {\n        grant.room = this.room;\n      }\n      return grant;\n    }\n  }\n  AccessToken.VideoGrant = VideoGrant;\n  class SyncGrant extends Grant {\n    /**\n     * @param options.serviceSid - The service unique ID\n     * @param options.endpointId - The endpoint ID\n     */\n    constructor(options) {\n      options = options || {};\n      super(\"data_sync\");\n      this.serviceSid = options.serviceSid;\n      this.endpointId = options.endpointId;\n    }\n    toPayload() {\n      let grant = {};\n      if (this.serviceSid) {\n        grant.service_sid = this.serviceSid;\n      }\n      if (this.endpointId) {\n        grant.endpoint_id = this.endpointId;\n      }\n      return grant;\n    }\n  }\n  AccessToken.SyncGrant = SyncGrant;\n  class VoiceGrant extends Grant {\n    /**\n     * @param options - ...\n     * @param options.incomingAllow - Whether or not this endpoint is allowed to receive incoming calls as grants.identity\n     * @param options.outgoingApplicationSid - application sid to call when placing outgoing call\n     * @param options.outgoingApplicationParams - request params to pass to the application\n     * @param options.pushCredentialSid - Push Credential Sid to use when registering to receive incoming call notifications\n     * @param options.endpointId - Specify an endpoint identifier for this device, which will allow the developer\n     *                 to direct calls to a specific endpoint when multiple devices are associated with a single identity\n     */\n    constructor(options) {\n      options = options || {};\n      super(\"voice\");\n      this.incomingAllow = options.incomingAllow;\n      this.outgoingApplicationSid = options.outgoingApplicationSid;\n      this.outgoingApplicationParams = options.outgoingApplicationParams;\n      this.pushCredentialSid = options.pushCredentialSid;\n      this.endpointId = options.endpointId;\n    }\n    toPayload() {\n      let grant = {};\n      if (this.incomingAllow === true) {\n        grant.incoming = {\n          allow: true\n        };\n      }\n      if (this.outgoingApplicationSid) {\n        grant.outgoing = {\n          application_sid: this.outgoingApplicationSid\n        };\n        if (this.outgoingApplicationParams) {\n          grant.outgoing.params = this.outgoingApplicationParams;\n        }\n      }\n      if (this.pushCredentialSid) {\n        grant.push_credential_sid = this.pushCredentialSid;\n      }\n      if (this.endpointId) {\n        grant.endpoint_id = this.endpointId;\n      }\n      return grant;\n    }\n  }\n  AccessToken.VoiceGrant = VoiceGrant;\n  class PlaybackGrant extends Grant {\n    /**\n     * @param options - ...\n     * @param options.grant - The PlaybackGrant retrieved from Twilio's API\n     */\n    constructor(options) {\n      options = options || {};\n      super(\"player\");\n      this.grant = options.grant;\n    }\n    toPayload() {\n      let grant = {};\n      if (this.grant) {\n        grant = this.grant;\n      }\n      return grant;\n    }\n  }\n  AccessToken.PlaybackGrant = PlaybackGrant;\n})(AccessToken || (AccessToken = {}));\nmodule.exports = AccessToken;","map":{"version":3,"names":["__importDefault","mod","__esModule","jsonwebtoken_1","require","AccessToken","constructor","accountSid","keySid","secret","options","Error","identity","ttl","nbf","region","grants","addGrant","grant","push","toJwt","algorithm","DEFAULT_ALGORITHM","ALGORITHMS","includes","join","Number","isInteger","String","key","toPayload","now","Math","floor","Date","payload","jti","header","cty","typ","twr","default","sign","issuer","subject","expiresIn","Grant","TaskRouterGrant","workspaceSid","workerSid","role","workspace_sid","worker_sid","ChatGrant","serviceSid","endpointId","deploymentRoleSid","pushCredentialSid","service_sid","endpoint_id","deployment_role_sid","push_credential_sid","VideoGrant","room","SyncGrant","VoiceGrant","incomingAllow","outgoingApplicationSid","outgoingApplicationParams","incoming","allow","outgoing","application_sid","params","PlaybackGrant","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/jwt/AccessToken.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst jsonwebtoken_1 = __importDefault(require(\"jsonwebtoken\"));\nclass AccessToken {\n    /**\n     * @param accountSid - The account's unique ID to which access is scoped\n     * @param keySid - The signing key's unique ID\n     * @param secret - The secret to sign the token with\n     * @param options - ...\n     * @param options.ttl - Time to live in seconds (default 3600)\n     * @param options.identity - The identity of the first person. Required.\n     * @param options.nbf - Time from epoch in seconds for not before value\n     * @param options.region - The region value associated with this account\n     */\n    constructor(accountSid, keySid, secret, options) {\n        if (!accountSid) {\n            throw new Error(\"accountSid is required\");\n        }\n        if (!keySid) {\n            throw new Error(\"keySid is required\");\n        }\n        if (!secret) {\n            throw new Error(\"secret is required\");\n        }\n        if (!options || !options.identity) {\n            throw new Error(\"identity is required to be specified in options\");\n        }\n        this.accountSid = accountSid;\n        this.keySid = keySid;\n        this.secret = secret;\n        this.ttl = options.ttl || 3600;\n        this.identity = options.identity;\n        this.nbf = options.nbf;\n        this.region = options.region;\n        this.grants = [];\n    }\n    addGrant(grant) {\n        this.grants.push(grant);\n    }\n    toJwt(algorithm) {\n        algorithm = algorithm || AccessToken.DEFAULT_ALGORITHM;\n        if (!AccessToken.ALGORITHMS.includes(algorithm)) {\n            throw new Error(\"Algorithm not supported. Allowed values are \" +\n                AccessToken.ALGORITHMS.join(\", \"));\n        }\n        let grants = {};\n        if (Number.isInteger(this.identity) || typeof this.identity === \"string\") {\n            grants.identity = String(this.identity);\n        }\n        for (const grant of this.grants) {\n            grants[grant.key] = grant.toPayload();\n        }\n        const now = Math.floor(Date.now() / 1000);\n        let payload = {\n            jti: this.keySid + \"-\" + now,\n            grants: grants,\n        };\n        if (typeof this.nbf === \"number\") {\n            payload.nbf = this.nbf;\n        }\n        let header = {\n            cty: \"twilio-fpa;v=1\",\n            typ: \"JWT\",\n        };\n        if (this.region && typeof this.region === \"string\") {\n            header.twr = this.region;\n        }\n        return jsonwebtoken_1.default.sign(payload, this.secret, {\n            header: header,\n            algorithm: algorithm,\n            issuer: this.keySid,\n            subject: this.accountSid,\n            expiresIn: this.ttl,\n        });\n    }\n}\nAccessToken.DEFAULT_ALGORITHM = \"HS256\";\nAccessToken.ALGORITHMS = [\"HS256\", \"HS384\", \"HS512\"];\n(function (AccessToken) {\n    class Grant {\n        constructor(key) {\n            this.key = key;\n        }\n    }\n    AccessToken.Grant = Grant;\n    class TaskRouterGrant extends Grant {\n        /**\n         * @param options - ...\n         * @param options.workspaceSid - The workspace unique ID\n         * @param options.workerSid - The worker unique ID\n         * @param options.role - The role of the grant\n         */\n        constructor(options) {\n            options = options || {};\n            super(\"task_router\");\n            this.workspaceSid = options.workspaceSid;\n            this.workerSid = options.workerSid;\n            this.role = options.role;\n        }\n        toPayload() {\n            let grant = {};\n            if (this.workspaceSid) {\n                grant.workspace_sid = this.workspaceSid;\n            }\n            if (this.workerSid) {\n                grant.worker_sid = this.workerSid;\n            }\n            if (this.role) {\n                grant.role = this.role;\n            }\n            return grant;\n        }\n    }\n    AccessToken.TaskRouterGrant = TaskRouterGrant;\n    class ChatGrant extends Grant {\n        /**\n         * @param options - ...\n         * @param options.serviceSid - The service unique ID\n         * @param options.endpointId - The endpoint ID\n         * @param options.deploymentRoleSid - SID of the deployment role to be\n         *                 assigned to the user\n         * @param options.pushCredentialSid - The Push Credentials SID\n         */\n        constructor(options) {\n            options = options || {};\n            super(\"chat\");\n            this.serviceSid = options.serviceSid;\n            this.endpointId = options.endpointId;\n            this.deploymentRoleSid = options.deploymentRoleSid;\n            this.pushCredentialSid = options.pushCredentialSid;\n        }\n        toPayload() {\n            let grant = {};\n            if (this.serviceSid) {\n                grant.service_sid = this.serviceSid;\n            }\n            if (this.endpointId) {\n                grant.endpoint_id = this.endpointId;\n            }\n            if (this.deploymentRoleSid) {\n                grant.deployment_role_sid = this.deploymentRoleSid;\n            }\n            if (this.pushCredentialSid) {\n                grant.push_credential_sid = this.pushCredentialSid;\n            }\n            return grant;\n        }\n    }\n    AccessToken.ChatGrant = ChatGrant;\n    class VideoGrant extends Grant {\n        /**\n         * @param options - ...\n         * @param options.room - The Room name or Room sid.\n         */\n        constructor(options) {\n            options = options || {};\n            super(\"video\");\n            this.room = options.room;\n        }\n        toPayload() {\n            let grant = {};\n            if (this.room) {\n                grant.room = this.room;\n            }\n            return grant;\n        }\n    }\n    AccessToken.VideoGrant = VideoGrant;\n    class SyncGrant extends Grant {\n        /**\n         * @param options.serviceSid - The service unique ID\n         * @param options.endpointId - The endpoint ID\n         */\n        constructor(options) {\n            options = options || {};\n            super(\"data_sync\");\n            this.serviceSid = options.serviceSid;\n            this.endpointId = options.endpointId;\n        }\n        toPayload() {\n            let grant = {};\n            if (this.serviceSid) {\n                grant.service_sid = this.serviceSid;\n            }\n            if (this.endpointId) {\n                grant.endpoint_id = this.endpointId;\n            }\n            return grant;\n        }\n    }\n    AccessToken.SyncGrant = SyncGrant;\n    class VoiceGrant extends Grant {\n        /**\n         * @param options - ...\n         * @param options.incomingAllow - Whether or not this endpoint is allowed to receive incoming calls as grants.identity\n         * @param options.outgoingApplicationSid - application sid to call when placing outgoing call\n         * @param options.outgoingApplicationParams - request params to pass to the application\n         * @param options.pushCredentialSid - Push Credential Sid to use when registering to receive incoming call notifications\n         * @param options.endpointId - Specify an endpoint identifier for this device, which will allow the developer\n         *                 to direct calls to a specific endpoint when multiple devices are associated with a single identity\n         */\n        constructor(options) {\n            options = options || {};\n            super(\"voice\");\n            this.incomingAllow = options.incomingAllow;\n            this.outgoingApplicationSid = options.outgoingApplicationSid;\n            this.outgoingApplicationParams = options.outgoingApplicationParams;\n            this.pushCredentialSid = options.pushCredentialSid;\n            this.endpointId = options.endpointId;\n        }\n        toPayload() {\n            let grant = {};\n            if (this.incomingAllow === true) {\n                grant.incoming = { allow: true };\n            }\n            if (this.outgoingApplicationSid) {\n                grant.outgoing = {\n                    application_sid: this.outgoingApplicationSid,\n                };\n                if (this.outgoingApplicationParams) {\n                    grant.outgoing.params = this.outgoingApplicationParams;\n                }\n            }\n            if (this.pushCredentialSid) {\n                grant.push_credential_sid = this.pushCredentialSid;\n            }\n            if (this.endpointId) {\n                grant.endpoint_id = this.endpointId;\n            }\n            return grant;\n        }\n    }\n    AccessToken.VoiceGrant = VoiceGrant;\n    class PlaybackGrant extends Grant {\n        /**\n         * @param options - ...\n         * @param options.grant - The PlaybackGrant retrieved from Twilio's API\n         */\n        constructor(options) {\n            options = options || {};\n            super(\"player\");\n            this.grant = options.grant;\n        }\n        toPayload() {\n            let grant = {};\n            if (this.grant) {\n                grant = this.grant;\n            }\n            return grant;\n        }\n    }\n    AccessToken.PlaybackGrant = PlaybackGrant;\n})(AccessToken || (AccessToken = {}));\nmodule.exports = AccessToken;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}