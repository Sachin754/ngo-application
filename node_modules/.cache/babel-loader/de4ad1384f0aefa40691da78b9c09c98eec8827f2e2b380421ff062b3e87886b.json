{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Studio\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StepContextListInstance = exports.StepContextInstance = exports.StepContextContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../../base/utility\");\nclass StepContextContextImpl {\n  constructor(_version, flowSid, engagementSid, stepSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(flowSid)) {\n      throw new Error(\"Parameter 'flowSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(engagementSid)) {\n      throw new Error(\"Parameter 'engagementSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(stepSid)) {\n      throw new Error(\"Parameter 'stepSid' is not valid.\");\n    }\n    this._solution = {\n      flowSid,\n      engagementSid,\n      stepSid\n    };\n    this._uri = `/Flows/${flowSid}/Engagements/${engagementSid}/Steps/${stepSid}/Context`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new StepContextInstance(operationVersion, payload, instance._solution.flowSid, instance._solution.engagementSid, instance._solution.stepSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.StepContextContextImpl = StepContextContextImpl;\nclass StepContextInstance {\n  constructor(_version, payload, flowSid, engagementSid, stepSid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.context = payload.context;\n    this.engagementSid = payload.engagement_sid;\n    this.flowSid = payload.flow_sid;\n    this.stepSid = payload.step_sid;\n    this.url = payload.url;\n    this._solution = {\n      flowSid,\n      engagementSid,\n      stepSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new StepContextContextImpl(this._version, this._solution.flowSid, this._solution.engagementSid, this._solution.stepSid);\n    return this._context;\n  }\n  /**\n   * Fetch a StepContextInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed StepContextInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      context: this.context,\n      engagementSid: this.engagementSid,\n      flowSid: this.flowSid,\n      stepSid: this.stepSid,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.StepContextInstance = StepContextInstance;\nfunction StepContextListInstance(version, flowSid, engagementSid, stepSid) {\n  if (!(0, utility_1.isValidPathParam)(flowSid)) {\n    throw new Error(\"Parameter 'flowSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(engagementSid)) {\n    throw new Error(\"Parameter 'engagementSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(stepSid)) {\n    throw new Error(\"Parameter 'stepSid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new StepContextContextImpl(version, flowSid, engagementSid, stepSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    flowSid,\n    engagementSid,\n    stepSid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.StepContextListInstance = StepContextListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","StepContextListInstance","StepContextInstance","StepContextContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","flowSid","engagementSid","stepSid","isValidPathParam","Error","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","accountSid","account_sid","context","engagement_sid","flow_sid","step_sid","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/studio/v1/flow/engagement/step/stepContext.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Studio\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StepContextListInstance = exports.StepContextInstance = exports.StepContextContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../../base/utility\");\nclass StepContextContextImpl {\n    constructor(_version, flowSid, engagementSid, stepSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(flowSid)) {\n            throw new Error(\"Parameter 'flowSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(engagementSid)) {\n            throw new Error(\"Parameter 'engagementSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(stepSid)) {\n            throw new Error(\"Parameter 'stepSid' is not valid.\");\n        }\n        this._solution = { flowSid, engagementSid, stepSid };\n        this._uri = `/Flows/${flowSid}/Engagements/${engagementSid}/Steps/${stepSid}/Context`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new StepContextInstance(operationVersion, payload, instance._solution.flowSid, instance._solution.engagementSid, instance._solution.stepSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.StepContextContextImpl = StepContextContextImpl;\nclass StepContextInstance {\n    constructor(_version, payload, flowSid, engagementSid, stepSid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.context = payload.context;\n        this.engagementSid = payload.engagement_sid;\n        this.flowSid = payload.flow_sid;\n        this.stepSid = payload.step_sid;\n        this.url = payload.url;\n        this._solution = { flowSid, engagementSid, stepSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new StepContextContextImpl(this._version, this._solution.flowSid, this._solution.engagementSid, this._solution.stepSid);\n        return this._context;\n    }\n    /**\n     * Fetch a StepContextInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed StepContextInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            context: this.context,\n            engagementSid: this.engagementSid,\n            flowSid: this.flowSid,\n            stepSid: this.stepSid,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.StepContextInstance = StepContextInstance;\nfunction StepContextListInstance(version, flowSid, engagementSid, stepSid) {\n    if (!(0, utility_1.isValidPathParam)(flowSid)) {\n        throw new Error(\"Parameter 'flowSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(engagementSid)) {\n        throw new Error(\"Parameter 'engagementSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(stepSid)) {\n        throw new Error(\"Parameter 'stepSid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new StepContextContextImpl(version, flowSid, engagementSid, stepSid);\n    };\n    instance._version = version;\n    instance._solution = { flowSid, engagementSid, stepSid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.StepContextListInstance = StepContextListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}