{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar ByocTrunkList;\nvar ByocTrunkPage;\nvar ByocTrunkInstance;\nvar ByocTrunkContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkList\n *\n * @constructor Twilio.Voice.V1.ByocTrunkList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nByocTrunkList = function ByocTrunkList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function byocTrunks\n   * @memberof Twilio.Voice.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n  /* jshint ignore:end */\n  function ByocTrunkListInstance(sid) {\n    return ByocTrunkListInstance.get(sid);\n  }\n  ByocTrunkListInstance._version = version;\n  // Path Solution\n  ByocTrunkListInstance._solution = {};\n  ByocTrunkListInstance._uri = `/ByocTrunks`;\n  /* jshint ignore:start */\n  /**\n   * create a ByocTrunkInstance\n   *\n   * @function create\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - A string to describe the resource\n   * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n   * @param {string} [opts.voiceMethod] - The HTTP method to use with voice_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we should call when an error occurs in executing TwiML\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method to use with voice_fallback_url\n   * @param {string} [opts.statusCallbackUrl] -\n   *          The URL that we should call to pass status updates\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we should use to call `status_callback_url`\n   * @param {boolean} [opts.cnamLookupEnabled] -\n   *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n   * @param {string} [opts.connectionPolicySid] -\n   *          Origination Connection Policy (to your Carrier)\n   * @param {string} [opts.fromDomainSid] -\n   *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ByocTrunkInstance\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n      'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n      'FromDomainSid': _.get(opts, 'fromDomainSid')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ByocTrunkInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ByocTrunkInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a byoc_trunk\n   *\n   * @function get\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.get = function get(sid) {\n    return new ByocTrunkContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ByocTrunkListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ByocTrunkListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkPage\n *\n * @constructor Twilio.Voice.V1.ByocTrunkPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ByocTrunkSolution} solution - Path solution\n *\n * @returns ByocTrunkPage\n */\n/* jshint ignore:end */\nByocTrunkPage = function ByocTrunkPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ByocTrunkPage.prototype, Page.prototype);\nByocTrunkPage.prototype.constructor = ByocTrunkPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ByocTrunkInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @param {ByocTrunkPayload} payload - Payload response from the API\n *\n * @returns ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkPage.prototype.getInstance = function getInstance(payload) {\n  return new ByocTrunkInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nByocTrunkPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} voiceUrl - The URL we call when receiving a call\n * @property {string} voiceMethod - The HTTP method to use with voice_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs while executing TwiML\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} statusCallbackUrl - The URL that we call with status updates\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback_url\n * @property {boolean} cnamLookupEnabled -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @property {string} connectionPolicySid -\n *          Origination Connection Policy (to your Carrier)\n * @property {string} fromDomainSid -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {ByocTrunkPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nByocTrunkInstance = function ByocTrunkInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.statusCallbackUrl = payload.status_callback_url; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.cnamLookupEnabled = payload.cnam_lookup_enabled; // jshint ignore:line\n  this.connectionPolicySid = payload.connection_policy_sid; // jshint ignore:line\n  this.fromDomainSid = payload.from_domain_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(ByocTrunkInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ByocTrunkContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nByocTrunkInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nByocTrunkContext = function ByocTrunkContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/ByocTrunks/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n    'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n    'FromDomainSid': _.get(opts, 'fromDomainSid')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nByocTrunkContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ByocTrunkList: ByocTrunkList,\n  ByocTrunkPage: ByocTrunkPage,\n  ByocTrunkInstance: ByocTrunkInstance,\n  ByocTrunkContext: ByocTrunkContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","ByocTrunkList","ByocTrunkPage","ByocTrunkInstance","ByocTrunkContext","version","ByocTrunkListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","each","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","friendlyName","friendly_name","voiceUrl","voice_url","voiceMethod","voice_method","voiceFallbackUrl","voice_fallback_url","voiceFallbackMethod","voice_fallback_method","statusCallbackUrl","status_callback_url","statusCallbackMethod","status_callback_method","cnamLookupEnabled","cnam_lookup_enabled","connectionPolicySid","connection_policy_sid","fromDomainSid","from_domain_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/voice/v1/byocTrunk.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ByocTrunkList;\nvar ByocTrunkPage;\nvar ByocTrunkInstance;\nvar ByocTrunkContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkList\n *\n * @constructor Twilio.Voice.V1.ByocTrunkList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nByocTrunkList = function ByocTrunkList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function byocTrunks\n   * @memberof Twilio.Voice.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n  /* jshint ignore:end */\n  function ByocTrunkListInstance(sid) {\n    return ByocTrunkListInstance.get(sid);\n  }\n\n  ByocTrunkListInstance._version = version;\n  // Path Solution\n  ByocTrunkListInstance._solution = {};\n  ByocTrunkListInstance._uri = `/ByocTrunks`;\n  /* jshint ignore:start */\n  /**\n   * create a ByocTrunkInstance\n   *\n   * @function create\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - A string to describe the resource\n   * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n   * @param {string} [opts.voiceMethod] - The HTTP method to use with voice_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we should call when an error occurs in executing TwiML\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method to use with voice_fallback_url\n   * @param {string} [opts.statusCallbackUrl] -\n   *          The URL that we should call to pass status updates\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we should use to call `status_callback_url`\n   * @param {boolean} [opts.cnamLookupEnabled] -\n   *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n   * @param {string} [opts.connectionPolicySid] -\n   *          Origination Connection Policy (to your Carrier)\n   * @param {string} [opts.fromDomainSid] -\n   *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ByocTrunkInstance\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n      'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n      'FromDomainSid': _.get(opts, 'fromDomainSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ByocTrunkInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ByocTrunkInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a byoc_trunk\n   *\n   * @function get\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.get = function get(sid) {\n    return new ByocTrunkContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ByocTrunkListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ByocTrunkListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkPage\n *\n * @constructor Twilio.Voice.V1.ByocTrunkPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ByocTrunkSolution} solution - Path solution\n *\n * @returns ByocTrunkPage\n */\n/* jshint ignore:end */\nByocTrunkPage = function ByocTrunkPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ByocTrunkPage.prototype, Page.prototype);\nByocTrunkPage.prototype.constructor = ByocTrunkPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ByocTrunkInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @param {ByocTrunkPayload} payload - Payload response from the API\n *\n * @returns ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkPage.prototype.getInstance = function getInstance(payload) {\n  return new ByocTrunkInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nByocTrunkPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} voiceUrl - The URL we call when receiving a call\n * @property {string} voiceMethod - The HTTP method to use with voice_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs while executing TwiML\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} statusCallbackUrl - The URL that we call with status updates\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback_url\n * @property {boolean} cnamLookupEnabled -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @property {string} connectionPolicySid -\n *          Origination Connection Policy (to your Carrier)\n * @property {string} fromDomainSid -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {ByocTrunkPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nByocTrunkInstance = function ByocTrunkInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.statusCallbackUrl = payload.status_callback_url; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.cnamLookupEnabled = payload.cnam_lookup_enabled; // jshint ignore:line\n  this.connectionPolicySid = payload.connection_policy_sid; // jshint ignore:line\n  this.fromDomainSid = payload.from_domain_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(ByocTrunkInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ByocTrunkContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nByocTrunkInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nByocTrunkContext = function ByocTrunkContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/ByocTrunks/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n    'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n    'FromDomainSid': _.get(opts, 'fromDomainSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nByocTrunkContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ByocTrunkList: ByocTrunkList,\n  ByocTrunkPage: ByocTrunkPage,\n  ByocTrunkInstance: ByocTrunkInstance,\n  ByocTrunkContext: ByocTrunkContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}