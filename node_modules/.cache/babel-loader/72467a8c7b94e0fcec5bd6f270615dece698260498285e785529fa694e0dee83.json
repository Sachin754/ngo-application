{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Messaging\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DomainConfigMessagingServiceListInstance = exports.DomainConfigMessagingServiceInstance = exports.DomainConfigMessagingServiceContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass DomainConfigMessagingServiceContextImpl {\n  constructor(_version, messagingServiceSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(messagingServiceSid)) {\n      throw new Error(\"Parameter 'messagingServiceSid' is not valid.\");\n    }\n    this._solution = {\n      messagingServiceSid\n    };\n    this._uri = `/LinkShortening/MessagingService/${messagingServiceSid}/DomainConfig`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new DomainConfigMessagingServiceInstance(operationVersion, payload, instance._solution.messagingServiceSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.DomainConfigMessagingServiceContextImpl = DomainConfigMessagingServiceContextImpl;\nclass DomainConfigMessagingServiceInstance {\n  constructor(_version, payload, messagingServiceSid) {\n    this._version = _version;\n    this.domainSid = payload.domain_sid;\n    this.configSid = payload.config_sid;\n    this.messagingServiceSid = payload.messaging_service_sid;\n    this.fallbackUrl = payload.fallback_url;\n    this.callbackUrl = payload.callback_url;\n    this.continueOnFailure = payload.continue_on_failure;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.url = payload.url;\n    this._solution = {\n      messagingServiceSid: messagingServiceSid || this.messagingServiceSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new DomainConfigMessagingServiceContextImpl(this._version, this._solution.messagingServiceSid);\n    return this._context;\n  }\n  /**\n   * Fetch a DomainConfigMessagingServiceInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed DomainConfigMessagingServiceInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      domainSid: this.domainSid,\n      configSid: this.configSid,\n      messagingServiceSid: this.messagingServiceSid,\n      fallbackUrl: this.fallbackUrl,\n      callbackUrl: this.callbackUrl,\n      continueOnFailure: this.continueOnFailure,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.DomainConfigMessagingServiceInstance = DomainConfigMessagingServiceInstance;\nfunction DomainConfigMessagingServiceListInstance(version) {\n  const instance = messagingServiceSid => instance.get(messagingServiceSid);\n  instance.get = function get(messagingServiceSid) {\n    return new DomainConfigMessagingServiceContextImpl(version, messagingServiceSid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.DomainConfigMessagingServiceListInstance = DomainConfigMessagingServiceListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","DomainConfigMessagingServiceListInstance","DomainConfigMessagingServiceInstance","DomainConfigMessagingServiceContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","messagingServiceSid","isValidPathParam","Error","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","domainSid","domain_sid","configSid","config_sid","messaging_service_sid","fallbackUrl","fallback_url","callbackUrl","callback_url","continueOnFailure","continue_on_failure","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/messaging/v1/domainConfigMessagingService.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Messaging\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DomainConfigMessagingServiceListInstance = exports.DomainConfigMessagingServiceInstance = exports.DomainConfigMessagingServiceContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass DomainConfigMessagingServiceContextImpl {\n    constructor(_version, messagingServiceSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(messagingServiceSid)) {\n            throw new Error(\"Parameter 'messagingServiceSid' is not valid.\");\n        }\n        this._solution = { messagingServiceSid };\n        this._uri = `/LinkShortening/MessagingService/${messagingServiceSid}/DomainConfig`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new DomainConfigMessagingServiceInstance(operationVersion, payload, instance._solution.messagingServiceSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.DomainConfigMessagingServiceContextImpl = DomainConfigMessagingServiceContextImpl;\nclass DomainConfigMessagingServiceInstance {\n    constructor(_version, payload, messagingServiceSid) {\n        this._version = _version;\n        this.domainSid = payload.domain_sid;\n        this.configSid = payload.config_sid;\n        this.messagingServiceSid = payload.messaging_service_sid;\n        this.fallbackUrl = payload.fallback_url;\n        this.callbackUrl = payload.callback_url;\n        this.continueOnFailure = payload.continue_on_failure;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.url = payload.url;\n        this._solution = {\n            messagingServiceSid: messagingServiceSid || this.messagingServiceSid,\n        };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new DomainConfigMessagingServiceContextImpl(this._version, this._solution.messagingServiceSid);\n        return this._context;\n    }\n    /**\n     * Fetch a DomainConfigMessagingServiceInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed DomainConfigMessagingServiceInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            domainSid: this.domainSid,\n            configSid: this.configSid,\n            messagingServiceSid: this.messagingServiceSid,\n            fallbackUrl: this.fallbackUrl,\n            callbackUrl: this.callbackUrl,\n            continueOnFailure: this.continueOnFailure,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.DomainConfigMessagingServiceInstance = DomainConfigMessagingServiceInstance;\nfunction DomainConfigMessagingServiceListInstance(version) {\n    const instance = ((messagingServiceSid) => instance.get(messagingServiceSid));\n    instance.get = function get(messagingServiceSid) {\n        return new DomainConfigMessagingServiceContextImpl(version, messagingServiceSid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.DomainConfigMessagingServiceListInstance = DomainConfigMessagingServiceListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}