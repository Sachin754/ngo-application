{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar ItemAssignmentList;\nvar ItemAssignmentPage;\nvar ItemAssignmentInstance;\nvar ItemAssignmentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n * @param {string} bundleSid -\n *          The unique string that identifies the Bundle resource.\n */\n/* jshint ignore:end */\nItemAssignmentList = function ItemAssignmentList(version, bundleSid) {\n  /* jshint ignore:start */\n  /**\n   * @function itemAssignments\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext}\n   */\n  /* jshint ignore:end */\n  function ItemAssignmentListInstance(sid) {\n    return ItemAssignmentListInstance.get(sid);\n  }\n  ItemAssignmentListInstance._version = version;\n  // Path Solution\n  ItemAssignmentListInstance._solution = {\n    bundleSid: bundleSid\n  };\n  ItemAssignmentListInstance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/ItemAssignments`;\n  /* jshint ignore:start */\n  /**\n   * create a ItemAssignmentInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.objectSid - The sid of an object bag\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ItemAssignmentInstance\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.objectSid)) {\n      throw new Error('Required parameter \"opts.objectSid\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'ObjectSid': _.get(opts, 'objectSid')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ItemAssignmentInstance(this._version, payload, this._solution.bundleSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ItemAssignmentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ItemAssignmentInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ItemAssignmentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ItemAssignmentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ItemAssignmentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ItemAssignmentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a item_assignment\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext}\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.get = function get(sid) {\n    return new ItemAssignmentContext(this._version, this._solution.bundleSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ItemAssignmentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ItemAssignmentListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentPage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ItemAssignmentSolution} solution - Path solution\n *\n * @returns ItemAssignmentPage\n */\n/* jshint ignore:end */\nItemAssignmentPage = function ItemAssignmentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ItemAssignmentPage.prototype, Page.prototype);\nItemAssignmentPage.prototype.constructor = ItemAssignmentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ItemAssignmentInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentPage#\n *\n * @param {ItemAssignmentPayload} payload - Payload response from the API\n *\n * @returns ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentPage.prototype.getInstance = function getInstance(payload) {\n  return new ItemAssignmentInstance(this._version, payload, this._solution.bundleSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nItemAssignmentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nItemAssignmentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} bundleSid -\n *          The unique string that identifies the Bundle resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} objectSid - The sid of an object bag\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {string} url - The absolute URL of the Identity resource\n *\n * @param {V2} version - Version of the resource\n * @param {ItemAssignmentPayload} payload - The instance payload\n * @param {sid} bundleSid - The unique string that identifies the Bundle resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nItemAssignmentInstance = function ItemAssignmentInstance(version, payload, bundleSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.objectSid = payload.object_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    bundleSid: bundleSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(ItemAssignmentInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ItemAssignmentContext(this._version, this._solution.bundleSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ItemAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ItemAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nItemAssignmentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nItemAssignmentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} bundleSid - The unique string that identifies the resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nItemAssignmentContext = function ItemAssignmentContext(version, bundleSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    bundleSid: bundleSid,\n    sid: sid\n  };\n  this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/ItemAssignments/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ItemAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ItemAssignmentInstance(this._version, payload, this._solution.bundleSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ItemAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nItemAssignmentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nItemAssignmentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ItemAssignmentList: ItemAssignmentList,\n  ItemAssignmentPage: ItemAssignmentPage,\n  ItemAssignmentInstance: ItemAssignmentInstance,\n  ItemAssignmentContext: ItemAssignmentContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","ItemAssignmentList","ItemAssignmentPage","ItemAssignmentInstance","ItemAssignmentContext","version","bundleSid","ItemAssignmentListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","objectSid","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","bundle_sid","accountSid","account_sid","object_sid","dateCreated","iso8601DateTime","date_created","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/itemAssignment.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar ItemAssignmentList;\nvar ItemAssignmentPage;\nvar ItemAssignmentInstance;\nvar ItemAssignmentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n * @param {string} bundleSid -\n *          The unique string that identifies the Bundle resource.\n */\n/* jshint ignore:end */\nItemAssignmentList = function ItemAssignmentList(version, bundleSid) {\n  /* jshint ignore:start */\n  /**\n   * @function itemAssignments\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext}\n   */\n  /* jshint ignore:end */\n  function ItemAssignmentListInstance(sid) {\n    return ItemAssignmentListInstance.get(sid);\n  }\n\n  ItemAssignmentListInstance._version = version;\n  // Path Solution\n  ItemAssignmentListInstance._solution = {bundleSid: bundleSid};\n  ItemAssignmentListInstance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/ItemAssignments`;\n  /* jshint ignore:start */\n  /**\n   * create a ItemAssignmentInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.objectSid - The sid of an object bag\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ItemAssignmentInstance\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.objectSid)) {\n      throw new Error('Required parameter \"opts.objectSid\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'ObjectSid': _.get(opts, 'objectSid')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ItemAssignmentInstance(\n        this._version,\n        payload,\n        this._solution.bundleSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ItemAssignmentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ItemAssignmentInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ItemAssignmentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ItemAssignmentPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ItemAssignmentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ItemAssignmentPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a item_assignment\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext}\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.get = function get(sid) {\n    return new ItemAssignmentContext(this._version, this._solution.bundleSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ItemAssignmentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ItemAssignmentListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ItemAssignmentListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentPage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ItemAssignmentSolution} solution - Path solution\n *\n * @returns ItemAssignmentPage\n */\n/* jshint ignore:end */\nItemAssignmentPage = function ItemAssignmentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ItemAssignmentPage.prototype, Page.prototype);\nItemAssignmentPage.prototype.constructor = ItemAssignmentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ItemAssignmentInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentPage#\n *\n * @param {ItemAssignmentPayload} payload - Payload response from the API\n *\n * @returns ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentPage.prototype.getInstance = function getInstance(payload) {\n  return new ItemAssignmentInstance(this._version, payload, this._solution.bundleSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nItemAssignmentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nItemAssignmentPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} bundleSid -\n *          The unique string that identifies the Bundle resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} objectSid - The sid of an object bag\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {string} url - The absolute URL of the Identity resource\n *\n * @param {V2} version - Version of the resource\n * @param {ItemAssignmentPayload} payload - The instance payload\n * @param {sid} bundleSid - The unique string that identifies the Bundle resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nItemAssignmentInstance = function ItemAssignmentInstance(version, payload,\n                                                          bundleSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.objectSid = payload.object_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {bundleSid: bundleSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(ItemAssignmentInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ItemAssignmentContext(\n          this._version,\n          this._solution.bundleSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ItemAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ItemAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nItemAssignmentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nItemAssignmentInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ItemAssignmentContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} bundleSid - The unique string that identifies the resource.\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nItemAssignmentContext = function ItemAssignmentContext(version, bundleSid, sid)\n                                                        {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {bundleSid: bundleSid, sid: sid, };\n  this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/ItemAssignments/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ItemAssignmentInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ItemAssignmentInstance(\n      this._version,\n      payload,\n      this._solution.bundleSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ItemAssignmentInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ItemAssignmentInstance\n */\n/* jshint ignore:end */\nItemAssignmentContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nItemAssignmentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nItemAssignmentContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ItemAssignmentList: ItemAssignmentList,\n  ItemAssignmentPage: ItemAssignmentPage,\n  ItemAssignmentInstance: ItemAssignmentInstance,\n  ItemAssignmentContext: ItemAssignmentContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}