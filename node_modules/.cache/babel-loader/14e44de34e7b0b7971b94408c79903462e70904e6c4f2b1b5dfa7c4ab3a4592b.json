{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar ChannelList = require('./brandedChannel/channel').ChannelList;\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar BrandedChannelList;\nvar BrandedChannelPage;\nvar BrandedChannelInstance;\nvar BrandedChannelContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelList\n *\n * @param {Twilio.Preview.TrustedComms} version - Version of the resource\n */\n/* jshint ignore:end */\nBrandedChannelList = function BrandedChannelList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function brandedChannels\n   * @memberof Twilio.Preview.TrustedComms#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n  /* jshint ignore:end */\n  function BrandedChannelListInstance(sid) {\n    return BrandedChannelListInstance.get(sid);\n  }\n  BrandedChannelListInstance._version = version;\n  // Path Solution\n  BrandedChannelListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a branded_channel\n   *\n   * @function get\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @param {string} sid - Branded Channel Sid.\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n  /* jshint ignore:end */\n  BrandedChannelListInstance.get = function get(sid) {\n    return new BrandedChannelContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  BrandedChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  BrandedChannelListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return BrandedChannelListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelPage\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BrandedChannelSolution} solution - Path solution\n *\n * @returns BrandedChannelPage\n */\n/* jshint ignore:end */\nBrandedChannelPage = function BrandedChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(BrandedChannelPage.prototype, Page.prototype);\nBrandedChannelPage.prototype.constructor = BrandedChannelPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of BrandedChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @param {BrandedChannelPayload} payload - Payload response from the API\n *\n * @returns BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new BrandedChannelInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nBrandedChannelPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelInstance\n *\n * @property {string} accountSid - Account Sid.\n * @property {string} businessSid - Business Sid.\n * @property {string} brandSid - Brand Sid.\n * @property {string} sid - Branded Channel Sid.\n * @property {string} links - Nested resource URLs.\n * @property {string} url - The URL of this resource.\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {BrandedChannelPayload} payload - The instance payload\n * @param {sid} sid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nBrandedChannelInstance = function BrandedChannelInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.businessSid = payload.business_sid; // jshint ignore:line\n  this.brandSid = payload.brand_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(BrandedChannelInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new BrandedChannelContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the channels\n *\n * @function channels\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList}\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.channels = function channels() {\n  return this._proxy.channels;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nBrandedChannelInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext\n *\n * @property {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList} channels -\n *          channels resource\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {sid} sid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nBrandedChannelContext = function BrandedChannelContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/BrandedChannels/${sid}`;\n\n  // Dependents\n  this._channels = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BrandedChannelInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(BrandedChannelContext.prototype, 'channels', {\n  get: function () {\n    if (!this._channels) {\n      this._channels = new ChannelList(this._version, this._solution.sid);\n    }\n    return this._channels;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nBrandedChannelContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  BrandedChannelList: BrandedChannelList,\n  BrandedChannelPage: BrandedChannelPage,\n  BrandedChannelInstance: BrandedChannelInstance,\n  BrandedChannelContext: BrandedChannelContext\n};","map":{"version":3,"names":["Q","require","_","util","ChannelList","Page","values","BrandedChannelList","BrandedChannelPage","BrandedChannelInstance","BrandedChannelContext","version","BrandedChannelListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","businessSid","business_sid","brandSid","brand_sid","links","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","channels","_uri","_channels","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/preview/trusted_comms/brandedChannel.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar ChannelList = require('./brandedChannel/channel').ChannelList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar BrandedChannelList;\nvar BrandedChannelPage;\nvar BrandedChannelInstance;\nvar BrandedChannelContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelList\n *\n * @param {Twilio.Preview.TrustedComms} version - Version of the resource\n */\n/* jshint ignore:end */\nBrandedChannelList = function BrandedChannelList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function brandedChannels\n   * @memberof Twilio.Preview.TrustedComms#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n  /* jshint ignore:end */\n  function BrandedChannelListInstance(sid) {\n    return BrandedChannelListInstance.get(sid);\n  }\n\n  BrandedChannelListInstance._version = version;\n  // Path Solution\n  BrandedChannelListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a branded_channel\n   *\n   * @function get\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @param {string} sid - Branded Channel Sid.\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n  /* jshint ignore:end */\n  BrandedChannelListInstance.get = function get(sid) {\n    return new BrandedChannelContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  BrandedChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BrandedChannelListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BrandedChannelListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelPage\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BrandedChannelSolution} solution - Path solution\n *\n * @returns BrandedChannelPage\n */\n/* jshint ignore:end */\nBrandedChannelPage = function BrandedChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BrandedChannelPage.prototype, Page.prototype);\nBrandedChannelPage.prototype.constructor = BrandedChannelPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of BrandedChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @param {BrandedChannelPayload} payload - Payload response from the API\n *\n * @returns BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new BrandedChannelInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBrandedChannelPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelInstance\n *\n * @property {string} accountSid - Account Sid.\n * @property {string} businessSid - Business Sid.\n * @property {string} brandSid - Brand Sid.\n * @property {string} sid - Branded Channel Sid.\n * @property {string} links - Nested resource URLs.\n * @property {string} url - The URL of this resource.\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {BrandedChannelPayload} payload - The instance payload\n * @param {sid} sid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nBrandedChannelInstance = function BrandedChannelInstance(version, payload, sid)\n                                                          {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.businessSid = payload.business_sid; // jshint ignore:line\n  this.brandSid = payload.brand_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(BrandedChannelInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new BrandedChannelContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the channels\n *\n * @function channels\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList}\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.channels = function channels() {\n  return this._proxy.channels;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBrandedChannelInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext\n *\n * @property {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList} channels -\n *          channels resource\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {sid} sid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nBrandedChannelContext = function BrandedChannelContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/BrandedChannels/${sid}`;\n\n  // Dependents\n  this._channels = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BrandedChannelInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(BrandedChannelContext.prototype,\n  'channels', {\n    get: function() {\n      if (!this._channels) {\n        this._channels = new ChannelList(this._version, this._solution.sid);\n      }\n      return this._channels;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBrandedChannelContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BrandedChannelList: BrandedChannelList,\n  BrandedChannelPage: BrandedChannelPage,\n  BrandedChannelInstance: BrandedChannelInstance,\n  BrandedChannelContext: BrandedChannelContext\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAE;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAE;AAC7B,IAAIG,WAAW,GAAGH,OAAO,CAAC,0BAA0B,CAAC,CAACG,WAAW;AACjE,IAAIC,IAAI,GAAGJ,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAE;AAC3C,IAAIK,MAAM,GAAGL,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAE;;AAE/C,IAAIM,kBAAkB;AACtB,IAAIC,kBAAkB;AACtB,IAAIC,sBAAsB;AAC1B,IAAIC,qBAAqB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,kBAAkB,GAAG,SAASA,kBAAkBA,CAACI,OAAO,EAAE;EACxD;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACA,SAASC,0BAA0BA,CAACC,GAAG,EAAE;IACvC,OAAOD,0BAA0B,CAACE,GAAG,CAACD,GAAG,CAAC;EAC5C;EAEAD,0BAA0B,CAACG,QAAQ,GAAGJ,OAAO;EAC7C;EACAC,0BAA0B,CAACI,SAAS,GAAG,CAAC,CAAC;EACzC;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAJ,0BAA0B,CAACE,GAAG,GAAG,SAASA,GAAGA,CAACD,GAAG,EAAE;IACjD,OAAO,IAAIH,qBAAqB,CAAC,IAAI,CAACK,QAAQ,EAAEF,GAAG,CAAC;EACtD,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAD,0BAA0B,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IACpD,OAAO,IAAI,CAACD,SAAS;EACvB,CAAC;EAEDJ,0BAA0B,CAACT,IAAI,CAACe,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EACpEC,OAAO,EAAE;IACX,OAAOlB,IAAI,CAACe,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;EAC7C,CAAC;EAED,OAAOT,0BAA0B;AACnC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,kBAAkB,GAAG,SAASA,kBAAkBA,CAACG,OAAO,EAAEW,QAAQ,EAAEC,QAAQ,EAAE;EAC5E;EACA,IAAI,CAACP,SAAS,GAAGO,QAAQ;EAEzBlB,IAAI,CAACmB,SAAS,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,EAAEf,OAAO,EAAEW,QAAQ,EAAE,IAAI,CAACN,SAAS,CAAC;AAC1E,CAAC;AAEDd,CAAC,CAACyB,MAAM,CAACnB,kBAAkB,CAACgB,SAAS,EAAEnB,IAAI,CAACmB,SAAS,CAAC;AACtDhB,kBAAkB,CAACgB,SAAS,CAACC,WAAW,GAAGjB,kBAAkB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,kBAAkB,CAACgB,SAAS,CAACI,WAAW,GAAG,SAASA,WAAWA,CAACC,OAAO,EAAE;EACvE,OAAO,IAAIpB,sBAAsB,CAAC,IAAI,CAACM,QAAQ,EAAEc,OAAO,CAAC;AAC3D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArB,kBAAkB,CAACgB,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACtD,IAAIa,KAAK,GAAG,CAAC,CAAC;EACd5B,CAAC,CAAC6B,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAAC/B,CAAC,CAACgC,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAE/B,CAAC,CAACiC,UAAU,CAACH,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAEDtB,kBAAkB,CAACgB,SAAS,CAACrB,IAAI,CAACe,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EACtEC,OAAO,EAAE;EACX,OAAOlB,IAAI,CAACe,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,sBAAsB,GAAG,SAASA,sBAAsBA,CAACE,OAAO,EAAEkB,OAAO,EAAEhB,GAAG,EACpB;EACxD,IAAI,CAACE,QAAQ,GAAGJ,OAAO;;EAEvB;EACA,IAAI,CAACyB,UAAU,GAAGP,OAAO,CAACQ,WAAW,CAAC,CAAC;EACvC,IAAI,CAACC,WAAW,GAAGT,OAAO,CAACU,YAAY,CAAC,CAAC;EACzC,IAAI,CAACC,QAAQ,GAAGX,OAAO,CAACY,SAAS,CAAC,CAAC;EACnC,IAAI,CAAC5B,GAAG,GAAGgB,OAAO,CAAChB,GAAG,CAAC,CAAC;EACxB,IAAI,CAAC6B,KAAK,GAAGb,OAAO,CAACa,KAAK,CAAC,CAAC;EAC5B,IAAI,CAACC,GAAG,GAAGd,OAAO,CAACc,GAAG,CAAC,CAAC;;EAExB;EACA,IAAI,CAACC,QAAQ,GAAGC,SAAS;EACzB,IAAI,CAAC7B,SAAS,GAAG;IAACH,GAAG,EAAEA,GAAG,IAAI,IAAI,CAACA;EAAK,CAAC;AAC3C,CAAC;AAEDiC,MAAM,CAACC,cAAc,CAACtC,sBAAsB,CAACe,SAAS,EACpD,QAAQ,EAAE;EACRV,GAAG,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC,IAAI,CAAC8B,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,GAAG,IAAIlC,qBAAqB,CAAC,IAAI,CAACK,QAAQ,EAAE,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;IAC9E;IAEA,OAAO,IAAI,CAAC+B,QAAQ;EACtB;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnC,sBAAsB,CAACe,SAAS,CAACwB,KAAK,GAAG,SAASA,KAAKA,CAACC,QAAQ,EAAE;EAChE,OAAO,IAAI,CAACC,MAAM,CAACF,KAAK,CAACC,QAAQ,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxC,sBAAsB,CAACe,SAAS,CAAC2B,QAAQ,GAAG,SAASA,QAAQA,CAAA,EAAG;EAC9D,OAAO,IAAI,CAACD,MAAM,CAACC,QAAQ;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1C,sBAAsB,CAACe,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC1D,IAAIa,KAAK,GAAG,CAAC,CAAC;EACd5B,CAAC,CAAC6B,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAAC/B,CAAC,CAACgC,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAE/B,CAAC,CAACiC,UAAU,CAACH,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAEDrB,sBAAsB,CAACe,SAAS,CAACrB,IAAI,CAACe,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAC1EC,OAAO,EAAE;EACX,OAAOlB,IAAI,CAACe,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,OAAO,EAAEE,GAAG,EAAE;EACnE,IAAI,CAACE,QAAQ,GAAGJ,OAAO;;EAEvB;EACA,IAAI,CAACK,SAAS,GAAG;IAACH,GAAG,EAAEA;EAAK,CAAC;EAC7B,IAAI,CAACuC,IAAI,GAAI,oBAAmBvC,GAAI,EAAC;;EAErC;EACA,IAAI,CAACwC,SAAS,GAAGR,SAAS;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnC,qBAAqB,CAACc,SAAS,CAACwB,KAAK,GAAG,SAASA,KAAKA,CAACC,QAAQ,EAAE;EAC/D,IAAIK,QAAQ,GAAGtD,CAAC,CAACuD,KAAK,CAAC,CAAC;EACxB,IAAIC,OAAO,GAAG,IAAI,CAACzC,QAAQ,CAACiC,KAAK,CAAC;IAACS,GAAG,EAAE,IAAI,CAACL,IAAI;IAAEM,MAAM,EAAE;EAAK,CAAC,CAAC;EAElEF,OAAO,GAAGA,OAAO,CAACG,IAAI,CAAC,UAAS9B,OAAO,EAAE;IACvCyB,QAAQ,CAACM,OAAO,CAAC,IAAInD,sBAAsB,CAAC,IAAI,CAACM,QAAQ,EAAEc,OAAO,EAAE,IAAI,CAACb,SAAS,CAACH,GAAG,CAAC,CAAC;EAC1F,CAAC,CAACgD,IAAI,CAAC,IAAI,CAAC,CAAC;EAEbL,OAAO,CAACM,KAAK,CAAC,UAASC,KAAK,EAAE;IAC5BT,QAAQ,CAACU,MAAM,CAACD,KAAK,CAAC;EACxB,CAAC,CAAC;EAEF,IAAI7D,CAAC,CAACiC,UAAU,CAACc,QAAQ,CAAC,EAAE;IAC1BK,QAAQ,CAACE,OAAO,CAACS,OAAO,CAAChB,QAAQ,CAAC;EACpC;EAEA,OAAOK,QAAQ,CAACE,OAAO;AACzB,CAAC;AAEDV,MAAM,CAACC,cAAc,CAACrC,qBAAqB,CAACc,SAAS,EACnD,UAAU,EAAE;EACVV,GAAG,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC,IAAI,CAACuC,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,GAAG,IAAIjD,WAAW,CAAC,IAAI,CAACW,QAAQ,EAAE,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;IACrE;IACA,OAAO,IAAI,CAACwC,SAAS;EACvB;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA3C,qBAAqB,CAACc,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACzD,OAAO,IAAI,CAACD,SAAS;AACvB,CAAC;AAEDN,qBAAqB,CAACc,SAAS,CAACrB,IAAI,CAACe,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EACzEC,OAAO,EAAE;EACX,OAAOlB,IAAI,CAACe,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;AAED6C,MAAM,CAACC,OAAO,GAAG;EACf5D,kBAAkB,EAAEA,kBAAkB;EACtCC,kBAAkB,EAAEA,kBAAkB;EACtCC,sBAAsB,EAAEA,sBAAsB;EAC9CC,qBAAqB,EAAEA;AACzB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}