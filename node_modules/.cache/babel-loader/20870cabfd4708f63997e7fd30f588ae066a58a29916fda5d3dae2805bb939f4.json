{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nconst ApiBase_1 = __importDefault(require(\"./ApiBase\"));\nclass Api extends ApiBase_1.default {\n  get account() {\n    return this.v2010.account;\n  }\n  get accounts() {\n    return this.v2010.accounts;\n  }\n  /**\n   * @deprecated - Use account.addresses instead\n   */\n  get addresses() {\n    console.warn(\"addresses is deprecated. Use account.addresses instead.\");\n    return this.account.addresses;\n  }\n  /**\n   * @deprecated - Use account.applications instead\n   */\n  get applications() {\n    console.warn(\"applications is deprecated. Use account.applications instead.\");\n    return this.account.applications;\n  }\n  /**\n   * @deprecated - Use account.authorizedConnectApps instead\n   */\n  get authorizedConnectApps() {\n    console.warn(\"authorizedConnectApps is deprecated. Use account.authorizedConnectApps instead.\");\n    return this.account.authorizedConnectApps;\n  }\n  /**\n   * @deprecated - Use account.availablePhoneNumbers instead\n   */\n  get availablePhoneNumbers() {\n    console.warn(\"availablePhoneNumbers is deprecated. Use account.availablePhoneNumbers instead.\");\n    return this.account.availablePhoneNumbers;\n  }\n  /**\n   * @deprecated - Use account.balance instead\n   */\n  get balance() {\n    console.warn(\"balance is deprecated. Use account.balance instead.\");\n    return this.account.balance;\n  }\n  /**\n   * @deprecated - Use account.calls instead\n   */\n  get calls() {\n    console.warn(\"calls is deprecated. Use account.calls instead.\");\n    return this.account.calls;\n  }\n  /**\n   * @deprecated - Use account.conferences instead\n   */\n  get conferences() {\n    console.warn(\"conferences is deprecated. Use account.conferences instead.\");\n    return this.account.conferences;\n  }\n  /**\n   * @deprecated - Use account.connectApps instead\n   */\n  get connectApps() {\n    console.warn(\"connectApps is deprecated. Use account.connectApps instead.\");\n    return this.account.connectApps;\n  }\n  /**\n   * @deprecated - Use account.incomingPhoneNumbers instead\n   */\n  get incomingPhoneNumbers() {\n    console.warn(\"incomingPhoneNumbers is deprecated. Use account.incomingPhoneNumbers instead.\");\n    return this.account.incomingPhoneNumbers;\n  }\n  /**\n   * @deprecated - Use account.keys instead\n   */\n  get keys() {\n    console.warn(\"keys is deprecated. Use account.keys instead.\");\n    return this.account.keys;\n  }\n  /**\n   * @deprecated - Use account.messages instead\n   */\n  get messages() {\n    console.warn(\"messages is deprecated. Use account.messages instead.\");\n    return this.account.messages;\n  }\n  /**\n   * @deprecated - Use account.newKeys instead\n   */\n  get newKeys() {\n    console.warn(\"newKeys is deprecated. Use account.newKeys instead.\");\n    return this.account.newKeys;\n  }\n  /**\n   * @deprecated - Use account.newSigningKeys instead\n   */\n  get newSigningKeys() {\n    console.warn(\"newSigningKeys is deprecated. Use account.newSigningKeys instead.\");\n    return this.account.newSigningKeys;\n  }\n  /**\n   * @deprecated - Use account.notifications instead\n   */\n  get notifications() {\n    console.warn(\"notifications is deprecated. Use account.notifications instead.\");\n    return this.account.notifications;\n  }\n  /**\n   * @deprecated - Use account.outgoingCallerIds instead\n   */\n  get outgoingCallerIds() {\n    console.warn(\"outgoingCallerIds is deprecated. Use account.outgoingCallerIds instead.\");\n    return this.account.outgoingCallerIds;\n  }\n  /**\n   * @deprecated - Use account.queues instead\n   */\n  get queues() {\n    console.warn(\"queues is deprecated. Use account.queues instead.\");\n    return this.account.queues;\n  }\n  /**\n   * @deprecated - Use account.recordings instead\n   */\n  get recordings() {\n    console.warn(\"recordings is deprecated. Use account.recordings instead.\");\n    return this.account.recordings;\n  }\n  /**\n   * @deprecated - Use account.signingKeys instead\n   */\n  get signingKeys() {\n    console.warn(\"signingKeys is deprecated. Use account.signingKeys instead.\");\n    return this.account.signingKeys;\n  }\n  /**\n   * @deprecated - Use account.sip instead\n   */\n  get sip() {\n    console.warn(\"sip is deprecated. Use account.sip instead.\");\n    return this.account.sip;\n  }\n  /**\n   * @deprecated - Use account.shortCodes instead\n   */\n  get shortCodes() {\n    console.warn(\"shortCodes is deprecated. Use account.shortCodes instead.\");\n    return this.account.shortCodes;\n  }\n  /**\n   * @deprecated - Use account.tokens instead\n   */\n  get tokens() {\n    console.warn(\"tokens is deprecated. Use account.tokens instead.\");\n    return this.account.tokens;\n  }\n  /**\n   * @deprecated - Use account.transcriptions instead\n   */\n  get transcriptions() {\n    console.warn(\"transcriptions is deprecated. Use account.transcriptions instead.\");\n    return this.account.transcriptions;\n  }\n  /**\n   * @deprecated - Use account.usage instead\n   */\n  get usage() {\n    console.warn(\"usage is deprecated. Use account.usage instead.\");\n    return this.account.usage;\n  }\n  /**\n   * @deprecated - Use account.validationRequests instead\n   */\n  get validationRequests() {\n    console.warn(\"validationRequests is deprecated. Use account.validationRequests instead.\");\n    return this.account.validationRequests;\n  }\n}\nmodule.exports = Api;","map":{"version":3,"names":["__importDefault","mod","__esModule","ApiBase_1","require","Api","default","account","v2010","accounts","addresses","console","warn","applications","authorizedConnectApps","availablePhoneNumbers","balance","calls","conferences","connectApps","incomingPhoneNumbers","keys","messages","newKeys","newSigningKeys","notifications","outgoingCallerIds","queues","recordings","signingKeys","sip","shortCodes","tokens","transcriptions","usage","validationRequests","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/Api.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst ApiBase_1 = __importDefault(require(\"./ApiBase\"));\nclass Api extends ApiBase_1.default {\n    get account() {\n        return this.v2010.account;\n    }\n    get accounts() {\n        return this.v2010.accounts;\n    }\n    /**\n     * @deprecated - Use account.addresses instead\n     */\n    get addresses() {\n        console.warn(\"addresses is deprecated. Use account.addresses instead.\");\n        return this.account.addresses;\n    }\n    /**\n     * @deprecated - Use account.applications instead\n     */\n    get applications() {\n        console.warn(\"applications is deprecated. Use account.applications instead.\");\n        return this.account.applications;\n    }\n    /**\n     * @deprecated - Use account.authorizedConnectApps instead\n     */\n    get authorizedConnectApps() {\n        console.warn(\"authorizedConnectApps is deprecated. Use account.authorizedConnectApps instead.\");\n        return this.account.authorizedConnectApps;\n    }\n    /**\n     * @deprecated - Use account.availablePhoneNumbers instead\n     */\n    get availablePhoneNumbers() {\n        console.warn(\"availablePhoneNumbers is deprecated. Use account.availablePhoneNumbers instead.\");\n        return this.account.availablePhoneNumbers;\n    }\n    /**\n     * @deprecated - Use account.balance instead\n     */\n    get balance() {\n        console.warn(\"balance is deprecated. Use account.balance instead.\");\n        return this.account.balance;\n    }\n    /**\n     * @deprecated - Use account.calls instead\n     */\n    get calls() {\n        console.warn(\"calls is deprecated. Use account.calls instead.\");\n        return this.account.calls;\n    }\n    /**\n     * @deprecated - Use account.conferences instead\n     */\n    get conferences() {\n        console.warn(\"conferences is deprecated. Use account.conferences instead.\");\n        return this.account.conferences;\n    }\n    /**\n     * @deprecated - Use account.connectApps instead\n     */\n    get connectApps() {\n        console.warn(\"connectApps is deprecated. Use account.connectApps instead.\");\n        return this.account.connectApps;\n    }\n    /**\n     * @deprecated - Use account.incomingPhoneNumbers instead\n     */\n    get incomingPhoneNumbers() {\n        console.warn(\"incomingPhoneNumbers is deprecated. Use account.incomingPhoneNumbers instead.\");\n        return this.account.incomingPhoneNumbers;\n    }\n    /**\n     * @deprecated - Use account.keys instead\n     */\n    get keys() {\n        console.warn(\"keys is deprecated. Use account.keys instead.\");\n        return this.account.keys;\n    }\n    /**\n     * @deprecated - Use account.messages instead\n     */\n    get messages() {\n        console.warn(\"messages is deprecated. Use account.messages instead.\");\n        return this.account.messages;\n    }\n    /**\n     * @deprecated - Use account.newKeys instead\n     */\n    get newKeys() {\n        console.warn(\"newKeys is deprecated. Use account.newKeys instead.\");\n        return this.account.newKeys;\n    }\n    /**\n     * @deprecated - Use account.newSigningKeys instead\n     */\n    get newSigningKeys() {\n        console.warn(\"newSigningKeys is deprecated. Use account.newSigningKeys instead.\");\n        return this.account.newSigningKeys;\n    }\n    /**\n     * @deprecated - Use account.notifications instead\n     */\n    get notifications() {\n        console.warn(\"notifications is deprecated. Use account.notifications instead.\");\n        return this.account.notifications;\n    }\n    /**\n     * @deprecated - Use account.outgoingCallerIds instead\n     */\n    get outgoingCallerIds() {\n        console.warn(\"outgoingCallerIds is deprecated. Use account.outgoingCallerIds instead.\");\n        return this.account.outgoingCallerIds;\n    }\n    /**\n     * @deprecated - Use account.queues instead\n     */\n    get queues() {\n        console.warn(\"queues is deprecated. Use account.queues instead.\");\n        return this.account.queues;\n    }\n    /**\n     * @deprecated - Use account.recordings instead\n     */\n    get recordings() {\n        console.warn(\"recordings is deprecated. Use account.recordings instead.\");\n        return this.account.recordings;\n    }\n    /**\n     * @deprecated - Use account.signingKeys instead\n     */\n    get signingKeys() {\n        console.warn(\"signingKeys is deprecated. Use account.signingKeys instead.\");\n        return this.account.signingKeys;\n    }\n    /**\n     * @deprecated - Use account.sip instead\n     */\n    get sip() {\n        console.warn(\"sip is deprecated. Use account.sip instead.\");\n        return this.account.sip;\n    }\n    /**\n     * @deprecated - Use account.shortCodes instead\n     */\n    get shortCodes() {\n        console.warn(\"shortCodes is deprecated. Use account.shortCodes instead.\");\n        return this.account.shortCodes;\n    }\n    /**\n     * @deprecated - Use account.tokens instead\n     */\n    get tokens() {\n        console.warn(\"tokens is deprecated. Use account.tokens instead.\");\n        return this.account.tokens;\n    }\n    /**\n     * @deprecated - Use account.transcriptions instead\n     */\n    get transcriptions() {\n        console.warn(\"transcriptions is deprecated. Use account.transcriptions instead.\");\n        return this.account.transcriptions;\n    }\n    /**\n     * @deprecated - Use account.usage instead\n     */\n    get usage() {\n        console.warn(\"usage is deprecated. Use account.usage instead.\");\n        return this.account.usage;\n    }\n    /**\n     * @deprecated - Use account.validationRequests instead\n     */\n    get validationRequests() {\n        console.warn(\"validationRequests is deprecated. Use account.validationRequests instead.\");\n        return this.account.validationRequests;\n    }\n}\nmodule.exports = Api;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}