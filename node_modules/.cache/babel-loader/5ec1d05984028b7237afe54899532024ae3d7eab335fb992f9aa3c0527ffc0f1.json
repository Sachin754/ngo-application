{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Oauth\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpenidDiscoveryListInstance = exports.OpenidDiscoveryInstance = exports.OpenidDiscoveryContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nclass OpenidDiscoveryContextImpl {\n  constructor(_version) {\n    this._version = _version;\n    this._solution = {};\n    this._uri = `/.well-known/openid-configuration`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new OpenidDiscoveryInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.OpenidDiscoveryContextImpl = OpenidDiscoveryContextImpl;\nclass OpenidDiscoveryInstance {\n  constructor(_version, payload) {\n    this._version = _version;\n    this.issuer = payload.issuer;\n    this.authorizationEndpoint = payload.authorization_endpoint;\n    this.deviceAuthorizationEndpoint = payload.device_authorization_endpoint;\n    this.tokenEndpoint = payload.token_endpoint;\n    this.userinfoEndpoint = payload.userinfo_endpoint;\n    this.revocationEndpoint = payload.revocation_endpoint;\n    this.jwkUri = payload.jwk_uri;\n    this.responseTypeSupported = payload.response_type_supported;\n    this.subjectTypeSupported = payload.subject_type_supported;\n    this.idTokenSigningAlgValuesSupported = payload.id_token_signing_alg_values_supported;\n    this.scopesSupported = payload.scopes_supported;\n    this.claimsSupported = payload.claims_supported;\n    this.url = payload.url;\n    this._solution = {};\n  }\n  get _proxy() {\n    this._context = this._context || new OpenidDiscoveryContextImpl(this._version);\n    return this._context;\n  }\n  /**\n   * Fetch a OpenidDiscoveryInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed OpenidDiscoveryInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      issuer: this.issuer,\n      authorizationEndpoint: this.authorizationEndpoint,\n      deviceAuthorizationEndpoint: this.deviceAuthorizationEndpoint,\n      tokenEndpoint: this.tokenEndpoint,\n      userinfoEndpoint: this.userinfoEndpoint,\n      revocationEndpoint: this.revocationEndpoint,\n      jwkUri: this.jwkUri,\n      responseTypeSupported: this.responseTypeSupported,\n      subjectTypeSupported: this.subjectTypeSupported,\n      idTokenSigningAlgValuesSupported: this.idTokenSigningAlgValuesSupported,\n      scopesSupported: this.scopesSupported,\n      claimsSupported: this.claimsSupported,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.OpenidDiscoveryInstance = OpenidDiscoveryInstance;\nfunction OpenidDiscoveryListInstance(version) {\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new OpenidDiscoveryContextImpl(version);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.OpenidDiscoveryListInstance = OpenidDiscoveryListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","OpenidDiscoveryListInstance","OpenidDiscoveryInstance","OpenidDiscoveryContextImpl","util_1","require","deserialize","serialize","constructor","_version","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","issuer","authorizationEndpoint","authorization_endpoint","deviceAuthorizationEndpoint","device_authorization_endpoint","tokenEndpoint","token_endpoint","userinfoEndpoint","userinfo_endpoint","revocationEndpoint","revocation_endpoint","jwkUri","jwk_uri","responseTypeSupported","response_type_supported","subjectTypeSupported","subject_type_supported","idTokenSigningAlgValuesSupported","id_token_signing_alg_values_supported","scopesSupported","scopes_supported","claimsSupported","claims_supported","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/oauth/v1/openidDiscovery.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Oauth\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpenidDiscoveryListInstance = exports.OpenidDiscoveryInstance = exports.OpenidDiscoveryContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nclass OpenidDiscoveryContextImpl {\n    constructor(_version) {\n        this._version = _version;\n        this._solution = {};\n        this._uri = `/.well-known/openid-configuration`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new OpenidDiscoveryInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.OpenidDiscoveryContextImpl = OpenidDiscoveryContextImpl;\nclass OpenidDiscoveryInstance {\n    constructor(_version, payload) {\n        this._version = _version;\n        this.issuer = payload.issuer;\n        this.authorizationEndpoint = payload.authorization_endpoint;\n        this.deviceAuthorizationEndpoint = payload.device_authorization_endpoint;\n        this.tokenEndpoint = payload.token_endpoint;\n        this.userinfoEndpoint = payload.userinfo_endpoint;\n        this.revocationEndpoint = payload.revocation_endpoint;\n        this.jwkUri = payload.jwk_uri;\n        this.responseTypeSupported = payload.response_type_supported;\n        this.subjectTypeSupported = payload.subject_type_supported;\n        this.idTokenSigningAlgValuesSupported =\n            payload.id_token_signing_alg_values_supported;\n        this.scopesSupported = payload.scopes_supported;\n        this.claimsSupported = payload.claims_supported;\n        this.url = payload.url;\n        this._solution = {};\n    }\n    get _proxy() {\n        this._context =\n            this._context || new OpenidDiscoveryContextImpl(this._version);\n        return this._context;\n    }\n    /**\n     * Fetch a OpenidDiscoveryInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed OpenidDiscoveryInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            issuer: this.issuer,\n            authorizationEndpoint: this.authorizationEndpoint,\n            deviceAuthorizationEndpoint: this.deviceAuthorizationEndpoint,\n            tokenEndpoint: this.tokenEndpoint,\n            userinfoEndpoint: this.userinfoEndpoint,\n            revocationEndpoint: this.revocationEndpoint,\n            jwkUri: this.jwkUri,\n            responseTypeSupported: this.responseTypeSupported,\n            subjectTypeSupported: this.subjectTypeSupported,\n            idTokenSigningAlgValuesSupported: this.idTokenSigningAlgValuesSupported,\n            scopesSupported: this.scopesSupported,\n            claimsSupported: this.claimsSupported,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.OpenidDiscoveryInstance = OpenidDiscoveryInstance;\nfunction OpenidDiscoveryListInstance(version) {\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new OpenidDiscoveryContextImpl(version);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.OpenidDiscoveryListInstance = OpenidDiscoveryListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}