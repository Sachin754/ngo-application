{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar SinkTestList;\nvar SinkTestPage;\nvar SinkTestInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkTestList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkTestList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n * @param {string} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkTestList = function SinkTestList(version, sid) {\n  /* jshint ignore:start */\n  /**\n   * @function sinkTest\n   * @memberof Twilio.Events.V1.SinkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SinkContext.SinkTestContext}\n   */\n  /* jshint ignore:end */\n  function SinkTestListInstance(sid) {\n    return SinkTestListInstance.get(sid);\n  }\n  SinkTestListInstance._version = version;\n  // Path Solution\n  SinkTestListInstance._solution = {\n    sid: sid\n  };\n  SinkTestListInstance._uri = `/Sinks/${sid}/Test`;\n  /* jshint ignore:start */\n  /**\n   * create a SinkTestInstance\n   *\n   * @function create\n   * @memberof Twilio.Events.V1.SinkContext.SinkTestList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SinkTestInstance\n   */\n  /* jshint ignore:end */\n  SinkTestListInstance.create = function create(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST'\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SinkTestInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SinkContext.SinkTestList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SinkTestListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  SinkTestListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return SinkTestListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkTestPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkTestPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SinkTestSolution} solution - Path solution\n *\n * @returns SinkTestPage\n */\n/* jshint ignore:end */\nSinkTestPage = function SinkTestPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(SinkTestPage.prototype, Page.prototype);\nSinkTestPage.prototype.constructor = SinkTestPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SinkTestInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SinkContext.SinkTestPage#\n *\n * @param {SinkTestPayload} payload - Payload response from the API\n *\n * @returns SinkTestInstance\n */\n/* jshint ignore:end */\nSinkTestPage.prototype.getInstance = function getInstance(payload) {\n  return new SinkTestInstance(this._version, payload, this._solution.sid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkTestPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkTestPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSinkTestPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkTestContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkTestInstance\n *\n * @property {string} result -\n *          Feedback indicating whether the test event was generated.\n *\n * @param {V1} version - Version of the resource\n * @param {SinkTestPayload} payload - The instance payload\n * @param {sid} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkTestInstance = function SinkTestInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.result = payload.result; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid\n  };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkTestInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkTestInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSinkTestInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  SinkTestList: SinkTestList,\n  SinkTestPage: SinkTestPage,\n  SinkTestInstance: SinkTestInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","SinkTestList","SinkTestPage","SinkTestInstance","version","sid","SinkTestListInstance","get","_version","_solution","_uri","create","callback","deferred","defer","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","result","_context","undefined","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/events/v1/sink/sinkTest.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar SinkTestList;\nvar SinkTestPage;\nvar SinkTestInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkTestList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkTestList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n * @param {string} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkTestList = function SinkTestList(version, sid) {\n  /* jshint ignore:start */\n  /**\n   * @function sinkTest\n   * @memberof Twilio.Events.V1.SinkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SinkContext.SinkTestContext}\n   */\n  /* jshint ignore:end */\n  function SinkTestListInstance(sid) {\n    return SinkTestListInstance.get(sid);\n  }\n\n  SinkTestListInstance._version = version;\n  // Path Solution\n  SinkTestListInstance._solution = {sid: sid};\n  SinkTestListInstance._uri = `/Sinks/${sid}/Test`;\n  /* jshint ignore:start */\n  /**\n   * create a SinkTestInstance\n   *\n   * @function create\n   * @memberof Twilio.Events.V1.SinkContext.SinkTestList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SinkTestInstance\n   */\n  /* jshint ignore:end */\n  SinkTestListInstance.create = function create(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.create({uri: this._uri, method: 'POST'});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SinkTestInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SinkContext.SinkTestList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SinkTestListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SinkTestListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SinkTestListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkTestPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkTestPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SinkTestSolution} solution - Path solution\n *\n * @returns SinkTestPage\n */\n/* jshint ignore:end */\nSinkTestPage = function SinkTestPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SinkTestPage.prototype, Page.prototype);\nSinkTestPage.prototype.constructor = SinkTestPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SinkTestInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SinkContext.SinkTestPage#\n *\n * @param {SinkTestPayload} payload - Payload response from the API\n *\n * @returns SinkTestInstance\n */\n/* jshint ignore:end */\nSinkTestPage.prototype.getInstance = function getInstance(payload) {\n  return new SinkTestInstance(this._version, payload, this._solution.sid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkTestPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkTestPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSinkTestPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkTestContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkTestInstance\n *\n * @property {string} result -\n *          Feedback indicating whether the test event was generated.\n *\n * @param {V1} version - Version of the resource\n * @param {SinkTestPayload} payload - The instance payload\n * @param {sid} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkTestInstance = function SinkTestInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.result = payload.result; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkTestInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkTestInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSinkTestInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SinkTestList: SinkTestList,\n  SinkTestPage: SinkTestPage,\n  SinkTestInstance: SinkTestInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}