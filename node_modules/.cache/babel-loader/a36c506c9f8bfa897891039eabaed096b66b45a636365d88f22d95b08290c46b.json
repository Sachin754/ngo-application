{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar WebhookList = require('./configuration/webhook').WebhookList;\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar ConfigurationList;\nvar ConfigurationPage;\nvar ConfigurationInstance;\nvar ConfigurationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationList\n *\n * @constructor Twilio.Conversations.V1.ConfigurationList\n *\n * @param {Twilio.Conversations.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationList = function ConfigurationList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function configuration\n   * @memberof Twilio.Conversations.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  function ConfigurationListInstance(sid) {\n    return ConfigurationListInstance.get(sid);\n  }\n  ConfigurationListInstance._version = version;\n  // Path Solution\n  ConfigurationListInstance._solution = {};\n\n  // Components\n  ConfigurationListInstance._webhooks = undefined;\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a configuration\n   *\n   * @function get\n   * @memberof Twilio.Conversations.V1.ConfigurationList#\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.get = function get() {\n    return new ConfigurationContext(this._version);\n  };\n  Object.defineProperty(ConfigurationListInstance, 'webhooks', {\n    get: function webhooks() {\n      if (!this._webhooks) {\n        this._webhooks = new WebhookList(this._version);\n      }\n      return this._webhooks;\n    }\n  });\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Conversations.V1.ConfigurationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ConfigurationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ConfigurationListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationPage\n *\n * @constructor Twilio.Conversations.V1.ConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConfigurationSolution} solution - Path solution\n *\n * @returns ConfigurationPage\n */\n/* jshint ignore:end */\nConfigurationPage = function ConfigurationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ConfigurationPage.prototype, Page.prototype);\nConfigurationPage.prototype.constructor = ConfigurationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.Conversations.V1.ConfigurationPage#\n *\n * @param {ConfigurationPayload} payload - Payload response from the API\n *\n * @returns ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ConfigurationInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nConfigurationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationInstance\n *\n * @property {string} accountSid -\n *          The SID of the Account responsible for this configuration.\n * @property {string} defaultChatServiceSid -\n *          The SID of the default Conversation Service that every new conversation is associated with.\n * @property {string} defaultMessagingServiceSid -\n *          The SID of the default Messaging Service that every new conversation is associated with.\n * @property {string} defaultInactiveTimer -\n *          Default ISO8601 duration when conversation will be switched to `inactive` state.\n * @property {string} defaultClosedTimer -\n *          Default ISO8601 duration when conversation will be switched to `closed` state.\n * @property {string} url - An absolute URL for this global configuration.\n * @property {string} links -\n *          Absolute URLs to access the webhook and default service configurations.\n *\n * @param {V1} version - Version of the resource\n * @param {ConfigurationPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nConfigurationInstance = function ConfigurationInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.defaultChatServiceSid = payload.default_chat_service_sid; // jshint ignore:line\n  this.defaultMessagingServiceSid = payload.default_messaging_service_sid; // jshint ignore:line\n  this.defaultInactiveTimer = payload.default_inactive_timer; // jshint ignore:line\n  this.defaultClosedTimer = payload.default_closed_timer; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\nObject.defineProperty(ConfigurationInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ConfigurationContext(this._version);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultChatServiceSid] -\n *          The SID of the default Conversation Service that every new conversation will be associated with.\n * @param {string} [opts.defaultMessagingServiceSid] -\n *          The SID of the default Messaging Service that every new conversation will be associated with.\n * @param {string} [opts.defaultInactiveTimer] -\n *          Default ISO8601 duration when conversation will be switched to `inactive` state.\n * @param {string} [opts.defaultClosedTimer] -\n *          Default ISO8601 duration when conversation will be switched to `closed` state.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nConfigurationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationContext = function ConfigurationContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = `/Configuration`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultChatServiceSid] -\n *          The SID of the default Conversation Service that every new conversation will be associated with.\n * @param {string} [opts.defaultMessagingServiceSid] -\n *          The SID of the default Messaging Service that every new conversation will be associated with.\n * @param {string} [opts.defaultInactiveTimer] -\n *          Default ISO8601 duration when conversation will be switched to `inactive` state.\n * @param {string} [opts.defaultClosedTimer] -\n *          Default ISO8601 duration when conversation will be switched to `closed` state.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'DefaultChatServiceSid': _.get(opts, 'defaultChatServiceSid'),\n    'DefaultMessagingServiceSid': _.get(opts, 'defaultMessagingServiceSid'),\n    'DefaultInactiveTimer': _.get(opts, 'defaultInactiveTimer'),\n    'DefaultClosedTimer': _.get(opts, 'defaultClosedTimer')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nConfigurationContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ConfigurationList: ConfigurationList,\n  ConfigurationPage: ConfigurationPage,\n  ConfigurationInstance: ConfigurationInstance,\n  ConfigurationContext: ConfigurationContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","WebhookList","values","ConfigurationList","ConfigurationPage","ConfigurationInstance","ConfigurationContext","version","ConfigurationListInstance","sid","get","_version","_solution","_webhooks","undefined","Object","defineProperty","webhooks","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","defaultChatServiceSid","default_chat_service_sid","defaultMessagingServiceSid","default_messaging_service_sid","defaultInactiveTimer","default_inactive_timer","defaultClosedTimer","default_closed_timer","url","links","_context","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","data","of","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/conversations/v1/configuration.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar WebhookList = require('./configuration/webhook').WebhookList;\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ConfigurationList;\nvar ConfigurationPage;\nvar ConfigurationInstance;\nvar ConfigurationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationList\n *\n * @constructor Twilio.Conversations.V1.ConfigurationList\n *\n * @param {Twilio.Conversations.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationList = function ConfigurationList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function configuration\n   * @memberof Twilio.Conversations.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  function ConfigurationListInstance(sid) {\n    return ConfigurationListInstance.get(sid);\n  }\n\n  ConfigurationListInstance._version = version;\n  // Path Solution\n  ConfigurationListInstance._solution = {};\n\n  // Components\n  ConfigurationListInstance._webhooks = undefined;\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a configuration\n   *\n   * @function get\n   * @memberof Twilio.Conversations.V1.ConfigurationList#\n   *\n   * @returns {Twilio.Conversations.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.get = function get() {\n    return new ConfigurationContext(this._version);\n  };\n\n  Object.defineProperty(ConfigurationListInstance,\n    'webhooks', {\n      get: function webhooks() {\n        if (!this._webhooks) {\n          this._webhooks = new WebhookList(this._version);\n        }\n\n        return this._webhooks;\n      }\n  });\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Conversations.V1.ConfigurationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ConfigurationListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ConfigurationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationPage\n *\n * @constructor Twilio.Conversations.V1.ConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConfigurationSolution} solution - Path solution\n *\n * @returns ConfigurationPage\n */\n/* jshint ignore:end */\nConfigurationPage = function ConfigurationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ConfigurationPage.prototype, Page.prototype);\nConfigurationPage.prototype.constructor = ConfigurationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.Conversations.V1.ConfigurationPage#\n *\n * @param {ConfigurationPayload} payload - Payload response from the API\n *\n * @returns ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ConfigurationInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConfigurationPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationInstance\n *\n * @property {string} accountSid -\n *          The SID of the Account responsible for this configuration.\n * @property {string} defaultChatServiceSid -\n *          The SID of the default Conversation Service that every new conversation is associated with.\n * @property {string} defaultMessagingServiceSid -\n *          The SID of the default Messaging Service that every new conversation is associated with.\n * @property {string} defaultInactiveTimer -\n *          Default ISO8601 duration when conversation will be switched to `inactive` state.\n * @property {string} defaultClosedTimer -\n *          Default ISO8601 duration when conversation will be switched to `closed` state.\n * @property {string} url - An absolute URL for this global configuration.\n * @property {string} links -\n *          Absolute URLs to access the webhook and default service configurations.\n *\n * @param {V1} version - Version of the resource\n * @param {ConfigurationPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nConfigurationInstance = function ConfigurationInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.defaultChatServiceSid = payload.default_chat_service_sid; // jshint ignore:line\n  this.defaultMessagingServiceSid = payload.default_messaging_service_sid; // jshint ignore:line\n  this.defaultInactiveTimer = payload.default_inactive_timer; // jshint ignore:line\n  this.defaultClosedTimer = payload.default_closed_timer; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(ConfigurationInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ConfigurationContext(this._version);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultChatServiceSid] -\n *          The SID of the default Conversation Service that every new conversation will be associated with.\n * @param {string} [opts.defaultMessagingServiceSid] -\n *          The SID of the default Messaging Service that every new conversation will be associated with.\n * @param {string} [opts.defaultInactiveTimer] -\n *          Default ISO8601 duration when conversation will be switched to `inactive` state.\n * @param {string} [opts.defaultClosedTimer] -\n *          Default ISO8601 duration when conversation will be switched to `closed` state.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConfigurationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.Conversations.V1.ConfigurationContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationContext = function ConfigurationContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = `/Configuration`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.Conversations.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.Conversations.V1.ConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultChatServiceSid] -\n *          The SID of the default Conversation Service that every new conversation will be associated with.\n * @param {string} [opts.defaultMessagingServiceSid] -\n *          The SID of the default Messaging Service that every new conversation will be associated with.\n * @param {string} [opts.defaultInactiveTimer] -\n *          Default ISO8601 duration when conversation will be switched to `inactive` state.\n * @param {string} [opts.defaultClosedTimer] -\n *          Default ISO8601 duration when conversation will be switched to `closed` state.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'DefaultChatServiceSid': _.get(opts, 'defaultChatServiceSid'),\n    'DefaultMessagingServiceSid': _.get(opts, 'defaultMessagingServiceSid'),\n    'DefaultInactiveTimer': _.get(opts, 'defaultInactiveTimer'),\n    'DefaultClosedTimer': _.get(opts, 'defaultClosedTimer')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Conversations.V1.ConfigurationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nConfigurationContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ConfigurationList: ConfigurationList,\n  ConfigurationPage: ConfigurationPage,\n  ConfigurationInstance: ConfigurationInstance,\n  ConfigurationContext: ConfigurationContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}