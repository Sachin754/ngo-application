{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar AccessTokenList;\nvar AccessTokenPage;\nvar AccessTokenInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the AccessTokenList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.ServiceContext.AccessTokenList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nAccessTokenList = function AccessTokenList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function accessTokens\n   * @memberof Twilio.Verify.V2.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.AccessTokenContext}\n   */\n  /* jshint ignore:end */\n  function AccessTokenListInstance(sid) {\n    return AccessTokenListInstance.get(sid);\n  }\n  AccessTokenListInstance._version = version;\n  // Path Solution\n  AccessTokenListInstance._solution = {\n    serviceSid: serviceSid\n  };\n  AccessTokenListInstance._uri = `/Services/${serviceSid}/AccessTokens`;\n  /* jshint ignore:start */\n  /**\n   * create a AccessTokenInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.identity - Unique external identifier of the Entity\n   * @param {access_token.factor_types} opts.factorType - The Type of this Factor\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AccessTokenInstance\n   */\n  /* jshint ignore:end */\n  AccessTokenListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.identity)) {\n      throw new Error('Required parameter \"opts.identity\" missing.');\n    }\n    if (_.isUndefined(opts.factorType)) {\n      throw new Error('Required parameter \"opts.factorType\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identity': _.get(opts, 'identity'),\n      'FactorType': _.get(opts, 'factorType')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AccessTokenInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AccessTokenListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  AccessTokenListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return AccessTokenListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AccessTokenPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.ServiceContext.AccessTokenPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AccessTokenSolution} solution - Path solution\n *\n * @returns AccessTokenPage\n */\n/* jshint ignore:end */\nAccessTokenPage = function AccessTokenPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(AccessTokenPage.prototype, Page.prototype);\nAccessTokenPage.prototype.constructor = AccessTokenPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AccessTokenInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenPage#\n *\n * @param {AccessTokenPayload} payload - Payload response from the API\n *\n * @returns AccessTokenInstance\n */\n/* jshint ignore:end */\nAccessTokenPage.prototype.getInstance = function getInstance(payload) {\n  return new AccessTokenInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccessTokenPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAccessTokenPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AccessTokenContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.ServiceContext.AccessTokenInstance\n *\n * @property {string} token - Generated access token.\n *\n * @param {V2} version - Version of the resource\n * @param {AccessTokenPayload} payload - The instance payload\n * @param {sid} serviceSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nAccessTokenInstance = function AccessTokenInstance(version, payload, serviceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.token = payload.token; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid\n  };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccessTokenInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAccessTokenInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  AccessTokenList: AccessTokenList,\n  AccessTokenPage: AccessTokenPage,\n  AccessTokenInstance: AccessTokenInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","AccessTokenList","AccessTokenPage","AccessTokenInstance","version","serviceSid","AccessTokenListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","identity","factorType","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","token","_context","undefined","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/verify/v2/service/accessToken.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar AccessTokenList;\nvar AccessTokenPage;\nvar AccessTokenInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the AccessTokenList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.ServiceContext.AccessTokenList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nAccessTokenList = function AccessTokenList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function accessTokens\n   * @memberof Twilio.Verify.V2.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.AccessTokenContext}\n   */\n  /* jshint ignore:end */\n  function AccessTokenListInstance(sid) {\n    return AccessTokenListInstance.get(sid);\n  }\n\n  AccessTokenListInstance._version = version;\n  // Path Solution\n  AccessTokenListInstance._solution = {serviceSid: serviceSid};\n  AccessTokenListInstance._uri = `/Services/${serviceSid}/AccessTokens`;\n  /* jshint ignore:start */\n  /**\n   * create a AccessTokenInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.identity - Unique external identifier of the Entity\n   * @param {access_token.factor_types} opts.factorType - The Type of this Factor\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AccessTokenInstance\n   */\n  /* jshint ignore:end */\n  AccessTokenListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.identity)) {\n      throw new Error('Required parameter \"opts.identity\" missing.');\n    }\n    if (_.isUndefined(opts.factorType)) {\n      throw new Error('Required parameter \"opts.factorType\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identity': _.get(opts, 'identity'),\n      'FactorType': _.get(opts, 'factorType')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AccessTokenInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AccessTokenListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AccessTokenListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AccessTokenListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccessTokenPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.ServiceContext.AccessTokenPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AccessTokenSolution} solution - Path solution\n *\n * @returns AccessTokenPage\n */\n/* jshint ignore:end */\nAccessTokenPage = function AccessTokenPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AccessTokenPage.prototype, Page.prototype);\nAccessTokenPage.prototype.constructor = AccessTokenPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AccessTokenInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenPage#\n *\n * @param {AccessTokenPayload} payload - Payload response from the API\n *\n * @returns AccessTokenInstance\n */\n/* jshint ignore:end */\nAccessTokenPage.prototype.getInstance = function getInstance(payload) {\n  return new AccessTokenInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccessTokenPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAccessTokenPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccessTokenContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.ServiceContext.AccessTokenInstance\n *\n * @property {string} token - Generated access token.\n *\n * @param {V2} version - Version of the resource\n * @param {AccessTokenPayload} payload - The instance payload\n * @param {sid} serviceSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nAccessTokenInstance = function AccessTokenInstance(version, payload, serviceSid)\n                                                    {\n  this._version = version;\n\n  // Marshaled Properties\n  this.token = payload.token; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.AccessTokenInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccessTokenInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAccessTokenInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AccessTokenList: AccessTokenList,\n  AccessTokenPage: AccessTokenPage,\n  AccessTokenInstance: AccessTokenInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}