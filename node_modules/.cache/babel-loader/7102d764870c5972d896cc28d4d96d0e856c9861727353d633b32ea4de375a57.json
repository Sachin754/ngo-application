{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar BucketList;\nvar BucketPage;\nvar BucketInstance;\nvar BucketContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketList\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {string} rateLimitSid - Rate Limit Sid.\n */\n/* jshint ignore:end */\nBucketList = function BucketList(version, serviceSid, rateLimitSid) {\n  /* jshint ignore:start */\n  /**\n   * @function buckets\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n  /* jshint ignore:end */\n  function BucketListInstance(sid) {\n    return BucketListInstance.get(sid);\n  }\n  BucketListInstance._version = version;\n  // Path Solution\n  BucketListInstance._solution = {\n    serviceSid: serviceSid,\n    rateLimitSid: rateLimitSid\n  };\n  BucketListInstance._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets`;\n  /* jshint ignore:start */\n  /**\n   * create a BucketInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.max - Max number of requests.\n   * @param {number} opts.interval -\n   *          Number of seconds that the rate limit will be enforced over.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed BucketInstance\n   */\n  /* jshint ignore:end */\n  BucketListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.max)) {\n      throw new Error('Required parameter \"opts.max\" missing.');\n    }\n    if (_.isUndefined(opts.interval)) {\n      throw new Error('Required parameter \"opts.interval\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'Max': _.get(opts, 'max'),\n      'Interval': _.get(opts, 'interval')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams BucketInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  BucketListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists BucketInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a bucket\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} sid - A string that uniquely identifies this Bucket.\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n  /* jshint ignore:end */\n  BucketListInstance.get = function get(sid) {\n    return new BucketContext(this._version, this._solution.serviceSid, this._solution.rateLimitSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  BucketListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  BucketListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return BucketListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketPage\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BucketSolution} solution - Path solution\n *\n * @returns BucketPage\n */\n/* jshint ignore:end */\nBucketPage = function BucketPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(BucketPage.prototype, Page.prototype);\nBucketPage.prototype.constructor = BucketPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of BucketInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @param {BucketPayload} payload - Payload response from the API\n *\n * @returns BucketInstance\n */\n/* jshint ignore:end */\nBucketPage.prototype.getInstance = function getInstance(payload) {\n  return new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nBucketPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance\n *\n * @property {string} sid - A string that uniquely identifies this Bucket.\n * @property {string} rateLimitSid - Rate Limit Sid.\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {number} max - Max number of requests.\n * @property {number} interval -\n *          Number of seconds that the rate limit will be enforced over.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The URL of this resource.\n *\n * @param {V2} version - Version of the resource\n * @param {BucketPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n/* jshint ignore:end */\nBucketInstance = function BucketInstance(version, payload, serviceSid, rateLimitSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.rateLimitSid = payload.rate_limit_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.max = deserialize.integer(payload.max); // jshint ignore:line\n  this.interval = deserialize.integer(payload.interval); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    rateLimitSid: rateLimitSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(BucketInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new BucketContext(this._version, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nBucketInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n/* jshint ignore:end */\nBucketContext = function BucketContext(version, serviceSid, rateLimitSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    rateLimitSid: rateLimitSid,\n    sid: sid\n  };\n  this._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Max': _.get(opts, 'max'),\n    'Interval': _.get(opts, 'interval')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BucketInstance(this._version, payload, this._solution.serviceSid, this._solution.rateLimitSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nBucketContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  BucketList: BucketList,\n  BucketPage: BucketPage,\n  BucketInstance: BucketInstance,\n  BucketContext: BucketContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","BucketList","BucketPage","BucketInstance","BucketContext","version","serviceSid","rateLimitSid","BucketListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","max","interval","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","rate_limit_sid","service_sid","accountSid","account_sid","integer","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","update","_proxy","fetch","remove","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/verify/v2/service/rateLimit/bucket.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar BucketList;\nvar BucketPage;\nvar BucketInstance;\nvar BucketContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketList\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {string} rateLimitSid - Rate Limit Sid.\n */\n/* jshint ignore:end */\nBucketList = function BucketList(version, serviceSid, rateLimitSid) {\n  /* jshint ignore:start */\n  /**\n   * @function buckets\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n  /* jshint ignore:end */\n  function BucketListInstance(sid) {\n    return BucketListInstance.get(sid);\n  }\n\n  BucketListInstance._version = version;\n  // Path Solution\n  BucketListInstance._solution = {serviceSid: serviceSid, rateLimitSid: rateLimitSid};\n  BucketListInstance._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets`;\n  /* jshint ignore:start */\n  /**\n   * create a BucketInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.max - Max number of requests.\n   * @param {number} opts.interval -\n   *          Number of seconds that the rate limit will be enforced over.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed BucketInstance\n   */\n  /* jshint ignore:end */\n  BucketListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.max)) {\n      throw new Error('Required parameter \"opts.max\" missing.');\n    }\n    if (_.isUndefined(opts.interval)) {\n      throw new Error('Required parameter \"opts.interval\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'Max': _.get(opts, 'max'), 'Interval': _.get(opts, 'interval')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BucketInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.rateLimitSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams BucketInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  BucketListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists BucketInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of BucketInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BucketListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BucketPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a bucket\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @param {string} sid - A string that uniquely identifies this Bucket.\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext}\n   */\n  /* jshint ignore:end */\n  BucketListInstance.get = function get(sid) {\n    return new BucketContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.rateLimitSid,\n      sid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  BucketListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BucketListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BucketListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketPage\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BucketSolution} solution - Path solution\n *\n * @returns BucketPage\n */\n/* jshint ignore:end */\nBucketPage = function BucketPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BucketPage.prototype, Page.prototype);\nBucketPage.prototype.constructor = BucketPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of BucketInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @param {BucketPayload} payload - Payload response from the API\n *\n * @returns BucketInstance\n */\n/* jshint ignore:end */\nBucketPage.prototype.getInstance = function getInstance(payload) {\n  return new BucketInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.rateLimitSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBucketPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance\n *\n * @property {string} sid - A string that uniquely identifies this Bucket.\n * @property {string} rateLimitSid - Rate Limit Sid.\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {number} max - Max number of requests.\n * @property {number} interval -\n *          Number of seconds that the rate limit will be enforced over.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The URL of this resource.\n *\n * @param {V2} version - Version of the resource\n * @param {BucketPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n/* jshint ignore:end */\nBucketInstance = function BucketInstance(version, payload, serviceSid,\n                                          rateLimitSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.rateLimitSid = payload.rate_limit_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.max = deserialize.integer(payload.max); // jshint ignore:line\n  this.interval = deserialize.integer(payload.interval); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, rateLimitSid: rateLimitSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(BucketInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new BucketContext(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.rateLimitSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBucketInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BucketContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} rateLimitSid - Rate Limit Sid.\n * @param {sid} sid - A string that uniquely identifies this Bucket.\n */\n/* jshint ignore:end */\nBucketContext = function BucketContext(version, serviceSid, rateLimitSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, rateLimitSid: rateLimitSid, sid: sid, };\n  this._uri = `/Services/${serviceSid}/RateLimits/${rateLimitSid}/Buckets/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * update a BucketInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.max] - Max number of requests.\n * @param {number} [opts.interval] -\n *          Number of seconds that the rate limit will be enforced over.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Max': _.get(opts, 'max'), 'Interval': _.get(opts, 'interval')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BucketInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.rateLimitSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BucketInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BucketInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.rateLimitSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a BucketInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BucketInstance\n */\n/* jshint ignore:end */\nBucketContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBucketContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBucketContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BucketList: BucketList,\n  BucketPage: BucketPage,\n  BucketInstance: BucketInstance,\n  BucketContext: BucketContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}