{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar ExportCustomJobList;\nvar ExportCustomJobPage;\nvar ExportCustomJobInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportCustomJobList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList\n *\n * @param {Twilio.Preview.BulkExports} version - Version of the resource\n * @param {string} resourceType -\n *          The type of communication â€“ Messages, Calls, Conferences, and Participants\n */\n/* jshint ignore:end */\nExportCustomJobList = function ExportCustomJobList(version, resourceType) {\n  /* jshint ignore:start */\n  /**\n   * @function exportCustomJobs\n   * @memberof Twilio.Preview.BulkExports.ExportContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.BulkExports.ExportContext.ExportCustomJobContext}\n   */\n  /* jshint ignore:end */\n  function ExportCustomJobListInstance(sid) {\n    return ExportCustomJobListInstance.get(sid);\n  }\n  ExportCustomJobListInstance._version = version;\n  // Path Solution\n  ExportCustomJobListInstance._solution = {\n    resourceType: resourceType\n  };\n  ExportCustomJobListInstance._uri = `/Exports/${resourceType}/Jobs`;\n  /* jshint ignore:start */\n  /**\n   * Streams ExportCustomJobInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ExportCustomJobInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ExportCustomJobInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ExportCustomJobPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ExportCustomJobInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ExportCustomJobPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a ExportCustomJobInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.startDay -\n   *          The start day for the custom export specified as a string in the format of yyyy-mm-dd\n   * @param {string} opts.endDay -\n   *          The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day.\n   * @param {string} opts.friendlyName -\n   *          The friendly name specified when creating the job\n   * @param {string} [opts.webhookUrl] -\n   *          The optional webhook url called on completion of the job. If this is supplied, `WebhookMethod` must also be supplied.\n   * @param {string} [opts.webhookMethod] -\n   *          This is the method used to call the webhook on completion of the job. If this is supplied, `WebhookUrl` must also be supplied.\n   * @param {string} [opts.email] -\n   *          The optional email to send the completion notification to\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ExportCustomJobInstance\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.startDay)) {\n      throw new Error('Required parameter \"opts.startDay\" missing.');\n    }\n    if (_.isUndefined(opts.endDay)) {\n      throw new Error('Required parameter \"opts.endDay\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'StartDay': _.get(opts, 'startDay'),\n      'EndDay': _.get(opts, 'endDay'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'WebhookUrl': _.get(opts, 'webhookUrl'),\n      'WebhookMethod': _.get(opts, 'webhookMethod'),\n      'Email': _.get(opts, 'email')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ExportCustomJobInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ExportCustomJobListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ExportCustomJobListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportCustomJobPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.BulkExports.ExportContext.ExportCustomJobPage\n *\n * @param {BulkExports} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ExportCustomJobSolution} solution - Path solution\n *\n * @returns ExportCustomJobPage\n */\n/* jshint ignore:end */\nExportCustomJobPage = function ExportCustomJobPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ExportCustomJobPage.prototype, Page.prototype);\nExportCustomJobPage.prototype.constructor = ExportCustomJobPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ExportCustomJobInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobPage#\n *\n * @param {ExportCustomJobPayload} payload - Payload response from the API\n *\n * @returns ExportCustomJobInstance\n */\n/* jshint ignore:end */\nExportCustomJobPage.prototype.getInstance = function getInstance(payload) {\n  return new ExportCustomJobInstance(this._version, payload, this._solution.resourceType);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nExportCustomJobPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nExportCustomJobPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportCustomJobContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.BulkExports.ExportContext.ExportCustomJobInstance\n *\n * @property {string} friendlyName -\n *          The friendly name specified when creating the job\n * @property {string} resourceType -\n *          The type of communication â€“ Messages, Calls, Conferences, and Participants\n * @property {string} startDay -\n *          The start day for the custom export specified as a string in the format of yyyy-MM-dd\n * @property {string} endDay -\n *          The end day for the custom export specified as a string in the format of yyyy-MM-dd\n * @property {string} webhookUrl - The optional webhook url called on completion\n * @property {string} webhookMethod - This is the method used to call the webhook\n * @property {string} email -\n *          The optional email to send the completion notification to\n * @property {string} jobSid -\n *          The unique job_sid returned when the custom export was created. This can be used to look up the status of the job.\n * @property {object} details - The details\n *\n * @param {BulkExports} version - Version of the resource\n * @param {ExportCustomJobPayload} payload - The instance payload\n * @param {string} resourceType -\n *          The type of communication â€“ Messages, Calls, Conferences, and Participants\n */\n/* jshint ignore:end */\nExportCustomJobInstance = function ExportCustomJobInstance(version, payload, resourceType) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.resourceType = payload.resource_type; // jshint ignore:line\n  this.startDay = payload.start_day; // jshint ignore:line\n  this.endDay = payload.end_day; // jshint ignore:line\n  this.webhookUrl = payload.webhook_url; // jshint ignore:line\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.jobSid = payload.job_sid; // jshint ignore:line\n  this.details = payload.details; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    resourceType: resourceType\n  };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nExportCustomJobInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nExportCustomJobInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ExportCustomJobList: ExportCustomJobList,\n  ExportCustomJobPage: ExportCustomJobPage,\n  ExportCustomJobInstance: ExportCustomJobInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","ExportCustomJobList","ExportCustomJobPage","ExportCustomJobInstance","version","resourceType","ExportCustomJobListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","startDay","endDay","friendlyName","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","friendly_name","resource_type","start_day","end_day","webhookUrl","webhook_url","webhookMethod","webhook_method","email","jobSid","job_sid","details","_context","undefined","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/preview/bulk_exports/export/exportCustomJob.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar ExportCustomJobList;\nvar ExportCustomJobPage;\nvar ExportCustomJobInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportCustomJobList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList\n *\n * @param {Twilio.Preview.BulkExports} version - Version of the resource\n * @param {string} resourceType -\n *          The type of communication â€“ Messages, Calls, Conferences, and Participants\n */\n/* jshint ignore:end */\nExportCustomJobList = function ExportCustomJobList(version, resourceType) {\n  /* jshint ignore:start */\n  /**\n   * @function exportCustomJobs\n   * @memberof Twilio.Preview.BulkExports.ExportContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.BulkExports.ExportContext.ExportCustomJobContext}\n   */\n  /* jshint ignore:end */\n  function ExportCustomJobListInstance(sid) {\n    return ExportCustomJobListInstance.get(sid);\n  }\n\n  ExportCustomJobListInstance._version = version;\n  // Path Solution\n  ExportCustomJobListInstance._solution = {resourceType: resourceType};\n  ExportCustomJobListInstance._uri = `/Exports/${resourceType}/Jobs`;\n  /* jshint ignore:start */\n  /**\n   * Streams ExportCustomJobInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ExportCustomJobInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ExportCustomJobInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ExportCustomJobPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ExportCustomJobInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ExportCustomJobPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a ExportCustomJobInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.startDay -\n   *          The start day for the custom export specified as a string in the format of yyyy-mm-dd\n   * @param {string} opts.endDay -\n   *          The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day.\n   * @param {string} opts.friendlyName -\n   *          The friendly name specified when creating the job\n   * @param {string} [opts.webhookUrl] -\n   *          The optional webhook url called on completion of the job. If this is supplied, `WebhookMethod` must also be supplied.\n   * @param {string} [opts.webhookMethod] -\n   *          This is the method used to call the webhook on completion of the job. If this is supplied, `WebhookUrl` must also be supplied.\n   * @param {string} [opts.email] -\n   *          The optional email to send the completion notification to\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ExportCustomJobInstance\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.startDay)) {\n      throw new Error('Required parameter \"opts.startDay\" missing.');\n    }\n    if (_.isUndefined(opts.endDay)) {\n      throw new Error('Required parameter \"opts.endDay\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'StartDay': _.get(opts, 'startDay'),\n      'EndDay': _.get(opts, 'endDay'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'WebhookUrl': _.get(opts, 'webhookUrl'),\n      'WebhookMethod': _.get(opts, 'webhookMethod'),\n      'Email': _.get(opts, 'email')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ExportCustomJobInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ExportCustomJobListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ExportCustomJobListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ExportCustomJobListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportCustomJobPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.BulkExports.ExportContext.ExportCustomJobPage\n *\n * @param {BulkExports} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ExportCustomJobSolution} solution - Path solution\n *\n * @returns ExportCustomJobPage\n */\n/* jshint ignore:end */\nExportCustomJobPage = function ExportCustomJobPage(version, response, solution)\n                                                    {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ExportCustomJobPage.prototype, Page.prototype);\nExportCustomJobPage.prototype.constructor = ExportCustomJobPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ExportCustomJobInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobPage#\n *\n * @param {ExportCustomJobPayload} payload - Payload response from the API\n *\n * @returns ExportCustomJobInstance\n */\n/* jshint ignore:end */\nExportCustomJobPage.prototype.getInstance = function getInstance(payload) {\n  return new ExportCustomJobInstance(this._version, payload, this._solution.resourceType);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nExportCustomJobPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nExportCustomJobPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ExportCustomJobContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.BulkExports.ExportContext.ExportCustomJobInstance\n *\n * @property {string} friendlyName -\n *          The friendly name specified when creating the job\n * @property {string} resourceType -\n *          The type of communication â€“ Messages, Calls, Conferences, and Participants\n * @property {string} startDay -\n *          The start day for the custom export specified as a string in the format of yyyy-MM-dd\n * @property {string} endDay -\n *          The end day for the custom export specified as a string in the format of yyyy-MM-dd\n * @property {string} webhookUrl - The optional webhook url called on completion\n * @property {string} webhookMethod - This is the method used to call the webhook\n * @property {string} email -\n *          The optional email to send the completion notification to\n * @property {string} jobSid -\n *          The unique job_sid returned when the custom export was created. This can be used to look up the status of the job.\n * @property {object} details - The details\n *\n * @param {BulkExports} version - Version of the resource\n * @param {ExportCustomJobPayload} payload - The instance payload\n * @param {string} resourceType -\n *          The type of communication â€“ Messages, Calls, Conferences, and Participants\n */\n/* jshint ignore:end */\nExportCustomJobInstance = function ExportCustomJobInstance(version, payload,\n                                                            resourceType) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.resourceType = payload.resource_type; // jshint ignore:line\n  this.startDay = payload.start_day; // jshint ignore:line\n  this.endDay = payload.end_day; // jshint ignore:line\n  this.webhookUrl = payload.webhook_url; // jshint ignore:line\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.jobSid = payload.job_sid; // jshint ignore:line\n  this.details = payload.details; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {resourceType: resourceType, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.BulkExports.ExportContext.ExportCustomJobInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nExportCustomJobInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nExportCustomJobInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ExportCustomJobList: ExportCustomJobList,\n  ExportCustomJobPage: ExportCustomJobPage,\n  ExportCustomJobInstance: ExportCustomJobInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}