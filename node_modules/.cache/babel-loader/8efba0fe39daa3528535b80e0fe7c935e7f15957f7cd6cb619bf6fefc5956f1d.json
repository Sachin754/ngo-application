{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Serverless\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionVersionContentListInstance = exports.FunctionVersionContentInstance = exports.FunctionVersionContentContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../../base/utility\");\nclass FunctionVersionContentContextImpl {\n  constructor(_version, serviceSid, functionSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n      throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(functionSid)) {\n      throw new Error(\"Parameter 'functionSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      serviceSid,\n      functionSid,\n      sid\n    };\n    this._uri = `/Services/${serviceSid}/Functions/${functionSid}/Versions/${sid}/Content`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new FunctionVersionContentInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.functionSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.FunctionVersionContentContextImpl = FunctionVersionContentContextImpl;\nclass FunctionVersionContentInstance {\n  constructor(_version, payload, serviceSid, functionSid, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.serviceSid = payload.service_sid;\n    this.functionSid = payload.function_sid;\n    this.content = payload.content;\n    this.url = payload.url;\n    this._solution = {\n      serviceSid,\n      functionSid,\n      sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new FunctionVersionContentContextImpl(this._version, this._solution.serviceSid, this._solution.functionSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Fetch a FunctionVersionContentInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed FunctionVersionContentInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      serviceSid: this.serviceSid,\n      functionSid: this.functionSid,\n      content: this.content,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.FunctionVersionContentInstance = FunctionVersionContentInstance;\nfunction FunctionVersionContentListInstance(version, serviceSid, functionSid, sid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(functionSid)) {\n    throw new Error(\"Parameter 'functionSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(sid)) {\n    throw new Error(\"Parameter 'sid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new FunctionVersionContentContextImpl(version, serviceSid, functionSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    serviceSid,\n    functionSid,\n    sid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.FunctionVersionContentListInstance = FunctionVersionContentListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","FunctionVersionContentListInstance","FunctionVersionContentInstance","FunctionVersionContentContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","serviceSid","functionSid","sid","isValidPathParam","Error","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","accountSid","account_sid","service_sid","function_sid","content","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/serverless/v1/service/function/functionVersion/functionVersionContent.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Serverless\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FunctionVersionContentListInstance = exports.FunctionVersionContentInstance = exports.FunctionVersionContentContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../../base/utility\");\nclass FunctionVersionContentContextImpl {\n    constructor(_version, serviceSid, functionSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n            throw new Error(\"Parameter 'serviceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(functionSid)) {\n            throw new Error(\"Parameter 'functionSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { serviceSid, functionSid, sid };\n        this._uri = `/Services/${serviceSid}/Functions/${functionSid}/Versions/${sid}/Content`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new FunctionVersionContentInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.functionSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.FunctionVersionContentContextImpl = FunctionVersionContentContextImpl;\nclass FunctionVersionContentInstance {\n    constructor(_version, payload, serviceSid, functionSid, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.serviceSid = payload.service_sid;\n        this.functionSid = payload.function_sid;\n        this.content = payload.content;\n        this.url = payload.url;\n        this._solution = { serviceSid, functionSid, sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new FunctionVersionContentContextImpl(this._version, this._solution.serviceSid, this._solution.functionSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Fetch a FunctionVersionContentInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed FunctionVersionContentInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            serviceSid: this.serviceSid,\n            functionSid: this.functionSid,\n            content: this.content,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.FunctionVersionContentInstance = FunctionVersionContentInstance;\nfunction FunctionVersionContentListInstance(version, serviceSid, functionSid, sid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(functionSid)) {\n        throw new Error(\"Parameter 'functionSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n        throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new FunctionVersionContentContextImpl(version, serviceSid, functionSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { serviceSid, functionSid, sid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.FunctionVersionContentListInstance = FunctionVersionContentListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}