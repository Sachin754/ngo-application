{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HostedNumberOrderPage = exports.HostedNumberOrderListInstance = exports.HostedNumberOrderInstance = exports.HostedNumberOrderContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass HostedNumberOrderContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/HostedNumberOrders/${sid}`;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new HostedNumberOrderInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"uniqueName\"] !== undefined) data[\"UniqueName\"] = params[\"uniqueName\"];\n    if (params[\"email\"] !== undefined) data[\"Email\"] = params[\"email\"];\n    if (params[\"ccEmails\"] !== undefined) data[\"CcEmails\"] = serialize.map(params[\"ccEmails\"], e => e);\n    if (params[\"status\"] !== undefined) data[\"Status\"] = params[\"status\"];\n    if (params[\"verificationCode\"] !== undefined) data[\"VerificationCode\"] = params[\"verificationCode\"];\n    if (params[\"verificationType\"] !== undefined) data[\"VerificationType\"] = params[\"verificationType\"];\n    if (params[\"verificationDocumentSid\"] !== undefined) data[\"VerificationDocumentSid\"] = params[\"verificationDocumentSid\"];\n    if (params[\"extension\"] !== undefined) data[\"Extension\"] = params[\"extension\"];\n    if (params[\"callDelay\"] !== undefined) data[\"CallDelay\"] = params[\"callDelay\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new HostedNumberOrderInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.HostedNumberOrderContextImpl = HostedNumberOrderContextImpl;\nclass HostedNumberOrderInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.incomingPhoneNumberSid = payload.incoming_phone_number_sid;\n    this.addressSid = payload.address_sid;\n    this.signingDocumentSid = payload.signing_document_sid;\n    this.phoneNumber = payload.phone_number;\n    this.capabilities = payload.capabilities;\n    this.friendlyName = payload.friendly_name;\n    this.uniqueName = payload.unique_name;\n    this.status = payload.status;\n    this.failureReason = payload.failure_reason;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.verificationAttempts = deserialize.integer(payload.verification_attempts);\n    this.email = payload.email;\n    this.ccEmails = payload.cc_emails;\n    this.url = payload.url;\n    this.verificationType = payload.verification_type;\n    this.verificationDocumentSid = payload.verification_document_sid;\n    this.extension = payload.extension;\n    this.callDelay = deserialize.integer(payload.call_delay);\n    this.verificationCode = payload.verification_code;\n    this.verificationCallSids = payload.verification_call_sids;\n    this._solution = {\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new HostedNumberOrderContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a HostedNumberOrderInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a HostedNumberOrderInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed HostedNumberOrderInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      incomingPhoneNumberSid: this.incomingPhoneNumberSid,\n      addressSid: this.addressSid,\n      signingDocumentSid: this.signingDocumentSid,\n      phoneNumber: this.phoneNumber,\n      capabilities: this.capabilities,\n      friendlyName: this.friendlyName,\n      uniqueName: this.uniqueName,\n      status: this.status,\n      failureReason: this.failureReason,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      verificationAttempts: this.verificationAttempts,\n      email: this.email,\n      ccEmails: this.ccEmails,\n      url: this.url,\n      verificationType: this.verificationType,\n      verificationDocumentSid: this.verificationDocumentSid,\n      extension: this.extension,\n      callDelay: this.callDelay,\n      verificationCode: this.verificationCode,\n      verificationCallSids: this.verificationCallSids\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.HostedNumberOrderInstance = HostedNumberOrderInstance;\nfunction HostedNumberOrderListInstance(version) {\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new HostedNumberOrderContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/HostedNumberOrders`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"phoneNumber\"] === null || params[\"phoneNumber\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['phoneNumber']\\\" missing.\");\n    }\n    if (params[\"smsCapability\"] === null || params[\"smsCapability\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['smsCapability']\\\" missing.\");\n    }\n    let data = {};\n    data[\"PhoneNumber\"] = params[\"phoneNumber\"];\n    data[\"SmsCapability\"] = serialize.bool(params[\"smsCapability\"]);\n    if (params[\"accountSid\"] !== undefined) data[\"AccountSid\"] = params[\"accountSid\"];\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"uniqueName\"] !== undefined) data[\"UniqueName\"] = params[\"uniqueName\"];\n    if (params[\"ccEmails\"] !== undefined) data[\"CcEmails\"] = serialize.map(params[\"ccEmails\"], e => e);\n    if (params[\"smsUrl\"] !== undefined) data[\"SmsUrl\"] = params[\"smsUrl\"];\n    if (params[\"smsMethod\"] !== undefined) data[\"SmsMethod\"] = params[\"smsMethod\"];\n    if (params[\"smsFallbackUrl\"] !== undefined) data[\"SmsFallbackUrl\"] = params[\"smsFallbackUrl\"];\n    if (params[\"smsFallbackMethod\"] !== undefined) data[\"SmsFallbackMethod\"] = params[\"smsFallbackMethod\"];\n    if (params[\"statusCallbackUrl\"] !== undefined) data[\"StatusCallbackUrl\"] = params[\"statusCallbackUrl\"];\n    if (params[\"statusCallbackMethod\"] !== undefined) data[\"StatusCallbackMethod\"] = params[\"statusCallbackMethod\"];\n    if (params[\"smsApplicationSid\"] !== undefined) data[\"SmsApplicationSid\"] = params[\"smsApplicationSid\"];\n    if (params[\"addressSid\"] !== undefined) data[\"AddressSid\"] = params[\"addressSid\"];\n    if (params[\"email\"] !== undefined) data[\"Email\"] = params[\"email\"];\n    if (params[\"verificationType\"] !== undefined) data[\"VerificationType\"] = params[\"verificationType\"];\n    if (params[\"verificationDocumentSid\"] !== undefined) data[\"VerificationDocumentSid\"] = params[\"verificationDocumentSid\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new HostedNumberOrderInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"status\"] !== undefined) data[\"Status\"] = params[\"status\"];\n    if (params[\"phoneNumber\"] !== undefined) data[\"PhoneNumber\"] = params[\"phoneNumber\"];\n    if (params[\"incomingPhoneNumberSid\"] !== undefined) data[\"IncomingPhoneNumberSid\"] = params[\"incomingPhoneNumberSid\"];\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"uniqueName\"] !== undefined) data[\"UniqueName\"] = params[\"uniqueName\"];\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new HostedNumberOrderPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new HostedNumberOrderPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.HostedNumberOrderListInstance = HostedNumberOrderListInstance;\nclass HostedNumberOrderPage extends Page_1.default {\n  /**\n   * Initialize the HostedNumberOrderPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of HostedNumberOrderInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new HostedNumberOrderInstance(this._version, payload);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.HostedNumberOrderPage = HostedNumberOrderPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","HostedNumberOrderPage","HostedNumberOrderListInstance","HostedNumberOrderInstance","HostedNumberOrderContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","map","e","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","incomingPhoneNumberSid","incoming_phone_number_sid","addressSid","address_sid","signingDocumentSid","signing_document_sid","phoneNumber","phone_number","capabilities","friendlyName","friendly_name","uniqueName","unique_name","status","failureReason","failure_reason","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","verificationAttempts","integer","verification_attempts","email","ccEmails","cc_emails","url","verificationType","verification_type","verificationDocumentSid","verification_document_sid","extension","callDelay","call_delay","verificationCode","verification_code","verificationCallSids","verification_call_sids","_proxy","_context","version","get","create","bool","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/preview/hosted_numbers/hostedNumberOrder.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HostedNumberOrderPage = exports.HostedNumberOrderListInstance = exports.HostedNumberOrderInstance = exports.HostedNumberOrderContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass HostedNumberOrderContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/HostedNumberOrders/${sid}`;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new HostedNumberOrderInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"uniqueName\"] !== undefined)\n            data[\"UniqueName\"] = params[\"uniqueName\"];\n        if (params[\"email\"] !== undefined)\n            data[\"Email\"] = params[\"email\"];\n        if (params[\"ccEmails\"] !== undefined)\n            data[\"CcEmails\"] = serialize.map(params[\"ccEmails\"], (e) => e);\n        if (params[\"status\"] !== undefined)\n            data[\"Status\"] = params[\"status\"];\n        if (params[\"verificationCode\"] !== undefined)\n            data[\"VerificationCode\"] = params[\"verificationCode\"];\n        if (params[\"verificationType\"] !== undefined)\n            data[\"VerificationType\"] = params[\"verificationType\"];\n        if (params[\"verificationDocumentSid\"] !== undefined)\n            data[\"VerificationDocumentSid\"] = params[\"verificationDocumentSid\"];\n        if (params[\"extension\"] !== undefined)\n            data[\"Extension\"] = params[\"extension\"];\n        if (params[\"callDelay\"] !== undefined)\n            data[\"CallDelay\"] = params[\"callDelay\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new HostedNumberOrderInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.HostedNumberOrderContextImpl = HostedNumberOrderContextImpl;\nclass HostedNumberOrderInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.incomingPhoneNumberSid = payload.incoming_phone_number_sid;\n        this.addressSid = payload.address_sid;\n        this.signingDocumentSid = payload.signing_document_sid;\n        this.phoneNumber = payload.phone_number;\n        this.capabilities = payload.capabilities;\n        this.friendlyName = payload.friendly_name;\n        this.uniqueName = payload.unique_name;\n        this.status = payload.status;\n        this.failureReason = payload.failure_reason;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.verificationAttempts = deserialize.integer(payload.verification_attempts);\n        this.email = payload.email;\n        this.ccEmails = payload.cc_emails;\n        this.url = payload.url;\n        this.verificationType = payload.verification_type;\n        this.verificationDocumentSid = payload.verification_document_sid;\n        this.extension = payload.extension;\n        this.callDelay = deserialize.integer(payload.call_delay);\n        this.verificationCode = payload.verification_code;\n        this.verificationCallSids = payload.verification_call_sids;\n        this._solution = { sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new HostedNumberOrderContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a HostedNumberOrderInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a HostedNumberOrderInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed HostedNumberOrderInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            incomingPhoneNumberSid: this.incomingPhoneNumberSid,\n            addressSid: this.addressSid,\n            signingDocumentSid: this.signingDocumentSid,\n            phoneNumber: this.phoneNumber,\n            capabilities: this.capabilities,\n            friendlyName: this.friendlyName,\n            uniqueName: this.uniqueName,\n            status: this.status,\n            failureReason: this.failureReason,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            verificationAttempts: this.verificationAttempts,\n            email: this.email,\n            ccEmails: this.ccEmails,\n            url: this.url,\n            verificationType: this.verificationType,\n            verificationDocumentSid: this.verificationDocumentSid,\n            extension: this.extension,\n            callDelay: this.callDelay,\n            verificationCode: this.verificationCode,\n            verificationCallSids: this.verificationCallSids,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.HostedNumberOrderInstance = HostedNumberOrderInstance;\nfunction HostedNumberOrderListInstance(version) {\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new HostedNumberOrderContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/HostedNumberOrders`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"phoneNumber\"] === null || params[\"phoneNumber\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['phoneNumber']\\\" missing.\");\n        }\n        if (params[\"smsCapability\"] === null ||\n            params[\"smsCapability\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['smsCapability']\\\" missing.\");\n        }\n        let data = {};\n        data[\"PhoneNumber\"] = params[\"phoneNumber\"];\n        data[\"SmsCapability\"] = serialize.bool(params[\"smsCapability\"]);\n        if (params[\"accountSid\"] !== undefined)\n            data[\"AccountSid\"] = params[\"accountSid\"];\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"uniqueName\"] !== undefined)\n            data[\"UniqueName\"] = params[\"uniqueName\"];\n        if (params[\"ccEmails\"] !== undefined)\n            data[\"CcEmails\"] = serialize.map(params[\"ccEmails\"], (e) => e);\n        if (params[\"smsUrl\"] !== undefined)\n            data[\"SmsUrl\"] = params[\"smsUrl\"];\n        if (params[\"smsMethod\"] !== undefined)\n            data[\"SmsMethod\"] = params[\"smsMethod\"];\n        if (params[\"smsFallbackUrl\"] !== undefined)\n            data[\"SmsFallbackUrl\"] = params[\"smsFallbackUrl\"];\n        if (params[\"smsFallbackMethod\"] !== undefined)\n            data[\"SmsFallbackMethod\"] = params[\"smsFallbackMethod\"];\n        if (params[\"statusCallbackUrl\"] !== undefined)\n            data[\"StatusCallbackUrl\"] = params[\"statusCallbackUrl\"];\n        if (params[\"statusCallbackMethod\"] !== undefined)\n            data[\"StatusCallbackMethod\"] = params[\"statusCallbackMethod\"];\n        if (params[\"smsApplicationSid\"] !== undefined)\n            data[\"SmsApplicationSid\"] = params[\"smsApplicationSid\"];\n        if (params[\"addressSid\"] !== undefined)\n            data[\"AddressSid\"] = params[\"addressSid\"];\n        if (params[\"email\"] !== undefined)\n            data[\"Email\"] = params[\"email\"];\n        if (params[\"verificationType\"] !== undefined)\n            data[\"VerificationType\"] = params[\"verificationType\"];\n        if (params[\"verificationDocumentSid\"] !== undefined)\n            data[\"VerificationDocumentSid\"] = params[\"verificationDocumentSid\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new HostedNumberOrderInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"status\"] !== undefined)\n            data[\"Status\"] = params[\"status\"];\n        if (params[\"phoneNumber\"] !== undefined)\n            data[\"PhoneNumber\"] = params[\"phoneNumber\"];\n        if (params[\"incomingPhoneNumberSid\"] !== undefined)\n            data[\"IncomingPhoneNumberSid\"] = params[\"incomingPhoneNumberSid\"];\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"uniqueName\"] !== undefined)\n            data[\"UniqueName\"] = params[\"uniqueName\"];\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new HostedNumberOrderPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new HostedNumberOrderPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.HostedNumberOrderListInstance = HostedNumberOrderListInstance;\nclass HostedNumberOrderPage extends Page_1.default {\n    /**\n     * Initialize the HostedNumberOrderPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of HostedNumberOrderInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new HostedNumberOrderInstance(this._version, payload);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.HostedNumberOrderPage = HostedNumberOrderPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}