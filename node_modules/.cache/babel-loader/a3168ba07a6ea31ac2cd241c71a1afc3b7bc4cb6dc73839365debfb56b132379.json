{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Video\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompositionSettingsListInstance = exports.CompositionSettingsInstance = exports.CompositionSettingsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nclass CompositionSettingsContextImpl {\n  constructor(_version) {\n    this._version = _version;\n    this._solution = {};\n    this._uri = `/CompositionSettings/Default`;\n  }\n  create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"friendlyName\"] === null || params[\"friendlyName\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n    }\n    let data = {};\n    data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"awsCredentialsSid\"] !== undefined) data[\"AwsCredentialsSid\"] = params[\"awsCredentialsSid\"];\n    if (params[\"encryptionKeySid\"] !== undefined) data[\"EncryptionKeySid\"] = params[\"encryptionKeySid\"];\n    if (params[\"awsS3Url\"] !== undefined) data[\"AwsS3Url\"] = params[\"awsS3Url\"];\n    if (params[\"awsStorageEnabled\"] !== undefined) data[\"AwsStorageEnabled\"] = serialize.bool(params[\"awsStorageEnabled\"]);\n    if (params[\"encryptionEnabled\"] !== undefined) data[\"EncryptionEnabled\"] = serialize.bool(params[\"encryptionEnabled\"]);\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new CompositionSettingsInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new CompositionSettingsInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.CompositionSettingsContextImpl = CompositionSettingsContextImpl;\nclass CompositionSettingsInstance {\n  constructor(_version, payload) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.friendlyName = payload.friendly_name;\n    this.awsCredentialsSid = payload.aws_credentials_sid;\n    this.awsS3Url = payload.aws_s3_url;\n    this.awsStorageEnabled = payload.aws_storage_enabled;\n    this.encryptionKeySid = payload.encryption_key_sid;\n    this.encryptionEnabled = payload.encryption_enabled;\n    this.url = payload.url;\n    this._solution = {};\n  }\n  get _proxy() {\n    this._context = this._context || new CompositionSettingsContextImpl(this._version);\n    return this._context;\n  }\n  create(params, callback) {\n    return this._proxy.create(params, callback);\n  }\n  /**\n   * Fetch a CompositionSettingsInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed CompositionSettingsInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      friendlyName: this.friendlyName,\n      awsCredentialsSid: this.awsCredentialsSid,\n      awsS3Url: this.awsS3Url,\n      awsStorageEnabled: this.awsStorageEnabled,\n      encryptionKeySid: this.encryptionKeySid,\n      encryptionEnabled: this.encryptionEnabled,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.CompositionSettingsInstance = CompositionSettingsInstance;\nfunction CompositionSettingsListInstance(version) {\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new CompositionSettingsContextImpl(version);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.CompositionSettingsListInstance = CompositionSettingsListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","CompositionSettingsListInstance","CompositionSettingsInstance","CompositionSettingsContextImpl","util_1","require","deserialize","serialize","constructor","_version","_solution","_uri","create","params","callback","undefined","Error","data","bool","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","fetch","toJSON","inspect","custom","_depth","options","accountSid","account_sid","friendlyName","friendly_name","awsCredentialsSid","aws_credentials_sid","awsS3Url","aws_s3_url","awsStorageEnabled","aws_storage_enabled","encryptionKeySid","encryption_key_sid","encryptionEnabled","encryption_enabled","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/video/v1/compositionSettings.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Video\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompositionSettingsListInstance = exports.CompositionSettingsInstance = exports.CompositionSettingsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nclass CompositionSettingsContextImpl {\n    constructor(_version) {\n        this._version = _version;\n        this._solution = {};\n        this._uri = `/CompositionSettings/Default`;\n    }\n    create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"friendlyName\"] === null ||\n            params[\"friendlyName\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n        }\n        let data = {};\n        data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"awsCredentialsSid\"] !== undefined)\n            data[\"AwsCredentialsSid\"] = params[\"awsCredentialsSid\"];\n        if (params[\"encryptionKeySid\"] !== undefined)\n            data[\"EncryptionKeySid\"] = params[\"encryptionKeySid\"];\n        if (params[\"awsS3Url\"] !== undefined)\n            data[\"AwsS3Url\"] = params[\"awsS3Url\"];\n        if (params[\"awsStorageEnabled\"] !== undefined)\n            data[\"AwsStorageEnabled\"] = serialize.bool(params[\"awsStorageEnabled\"]);\n        if (params[\"encryptionEnabled\"] !== undefined)\n            data[\"EncryptionEnabled\"] = serialize.bool(params[\"encryptionEnabled\"]);\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new CompositionSettingsInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new CompositionSettingsInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.CompositionSettingsContextImpl = CompositionSettingsContextImpl;\nclass CompositionSettingsInstance {\n    constructor(_version, payload) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.friendlyName = payload.friendly_name;\n        this.awsCredentialsSid = payload.aws_credentials_sid;\n        this.awsS3Url = payload.aws_s3_url;\n        this.awsStorageEnabled = payload.aws_storage_enabled;\n        this.encryptionKeySid = payload.encryption_key_sid;\n        this.encryptionEnabled = payload.encryption_enabled;\n        this.url = payload.url;\n        this._solution = {};\n    }\n    get _proxy() {\n        this._context =\n            this._context || new CompositionSettingsContextImpl(this._version);\n        return this._context;\n    }\n    create(params, callback) {\n        return this._proxy.create(params, callback);\n    }\n    /**\n     * Fetch a CompositionSettingsInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed CompositionSettingsInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            friendlyName: this.friendlyName,\n            awsCredentialsSid: this.awsCredentialsSid,\n            awsS3Url: this.awsS3Url,\n            awsStorageEnabled: this.awsStorageEnabled,\n            encryptionKeySid: this.encryptionKeySid,\n            encryptionEnabled: this.encryptionEnabled,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.CompositionSettingsInstance = CompositionSettingsInstance;\nfunction CompositionSettingsListInstance(version) {\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new CompositionSettingsContextImpl(version);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.CompositionSettingsListInstance = CompositionSettingsListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}