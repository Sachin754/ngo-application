{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trunking\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrunkPage = exports.TrunkListInstance = exports.TrunkInstance = exports.TrunkContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst credentialList_1 = require(\"./trunk/credentialList\");\nconst ipAccessControlList_1 = require(\"./trunk/ipAccessControlList\");\nconst originationUrl_1 = require(\"./trunk/originationUrl\");\nconst phoneNumber_1 = require(\"./trunk/phoneNumber\");\nconst recording_1 = require(\"./trunk/recording\");\nclass TrunkContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/Trunks/${sid}`;\n  }\n  get credentialsLists() {\n    this._credentialsLists = this._credentialsLists || (0, credentialList_1.CredentialListListInstance)(this._version, this._solution.sid);\n    return this._credentialsLists;\n  }\n  get ipAccessControlLists() {\n    this._ipAccessControlLists = this._ipAccessControlLists || (0, ipAccessControlList_1.IpAccessControlListListInstance)(this._version, this._solution.sid);\n    return this._ipAccessControlLists;\n  }\n  get originationUrls() {\n    this._originationUrls = this._originationUrls || (0, originationUrl_1.OriginationUrlListInstance)(this._version, this._solution.sid);\n    return this._originationUrls;\n  }\n  get phoneNumbers() {\n    this._phoneNumbers = this._phoneNumbers || (0, phoneNumber_1.PhoneNumberListInstance)(this._version, this._solution.sid);\n    return this._phoneNumbers;\n  }\n  get recordings() {\n    this._recordings = this._recordings || (0, recording_1.RecordingListInstance)(this._version, this._solution.sid);\n    return this._recordings;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new TrunkInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"domainName\"] !== undefined) data[\"DomainName\"] = params[\"domainName\"];\n    if (params[\"disasterRecoveryUrl\"] !== undefined) data[\"DisasterRecoveryUrl\"] = params[\"disasterRecoveryUrl\"];\n    if (params[\"disasterRecoveryMethod\"] !== undefined) data[\"DisasterRecoveryMethod\"] = params[\"disasterRecoveryMethod\"];\n    if (params[\"transferMode\"] !== undefined) data[\"TransferMode\"] = params[\"transferMode\"];\n    if (params[\"secure\"] !== undefined) data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n    if (params[\"cnamLookupEnabled\"] !== undefined) data[\"CnamLookupEnabled\"] = serialize.bool(params[\"cnamLookupEnabled\"]);\n    if (params[\"transferCallerId\"] !== undefined) data[\"TransferCallerId\"] = params[\"transferCallerId\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrunkInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrunkContextImpl = TrunkContextImpl;\nclass TrunkInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.domainName = payload.domain_name;\n    this.disasterRecoveryMethod = payload.disaster_recovery_method;\n    this.disasterRecoveryUrl = payload.disaster_recovery_url;\n    this.friendlyName = payload.friendly_name;\n    this.secure = payload.secure;\n    this.recording = payload.recording;\n    this.transferMode = payload.transfer_mode;\n    this.transferCallerId = payload.transfer_caller_id;\n    this.cnamLookupEnabled = payload.cnam_lookup_enabled;\n    this.authType = payload.auth_type;\n    this.authTypeSet = payload.auth_type_set;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.sid = payload.sid;\n    this.url = payload.url;\n    this.links = payload.links;\n    this._solution = {\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new TrunkContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a TrunkInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a TrunkInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed TrunkInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Access the credentialsLists.\n   */\n  credentialsLists() {\n    return this._proxy.credentialsLists;\n  }\n  /**\n   * Access the ipAccessControlLists.\n   */\n  ipAccessControlLists() {\n    return this._proxy.ipAccessControlLists;\n  }\n  /**\n   * Access the originationUrls.\n   */\n  originationUrls() {\n    return this._proxy.originationUrls;\n  }\n  /**\n   * Access the phoneNumbers.\n   */\n  phoneNumbers() {\n    return this._proxy.phoneNumbers;\n  }\n  /**\n   * Access the recordings.\n   */\n  recordings() {\n    return this._proxy.recordings;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      domainName: this.domainName,\n      disasterRecoveryMethod: this.disasterRecoveryMethod,\n      disasterRecoveryUrl: this.disasterRecoveryUrl,\n      friendlyName: this.friendlyName,\n      secure: this.secure,\n      recording: this.recording,\n      transferMode: this.transferMode,\n      transferCallerId: this.transferCallerId,\n      cnamLookupEnabled: this.cnamLookupEnabled,\n      authType: this.authType,\n      authTypeSet: this.authTypeSet,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      sid: this.sid,\n      url: this.url,\n      links: this.links\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrunkInstance = TrunkInstance;\nfunction TrunkListInstance(version) {\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new TrunkContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/Trunks`;\n  instance.create = function create(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"domainName\"] !== undefined) data[\"DomainName\"] = params[\"domainName\"];\n    if (params[\"disasterRecoveryUrl\"] !== undefined) data[\"DisasterRecoveryUrl\"] = params[\"disasterRecoveryUrl\"];\n    if (params[\"disasterRecoveryMethod\"] !== undefined) data[\"DisasterRecoveryMethod\"] = params[\"disasterRecoveryMethod\"];\n    if (params[\"transferMode\"] !== undefined) data[\"TransferMode\"] = params[\"transferMode\"];\n    if (params[\"secure\"] !== undefined) data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n    if (params[\"cnamLookupEnabled\"] !== undefined) data[\"CnamLookupEnabled\"] = serialize.bool(params[\"cnamLookupEnabled\"]);\n    if (params[\"transferCallerId\"] !== undefined) data[\"TransferCallerId\"] = params[\"transferCallerId\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrunkInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrunkPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new TrunkPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.TrunkListInstance = TrunkListInstance;\nclass TrunkPage extends Page_1.default {\n  /**\n   * Initialize the TrunkPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of TrunkInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new TrunkInstance(this._version, payload);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrunkPage = TrunkPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","TrunkPage","TrunkListInstance","TrunkInstance","TrunkContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","credentialList_1","ipAccessControlList_1","originationUrl_1","phoneNumber_1","recording_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","credentialsLists","_credentialsLists","CredentialListListInstance","ipAccessControlLists","_ipAccessControlLists","IpAccessControlListListInstance","originationUrls","_originationUrls","OriginationUrlListInstance","phoneNumbers","_phoneNumbers","PhoneNumberListInstance","recordings","_recordings","RecordingListInstance","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","bool","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","domainName","domain_name","disasterRecoveryMethod","disaster_recovery_method","disasterRecoveryUrl","disaster_recovery_url","friendlyName","friendly_name","secure","recording","transferMode","transfer_mode","transferCallerId","transfer_caller_id","cnamLookupEnabled","cnam_lookup_enabled","authType","auth_type","authTypeSet","auth_type_set","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","links","_proxy","_context","version","get","create","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/trunking/v1/trunk.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trunking\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrunkPage = exports.TrunkListInstance = exports.TrunkInstance = exports.TrunkContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst credentialList_1 = require(\"./trunk/credentialList\");\nconst ipAccessControlList_1 = require(\"./trunk/ipAccessControlList\");\nconst originationUrl_1 = require(\"./trunk/originationUrl\");\nconst phoneNumber_1 = require(\"./trunk/phoneNumber\");\nconst recording_1 = require(\"./trunk/recording\");\nclass TrunkContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/Trunks/${sid}`;\n    }\n    get credentialsLists() {\n        this._credentialsLists =\n            this._credentialsLists ||\n                (0, credentialList_1.CredentialListListInstance)(this._version, this._solution.sid);\n        return this._credentialsLists;\n    }\n    get ipAccessControlLists() {\n        this._ipAccessControlLists =\n            this._ipAccessControlLists ||\n                (0, ipAccessControlList_1.IpAccessControlListListInstance)(this._version, this._solution.sid);\n        return this._ipAccessControlLists;\n    }\n    get originationUrls() {\n        this._originationUrls =\n            this._originationUrls ||\n                (0, originationUrl_1.OriginationUrlListInstance)(this._version, this._solution.sid);\n        return this._originationUrls;\n    }\n    get phoneNumbers() {\n        this._phoneNumbers =\n            this._phoneNumbers ||\n                (0, phoneNumber_1.PhoneNumberListInstance)(this._version, this._solution.sid);\n        return this._phoneNumbers;\n    }\n    get recordings() {\n        this._recordings =\n            this._recordings ||\n                (0, recording_1.RecordingListInstance)(this._version, this._solution.sid);\n        return this._recordings;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new TrunkInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"domainName\"] !== undefined)\n            data[\"DomainName\"] = params[\"domainName\"];\n        if (params[\"disasterRecoveryUrl\"] !== undefined)\n            data[\"DisasterRecoveryUrl\"] = params[\"disasterRecoveryUrl\"];\n        if (params[\"disasterRecoveryMethod\"] !== undefined)\n            data[\"DisasterRecoveryMethod\"] = params[\"disasterRecoveryMethod\"];\n        if (params[\"transferMode\"] !== undefined)\n            data[\"TransferMode\"] = params[\"transferMode\"];\n        if (params[\"secure\"] !== undefined)\n            data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n        if (params[\"cnamLookupEnabled\"] !== undefined)\n            data[\"CnamLookupEnabled\"] = serialize.bool(params[\"cnamLookupEnabled\"]);\n        if (params[\"transferCallerId\"] !== undefined)\n            data[\"TransferCallerId\"] = params[\"transferCallerId\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrunkInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrunkContextImpl = TrunkContextImpl;\nclass TrunkInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.domainName = payload.domain_name;\n        this.disasterRecoveryMethod = payload.disaster_recovery_method;\n        this.disasterRecoveryUrl = payload.disaster_recovery_url;\n        this.friendlyName = payload.friendly_name;\n        this.secure = payload.secure;\n        this.recording = payload.recording;\n        this.transferMode = payload.transfer_mode;\n        this.transferCallerId = payload.transfer_caller_id;\n        this.cnamLookupEnabled = payload.cnam_lookup_enabled;\n        this.authType = payload.auth_type;\n        this.authTypeSet = payload.auth_type_set;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.sid = payload.sid;\n        this.url = payload.url;\n        this.links = payload.links;\n        this._solution = { sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context || new TrunkContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a TrunkInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a TrunkInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed TrunkInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Access the credentialsLists.\n     */\n    credentialsLists() {\n        return this._proxy.credentialsLists;\n    }\n    /**\n     * Access the ipAccessControlLists.\n     */\n    ipAccessControlLists() {\n        return this._proxy.ipAccessControlLists;\n    }\n    /**\n     * Access the originationUrls.\n     */\n    originationUrls() {\n        return this._proxy.originationUrls;\n    }\n    /**\n     * Access the phoneNumbers.\n     */\n    phoneNumbers() {\n        return this._proxy.phoneNumbers;\n    }\n    /**\n     * Access the recordings.\n     */\n    recordings() {\n        return this._proxy.recordings;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            domainName: this.domainName,\n            disasterRecoveryMethod: this.disasterRecoveryMethod,\n            disasterRecoveryUrl: this.disasterRecoveryUrl,\n            friendlyName: this.friendlyName,\n            secure: this.secure,\n            recording: this.recording,\n            transferMode: this.transferMode,\n            transferCallerId: this.transferCallerId,\n            cnamLookupEnabled: this.cnamLookupEnabled,\n            authType: this.authType,\n            authTypeSet: this.authTypeSet,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            sid: this.sid,\n            url: this.url,\n            links: this.links,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrunkInstance = TrunkInstance;\nfunction TrunkListInstance(version) {\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new TrunkContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/Trunks`;\n    instance.create = function create(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"domainName\"] !== undefined)\n            data[\"DomainName\"] = params[\"domainName\"];\n        if (params[\"disasterRecoveryUrl\"] !== undefined)\n            data[\"DisasterRecoveryUrl\"] = params[\"disasterRecoveryUrl\"];\n        if (params[\"disasterRecoveryMethod\"] !== undefined)\n            data[\"DisasterRecoveryMethod\"] = params[\"disasterRecoveryMethod\"];\n        if (params[\"transferMode\"] !== undefined)\n            data[\"TransferMode\"] = params[\"transferMode\"];\n        if (params[\"secure\"] !== undefined)\n            data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n        if (params[\"cnamLookupEnabled\"] !== undefined)\n            data[\"CnamLookupEnabled\"] = serialize.bool(params[\"cnamLookupEnabled\"]);\n        if (params[\"transferCallerId\"] !== undefined)\n            data[\"TransferCallerId\"] = params[\"transferCallerId\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrunkInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrunkPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new TrunkPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.TrunkListInstance = TrunkListInstance;\nclass TrunkPage extends Page_1.default {\n    /**\n     * Initialize the TrunkPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of TrunkInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new TrunkInstance(this._version, payload);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrunkPage = TrunkPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}