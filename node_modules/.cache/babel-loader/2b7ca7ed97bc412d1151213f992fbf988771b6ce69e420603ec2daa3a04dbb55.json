{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar SyncListItemList;\nvar SyncListItemPage;\nvar SyncListItemInstance;\nvar SyncListItemContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {string} listSid - The SID of the Sync List that contains the List Item\n */\n/* jshint ignore:end */\nSyncListItemList = function SyncListItemList(version, serviceSid, listSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncListItems\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n  /* jshint ignore:end */\n  function SyncListItemListInstance(sid) {\n    return SyncListItemListInstance.get(sid);\n  }\n  SyncListItemListInstance._version = version;\n  // Path Solution\n  SyncListItemListInstance._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid\n  };\n  SyncListItemListInstance._uri = `/Services/${serviceSid}/Lists/${listSid}/Items`;\n  /* jshint ignore:start */\n  /**\n   * create a SyncListItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {object} opts.data -\n   *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n   * @param {number} [opts.ttl] - An alias for item_ttl\n   * @param {number} [opts.itemTtl] -\n   *          How long, in seconds, before the List Item expires\n   * @param {number} [opts.collectionTtl] -\n   *          How long, in seconds, before the List Item's parent Sync List expires\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncListItemInstance\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Ttl': _.get(opts, 'ttl'),\n      'ItemTtl': _.get(opts, 'itemTtl'),\n      'CollectionTtl': _.get(opts, 'collectionTtl')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.index));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list_item\n   *\n   * @function get\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} index - The index of the Sync List Item resource to fetch\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.get = function get(index) {\n    return new SyncListItemContext(this._version, this._solution.serviceSid, this._solution.listSid, index);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  SyncListItemListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return SyncListItemListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemPage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListItemSolution} solution - Path solution\n *\n * @returns SyncListItemPage\n */\n/* jshint ignore:end */\nSyncListItemPage = function SyncListItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(SyncListItemPage.prototype, Page.prototype);\nSyncListItemPage.prototype.constructor = SyncListItemPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @param {SyncListItemPayload} payload - Payload response from the API\n *\n * @returns SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncListItemPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance\n *\n * @property {number} index - The automatically generated index of the List Item\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @property {string} listSid -\n *          The SID of the Sync List that contains the List Item\n * @property {string} url - The absolute URL of the List Item resource\n * @property {string} revision -\n *          The current revision of the item, represented as a string\n * @property {object} data -\n *          An arbitrary, schema-less object that the List Item stores\n * @property {Date} dateExpires -\n *          The ISO 8601 date and time in GMT when the List Item expires\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the List Item's creator\n *\n * @param {V1} version - Version of the resource\n * @param {SyncListItemPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid} listSid - The SID of the Sync List that contains the List Item\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n/* jshint ignore:end */\nSyncListItemInstance = function SyncListItemInstance(version, payload, serviceSid, listSid, index) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.index = deserialize.integer(payload.index); // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.listSid = payload.list_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.dateExpires = deserialize.iso8601DateTime(payload.date_expires); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    index: index || this.index\n  };\n};\nObject.defineProperty(SyncListItemInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SyncListItemContext(this._version, this._solution.serviceSid, this._solution.listSid, this._solution.index);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.remove = function remove(opts, callback) {\n  return this._proxy.remove(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncListItemInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Sync Service with the Sync List Item resource to fetch\n * @param {sid_like} listSid -\n *          The SID of the Sync List with the Sync List Item resource to fetch\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n/* jshint ignore:end */\nSyncListItemContext = function SyncListItemContext(version, serviceSid, listSid, index) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    index: index\n  };\n  this._uri = `/Services/${serviceSid}/Lists/${listSid}/Items/${index}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.index));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.remove = function remove(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var headers = values.of({\n    'If-Match': _.get(opts, 'ifMatch')\n  });\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE',\n    headers: headers\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Data': serialize.object(_.get(opts, 'data')),\n    'Ttl': _.get(opts, 'ttl'),\n    'ItemTtl': _.get(opts, 'itemTtl'),\n    'CollectionTtl': _.get(opts, 'collectionTtl')\n  });\n  var headers = values.of({\n    'If-Match': _.get(opts, 'ifMatch')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data,\n    headers: headers\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.index));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nSyncListItemContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  SyncListItemList: SyncListItemList,\n  SyncListItemPage: SyncListItemPage,\n  SyncListItemInstance: SyncListItemInstance,\n  SyncListItemContext: SyncListItemContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","SyncListItemList","SyncListItemPage","SyncListItemInstance","SyncListItemContext","version","serviceSid","listSid","SyncListItemListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","data","deferred","defer","of","object","promise","uri","method","then","payload","resolve","index","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","integer","accountSid","account_sid","service_sid","list_sid","url","revision","dateExpires","iso8601DateTime","date_expires","dateCreated","date_created","dateUpdated","date_updated","createdBy","created_by","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","headers","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/sync/v1/service/syncList/syncListItem.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar SyncListItemList;\nvar SyncListItemPage;\nvar SyncListItemInstance;\nvar SyncListItemContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {string} listSid - The SID of the Sync List that contains the List Item\n */\n/* jshint ignore:end */\nSyncListItemList = function SyncListItemList(version, serviceSid, listSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncListItems\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n  /* jshint ignore:end */\n  function SyncListItemListInstance(sid) {\n    return SyncListItemListInstance.get(sid);\n  }\n\n  SyncListItemListInstance._version = version;\n  // Path Solution\n  SyncListItemListInstance._solution = {serviceSid: serviceSid, listSid: listSid};\n  SyncListItemListInstance._uri = `/Services/${serviceSid}/Lists/${listSid}/Items`;\n  /* jshint ignore:start */\n  /**\n   * create a SyncListItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {object} opts.data -\n   *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n   * @param {number} [opts.ttl] - An alias for item_ttl\n   * @param {number} [opts.itemTtl] -\n   *          How long, in seconds, before the List Item expires\n   * @param {number} [opts.collectionTtl] -\n   *          How long, in seconds, before the List Item's parent Sync List expires\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncListItemInstance\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Ttl': _.get(opts, 'ttl'),\n      'ItemTtl': _.get(opts, 'itemTtl'),\n      'CollectionTtl': _.get(opts, 'collectionTtl')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListItemInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.listSid,\n        this._solution.index\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list_item\n   *\n   * @function get\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} index - The index of the Sync List Item resource to fetch\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.get = function get(index) {\n    return new SyncListItemContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      index\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncListItemListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncListItemListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemPage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListItemSolution} solution - Path solution\n *\n * @returns SyncListItemPage\n */\n/* jshint ignore:end */\nSyncListItemPage = function SyncListItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncListItemPage.prototype, Page.prototype);\nSyncListItemPage.prototype.constructor = SyncListItemPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @param {SyncListItemPayload} payload - Payload response from the API\n *\n * @returns SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListItemInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.listSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListItemPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance\n *\n * @property {number} index - The automatically generated index of the List Item\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @property {string} listSid -\n *          The SID of the Sync List that contains the List Item\n * @property {string} url - The absolute URL of the List Item resource\n * @property {string} revision -\n *          The current revision of the item, represented as a string\n * @property {object} data -\n *          An arbitrary, schema-less object that the List Item stores\n * @property {Date} dateExpires -\n *          The ISO 8601 date and time in GMT when the List Item expires\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the List Item's creator\n *\n * @param {V1} version - Version of the resource\n * @param {SyncListItemPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid} listSid - The SID of the Sync List that contains the List Item\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n/* jshint ignore:end */\nSyncListItemInstance = function SyncListItemInstance(version, payload,\n                                                      serviceSid, listSid,\n                                                      index) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.index = deserialize.integer(payload.index); // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.listSid = payload.list_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.dateExpires = deserialize.iso8601DateTime(payload.date_expires); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, listSid: listSid, index: index || this.index, };\n};\n\nObject.defineProperty(SyncListItemInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SyncListItemContext(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.listSid,\n          this._solution.index\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.remove = function remove(opts, callback) {\n  return this._proxy.remove(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListItemInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Sync Service with the Sync List Item resource to fetch\n * @param {sid_like} listSid -\n *          The SID of the Sync List with the Sync List Item resource to fetch\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n/* jshint ignore:end */\nSyncListItemContext = function SyncListItemContext(version, serviceSid, listSid,\n                                                    index) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, listSid: listSid, index: index, };\n  this._uri = `/Services/${serviceSid}/Lists/${listSid}/Items/${index}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.index\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.remove = function remove(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var headers = values.of({'If-Match': _.get(opts, 'ifMatch')});\n\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE', headers: headers});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Data': serialize.object(_.get(opts, 'data')),\n    'Ttl': _.get(opts, 'ttl'),\n    'ItemTtl': _.get(opts, 'itemTtl'),\n    'CollectionTtl': _.get(opts, 'collectionTtl')\n  });\n  var headers = values.of({'If-Match': _.get(opts, 'ifMatch')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data, headers: headers});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.index\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncListItemContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncListItemList: SyncListItemList,\n  SyncListItemPage: SyncListItemPage,\n  SyncListItemInstance: SyncListItemInstance,\n  SyncListItemContext: SyncListItemContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}