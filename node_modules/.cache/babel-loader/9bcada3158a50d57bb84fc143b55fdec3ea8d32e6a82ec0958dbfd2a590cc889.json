{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar UsecaseList;\nvar UsecasePage;\nvar UsecaseInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecaseList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nUsecaseList = function UsecaseList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function usecases\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.UsecaseContext}\n   */\n  /* jshint ignore:end */\n  function UsecaseListInstance(sid) {\n    return UsecaseListInstance.get(sid);\n  }\n  UsecaseListInstance._version = version;\n  // Path Solution\n  UsecaseListInstance._solution = {};\n  UsecaseListInstance._uri = `/Services/Usecases`;\n  /* jshint ignore:start */\n  /**\n   * fetch a UsecaseInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsecaseInstance\n   */\n  /* jshint ignore:end */\n  UsecaseListInstance.fetch = function fetch(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.fetch({\n      uri: this._uri,\n      method: 'GET'\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsecaseInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsecaseListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  UsecaseListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return UsecaseListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecasePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecasePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsecaseSolution} solution - Path solution\n *\n * @returns UsecasePage\n */\n/* jshint ignore:end */\nUsecasePage = function UsecasePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(UsecasePage.prototype, Page.prototype);\nUsecasePage.prototype.constructor = UsecasePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsecaseInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @param {UsecasePayload} payload - Payload response from the API\n *\n * @returns UsecaseInstance\n */\n/* jshint ignore:end */\nUsecasePage.prototype.getInstance = function getInstance(payload) {\n  return new UsecaseInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsecasePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nUsecasePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecaseContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseInstance\n *\n * @property {object} usecases - Human readable Messaging Service Use Case details\n *\n * @param {V1} version - Version of the resource\n * @param {UsecasePayload} payload - The instance payload\n */\n/* jshint ignore:end */\nUsecaseInstance = function UsecaseInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.usecases = payload.usecases; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecaseInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsecaseInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nUsecaseInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  UsecaseList: UsecaseList,\n  UsecasePage: UsecasePage,\n  UsecaseInstance: UsecaseInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","UsecaseList","UsecasePage","UsecaseInstance","version","UsecaseListInstance","sid","get","_version","_solution","_uri","fetch","callback","deferred","defer","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","usecases","_context","undefined","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/messaging/v1/usecase.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar UsecaseList;\nvar UsecasePage;\nvar UsecaseInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecaseList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nUsecaseList = function UsecaseList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function usecases\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.UsecaseContext}\n   */\n  /* jshint ignore:end */\n  function UsecaseListInstance(sid) {\n    return UsecaseListInstance.get(sid);\n  }\n\n  UsecaseListInstance._version = version;\n  // Path Solution\n  UsecaseListInstance._solution = {};\n  UsecaseListInstance._uri = `/Services/Usecases`;\n  /* jshint ignore:start */\n  /**\n   * fetch a UsecaseInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsecaseInstance\n   */\n  /* jshint ignore:end */\n  UsecaseListInstance.fetch = function fetch(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsecaseInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.UsecaseList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsecaseListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsecaseListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsecaseListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecasePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecasePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsecaseSolution} solution - Path solution\n *\n * @returns UsecasePage\n */\n/* jshint ignore:end */\nUsecasePage = function UsecasePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsecasePage.prototype, Page.prototype);\nUsecasePage.prototype.constructor = UsecasePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsecaseInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @param {UsecasePayload} payload - Payload response from the API\n *\n * @returns UsecaseInstance\n */\n/* jshint ignore:end */\nUsecasePage.prototype.getInstance = function getInstance(payload) {\n  return new UsecaseInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecasePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsecasePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsecasePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsecaseContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.UsecaseInstance\n *\n * @property {object} usecases - Human readable Messaging Service Use Case details\n *\n * @param {V1} version - Version of the resource\n * @param {UsecasePayload} payload - The instance payload\n */\n/* jshint ignore:end */\nUsecaseInstance = function UsecaseInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.usecases = payload.usecases; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.UsecaseInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsecaseInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsecaseInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsecaseList: UsecaseList,\n  UsecasePage: UsecasePage,\n  UsecaseInstance: UsecaseInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}