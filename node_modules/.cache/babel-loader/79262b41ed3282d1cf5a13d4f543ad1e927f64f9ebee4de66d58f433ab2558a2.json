{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar SyncListItemList = require('./syncList/syncListItem').SyncListItemList;\nvar SyncListPermissionList = require('./syncList/syncListPermission').SyncListPermissionList;\nvar deserialize = require('../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar SyncListList;\nvar SyncListPage;\nvar SyncListInstance;\nvar SyncListContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n */\n/* jshint ignore:end */\nSyncListList = function SyncListList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncLists\n   * @memberof Twilio.Sync.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext}\n   */\n  /* jshint ignore:end */\n  function SyncListListInstance(sid) {\n    return SyncListListInstance.get(sid);\n  }\n  SyncListListInstance._version = version;\n  // Path Solution\n  SyncListListInstance._solution = {\n    serviceSid: serviceSid\n  };\n  SyncListListInstance._uri = `/Services/${serviceSid}/Lists`;\n  /* jshint ignore:start */\n  /**\n   * create a SyncListInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.uniqueName] -\n   *          An application-defined string that uniquely identifies the resource\n   * @param {number} [opts.ttl] - Alias for collection_ttl\n   * @param {number} [opts.collectionTtl] -\n   *          How long, in seconds, before the Sync List expires and is deleted\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncListInstance\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'Ttl': _.get(opts, 'ttl'),\n      'CollectionTtl': _.get(opts, 'collectionTtl')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListInstance(this._version, payload, this._solution.serviceSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list\n   *\n   * @function get\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {string} sid - The SID of the Sync List resource to fetch\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext}\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.get = function get(sid) {\n    return new SyncListContext(this._version, this._solution.serviceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  SyncListListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return SyncListListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListSolution} solution - Path solution\n *\n * @returns SyncListPage\n */\n/* jshint ignore:end */\nSyncListPage = function SyncListPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(SyncListPage.prototype, Page.prototype);\nSyncListPage.prototype.constructor = SyncListPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListPage#\n *\n * @param {SyncListPayload} payload - Payload response from the API\n *\n * @returns SyncListInstance\n */\n/* jshint ignore:end */\nSyncListPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncListPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @property {string} url - The absolute URL of the Sync List resource\n * @property {string} links - The URLs of the Sync List's nested resources\n * @property {string} revision -\n *          The current revision of the Sync List, represented as a string\n * @property {Date} dateExpires -\n *          The ISO 8601 date and time in GMT when the Sync List expires\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the Sync List's creator\n *\n * @param {V1} version - Version of the resource\n * @param {SyncListPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid_like} sid - The SID of the Sync List resource to fetch\n */\n/* jshint ignore:end */\nSyncListInstance = function SyncListInstance(version, payload, serviceSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.dateExpires = deserialize.iso8601DateTime(payload.date_expires); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(SyncListInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SyncListContext(this._version, this._solution.serviceSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.ttl] - An alias for collection_ttl\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the Sync List expires and is deleted\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the syncListItems\n *\n * @function syncListItems\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList}\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.syncListItems = function syncListItems() {\n  return this._proxy.syncListItems;\n};\n\n/* jshint ignore:start */\n/**\n * Access the syncListPermissions\n *\n * @function syncListPermissions\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListPermissionList}\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.syncListPermissions = function syncListPermissions() {\n  return this._proxy.syncListPermissions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncListInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext\n *\n * @property {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList} syncListItems -\n *          syncListItems resource\n * @property {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListPermissionList} syncListPermissions -\n *          syncListPermissions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Sync Service with the Sync List resource to fetch\n * @param {sid_like} sid - The SID of the Sync List resource to fetch\n */\n/* jshint ignore:end */\nSyncListContext = function SyncListContext(version, serviceSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    sid: sid\n  };\n  this._uri = `/Services/${serviceSid}/Lists/${sid}`;\n\n  // Dependents\n  this._syncListItems = undefined;\n  this._syncListPermissions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListInstance(this._version, payload, this._solution.serviceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.ttl] - An alias for collection_ttl\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the Sync List expires and is deleted\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Ttl': _.get(opts, 'ttl'),\n    'CollectionTtl': _.get(opts, 'collectionTtl')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListInstance(this._version, payload, this._solution.serviceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(SyncListContext.prototype, 'syncListItems', {\n  get: function () {\n    if (!this._syncListItems) {\n      this._syncListItems = new SyncListItemList(this._version, this._solution.serviceSid, this._solution.sid);\n    }\n    return this._syncListItems;\n  }\n});\nObject.defineProperty(SyncListContext.prototype, 'syncListPermissions', {\n  get: function () {\n    if (!this._syncListPermissions) {\n      this._syncListPermissions = new SyncListPermissionList(this._version, this._solution.serviceSid, this._solution.sid);\n    }\n    return this._syncListPermissions;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nSyncListContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  SyncListList: SyncListList,\n  SyncListPage: SyncListPage,\n  SyncListInstance: SyncListInstance,\n  SyncListContext: SyncListContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","SyncListItemList","SyncListPermissionList","deserialize","values","SyncListList","SyncListPage","SyncListInstance","SyncListContext","version","serviceSid","SyncListListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","each","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","uniqueName","unique_name","accountSid","account_sid","service_sid","url","links","revision","dateExpires","iso8601DateTime","date_expires","dateCreated","date_created","dateUpdated","date_updated","createdBy","created_by","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","syncListItems","syncListPermissions","_syncListItems","_syncListPermissions","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/sync/v1/service/syncList.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar SyncListItemList = require('./syncList/syncListItem').SyncListItemList;\nvar SyncListPermissionList = require(\n    './syncList/syncListPermission').SyncListPermissionList;\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar SyncListList;\nvar SyncListPage;\nvar SyncListInstance;\nvar SyncListContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n */\n/* jshint ignore:end */\nSyncListList = function SyncListList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncLists\n   * @memberof Twilio.Sync.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext}\n   */\n  /* jshint ignore:end */\n  function SyncListListInstance(sid) {\n    return SyncListListInstance.get(sid);\n  }\n\n  SyncListListInstance._version = version;\n  // Path Solution\n  SyncListListInstance._solution = {serviceSid: serviceSid};\n  SyncListListInstance._uri = `/Services/${serviceSid}/Lists`;\n  /* jshint ignore:start */\n  /**\n   * create a SyncListInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.uniqueName] -\n   *          An application-defined string that uniquely identifies the resource\n   * @param {number} [opts.ttl] - Alias for collection_ttl\n   * @param {number} [opts.collectionTtl] -\n   *          How long, in seconds, before the Sync List expires and is deleted\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncListInstance\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'Ttl': _.get(opts, 'ttl'),\n      'CollectionTtl': _.get(opts, 'collectionTtl')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list\n   *\n   * @function get\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @param {string} sid - The SID of the Sync List resource to fetch\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext}\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.get = function get(sid) {\n    return new SyncListContext(this._version, this._solution.serviceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncListListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncListListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListSolution} solution - Path solution\n *\n * @returns SyncListPage\n */\n/* jshint ignore:end */\nSyncListPage = function SyncListPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncListPage.prototype, Page.prototype);\nSyncListPage.prototype.constructor = SyncListPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListPage#\n *\n * @param {SyncListPayload} payload - Payload response from the API\n *\n * @returns SyncListInstance\n */\n/* jshint ignore:end */\nSyncListPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @property {string} url - The absolute URL of the Sync List resource\n * @property {string} links - The URLs of the Sync List's nested resources\n * @property {string} revision -\n *          The current revision of the Sync List, represented as a string\n * @property {Date} dateExpires -\n *          The ISO 8601 date and time in GMT when the Sync List expires\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the Sync List's creator\n *\n * @param {V1} version - Version of the resource\n * @param {SyncListPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid_like} sid - The SID of the Sync List resource to fetch\n */\n/* jshint ignore:end */\nSyncListInstance = function SyncListInstance(version, payload, serviceSid, sid)\n                                              {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.dateExpires = deserialize.iso8601DateTime(payload.date_expires); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(SyncListInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SyncListContext(this._version, this._solution.serviceSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.ttl] - An alias for collection_ttl\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the Sync List expires and is deleted\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the syncListItems\n *\n * @function syncListItems\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList}\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.syncListItems = function syncListItems() {\n  return this._proxy.syncListItems;\n};\n\n/* jshint ignore:start */\n/**\n * Access the syncListPermissions\n *\n * @function syncListPermissions\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListPermissionList}\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.syncListPermissions = function syncListPermissions()\n    {\n  return this._proxy.syncListPermissions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext\n *\n * @property {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList} syncListItems -\n *          syncListItems resource\n * @property {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListPermissionList} syncListPermissions -\n *          syncListPermissions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Sync Service with the Sync List resource to fetch\n * @param {sid_like} sid - The SID of the Sync List resource to fetch\n */\n/* jshint ignore:end */\nSyncListContext = function SyncListContext(version, serviceSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, sid: sid, };\n  this._uri = `/Services/${serviceSid}/Lists/${sid}`;\n\n  // Dependents\n  this._syncListItems = undefined;\n  this._syncListPermissions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.ttl] - An alias for collection_ttl\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the Sync List expires and is deleted\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListInstance\n */\n/* jshint ignore:end */\nSyncListContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Ttl': _.get(opts, 'ttl'), 'CollectionTtl': _.get(opts, 'collectionTtl')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(SyncListContext.prototype,\n  'syncListItems', {\n    get: function() {\n      if (!this._syncListItems) {\n        this._syncListItems = new SyncListItemList(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.sid\n        );\n      }\n      return this._syncListItems;\n    }\n});\n\nObject.defineProperty(SyncListContext.prototype,\n  'syncListPermissions', {\n    get: function() {\n      if (!this._syncListPermissions) {\n        this._syncListPermissions = new SyncListPermissionList(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.sid\n        );\n      }\n      return this._syncListPermissions;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncListContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncListList: SyncListList,\n  SyncListPage: SyncListPage,\n  SyncListInstance: SyncListInstance,\n  SyncListContext: SyncListContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}