{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar PaymentList;\nvar PaymentPage;\nvar PaymentInstance;\nvar PaymentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {string} callSid - The SID of the Call the resource is associated with.\n */\n/* jshint ignore:end */\nPaymentList = function PaymentList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n  /**\n   * @function payments\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n  /* jshint ignore:end */\n  function PaymentListInstance(sid) {\n    return PaymentListInstance.get(sid);\n  }\n  PaymentListInstance._version = version;\n  // Path Solution\n  PaymentListInstance._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n  PaymentListInstance._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments.json`;\n  /* jshint ignore:start */\n  /**\n   * create a PaymentInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.idempotencyKey -\n   *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n   * @param {string} opts.statusCallback -\n   *          Provide an absolute or relative URL to receive status updates regarding your Pay session..\n   * @param {payment.bank_account_type} [opts.bankAccountType] -\n   *          Type of bank account if payment source is ACH.\n   * @param {number} [opts.chargeAmount] -\n   *          A positive decimal value less than 1,000,000 to charge against the credit card or bank account.\n   * @param {string} [opts.currency] - The currency of the `charge_amount`.\n   * @param {string} [opts.description] -\n   *          The description can be used to provide more details regarding the transaction.\n   * @param {string} [opts.input] -\n   *          A list of inputs that should be accepted. Currently only `dtmf` is supported.\n   * @param {number} [opts.minPostalCodeLength] -\n   *          A positive integer that is used to validate the length of the `PostalCode` inputted by the user.\n   * @param {object} [opts.parameter] -\n   *          A single level JSON string that is required when accepting certain information specific only to ACH payments.\n   * @param {string} [opts.paymentConnector] -\n   *          This is the unique name corresponding to the Payment Gateway Connector installed in the Twilio Add-ons.\n   * @param {payment.payment_method} [opts.paymentMethod] -\n   *          Type of payment being captured.\n   * @param {boolean} [opts.postalCode] -\n   *          Indicates whether the credit card PostalCode (zip code) is a required piece of payment information that must be provided by the caller.\n   * @param {boolean} [opts.securityCode] -\n   *          Indicates whether the credit card security code is a required piece of payment information that must be provided by the caller.\n   * @param {number} [opts.timeout] -\n   *          The number of seconds that <Pay> should wait for the caller to press a digit between each subsequent digit, after the first one, before moving on to validate the digits captured.\n   * @param {payment.token_type} [opts.tokenType] -\n   *          Indicates whether the payment method should be tokenized as a `one-time` or `reusable` token.\n   * @param {string} [opts.validCardTypes] -\n   *          Credit card types separated by space that Pay should accept.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed PaymentInstance\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.idempotencyKey)) {\n      throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n    }\n    if (_.isUndefined(opts.statusCallback)) {\n      throw new Error('Required parameter \"opts.statusCallback\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'BankAccountType': _.get(opts, 'bankAccountType'),\n      'ChargeAmount': _.get(opts, 'chargeAmount'),\n      'Currency': _.get(opts, 'currency'),\n      'Description': _.get(opts, 'description'),\n      'Input': _.get(opts, 'input'),\n      'MinPostalCodeLength': _.get(opts, 'minPostalCodeLength'),\n      'Parameter': serialize.object(_.get(opts, 'parameter')),\n      'PaymentConnector': _.get(opts, 'paymentConnector'),\n      'PaymentMethod': _.get(opts, 'paymentMethod'),\n      'PostalCode': serialize.bool(_.get(opts, 'postalCode')),\n      'SecurityCode': serialize.bool(_.get(opts, 'securityCode')),\n      'Timeout': _.get(opts, 'timeout'),\n      'TokenType': _.get(opts, 'tokenType'),\n      'ValidCardTypes': _.get(opts, 'validCardTypes')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a payment\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {string} sid - The SID of Payments session\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.get = function get(sid) {\n    return new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  PaymentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return PaymentListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PaymentSolution} solution - Path solution\n *\n * @returns PaymentPage\n */\n/* jshint ignore:end */\nPaymentPage = function PaymentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(PaymentPage.prototype, Page.prototype);\nPaymentPage.prototype.constructor = PaymentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of PaymentInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @param {PaymentPayload} payload - Payload response from the API\n *\n * @returns PaymentInstance\n */\n/* jshint ignore:end */\nPaymentPage.prototype.getInstance = function getInstance(payload) {\n  return new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nPaymentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance\n *\n * @property {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @property {string} callSid -\n *          The SID of the Call the resource is associated with.\n * @property {string} sid - The SID of the Payments resource.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {PaymentPayload} payload - The instance payload\n * @param {sid} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {sid} callSid - The SID of the Call the resource is associated with.\n * @param {sid} sid - The SID of Payments session\n */\n/* jshint ignore:end */\nPaymentInstance = function PaymentInstance(version, payload, accountSid, callSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.callSid = payload.call_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(PaymentInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n/* jshint ignore:end */\nPaymentInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nPaymentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The SID of the Account that will update the resource\n * @param {sid} callSid - The SID of the call that will create the resource.\n * @param {sid} sid - The SID of Payments session\n */\n/* jshint ignore:end */\nPaymentContext = function PaymentContext(version, accountSid, callSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid,\n    sid: sid\n  };\n  this._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments/${sid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n/* jshint ignore:end */\nPaymentContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.idempotencyKey)) {\n    throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n  }\n  if (_.isUndefined(opts.statusCallback)) {\n    throw new Error('Required parameter \"opts.statusCallback\" missing.');\n  }\n  var deferred = Q.defer();\n  var data = values.of({\n    'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'Capture': _.get(opts, 'capture'),\n    'Status': _.get(opts, 'status')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nPaymentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  PaymentList: PaymentList,\n  PaymentPage: PaymentPage,\n  PaymentInstance: PaymentInstance,\n  PaymentContext: PaymentContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","PaymentList","PaymentPage","PaymentInstance","PaymentContext","version","accountSid","callSid","PaymentListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","idempotencyKey","statusCallback","deferred","defer","data","of","object","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","call_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","_context","undefined","Object","defineProperty","update","_proxy","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/api/v2010/account/call/payment.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar PaymentList;\nvar PaymentPage;\nvar PaymentInstance;\nvar PaymentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {string} callSid - The SID of the Call the resource is associated with.\n */\n/* jshint ignore:end */\nPaymentList = function PaymentList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n  /**\n   * @function payments\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n  /* jshint ignore:end */\n  function PaymentListInstance(sid) {\n    return PaymentListInstance.get(sid);\n  }\n\n  PaymentListInstance._version = version;\n  // Path Solution\n  PaymentListInstance._solution = {accountSid: accountSid, callSid: callSid};\n  PaymentListInstance._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments.json`;\n  /* jshint ignore:start */\n  /**\n   * create a PaymentInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.idempotencyKey -\n   *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n   * @param {string} opts.statusCallback -\n   *          Provide an absolute or relative URL to receive status updates regarding your Pay session..\n   * @param {payment.bank_account_type} [opts.bankAccountType] -\n   *          Type of bank account if payment source is ACH.\n   * @param {number} [opts.chargeAmount] -\n   *          A positive decimal value less than 1,000,000 to charge against the credit card or bank account.\n   * @param {string} [opts.currency] - The currency of the `charge_amount`.\n   * @param {string} [opts.description] -\n   *          The description can be used to provide more details regarding the transaction.\n   * @param {string} [opts.input] -\n   *          A list of inputs that should be accepted. Currently only `dtmf` is supported.\n   * @param {number} [opts.minPostalCodeLength] -\n   *          A positive integer that is used to validate the length of the `PostalCode` inputted by the user.\n   * @param {object} [opts.parameter] -\n   *          A single level JSON string that is required when accepting certain information specific only to ACH payments.\n   * @param {string} [opts.paymentConnector] -\n   *          This is the unique name corresponding to the Payment Gateway Connector installed in the Twilio Add-ons.\n   * @param {payment.payment_method} [opts.paymentMethod] -\n   *          Type of payment being captured.\n   * @param {boolean} [opts.postalCode] -\n   *          Indicates whether the credit card PostalCode (zip code) is a required piece of payment information that must be provided by the caller.\n   * @param {boolean} [opts.securityCode] -\n   *          Indicates whether the credit card security code is a required piece of payment information that must be provided by the caller.\n   * @param {number} [opts.timeout] -\n   *          The number of seconds that <Pay> should wait for the caller to press a digit between each subsequent digit, after the first one, before moving on to validate the digits captured.\n   * @param {payment.token_type} [opts.tokenType] -\n   *          Indicates whether the payment method should be tokenized as a `one-time` or `reusable` token.\n   * @param {string} [opts.validCardTypes] -\n   *          Credit card types separated by space that Pay should accept.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed PaymentInstance\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.idempotencyKey)) {\n      throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n    }\n    if (_.isUndefined(opts.statusCallback)) {\n      throw new Error('Required parameter \"opts.statusCallback\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'BankAccountType': _.get(opts, 'bankAccountType'),\n      'ChargeAmount': _.get(opts, 'chargeAmount'),\n      'Currency': _.get(opts, 'currency'),\n      'Description': _.get(opts, 'description'),\n      'Input': _.get(opts, 'input'),\n      'MinPostalCodeLength': _.get(opts, 'minPostalCodeLength'),\n      'Parameter': serialize.object(_.get(opts, 'parameter')),\n      'PaymentConnector': _.get(opts, 'paymentConnector'),\n      'PaymentMethod': _.get(opts, 'paymentMethod'),\n      'PostalCode': serialize.bool(_.get(opts, 'postalCode')),\n      'SecurityCode': serialize.bool(_.get(opts, 'securityCode')),\n      'Timeout': _.get(opts, 'timeout'),\n      'TokenType': _.get(opts, 'tokenType'),\n      'ValidCardTypes': _.get(opts, 'validCardTypes')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new PaymentInstance(\n        this._version,\n        payload,\n        this._solution.accountSid,\n        this._solution.callSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a payment\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {string} sid - The SID of Payments session\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.get = function get(sid) {\n    return new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  PaymentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PaymentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PaymentListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PaymentSolution} solution - Path solution\n *\n * @returns PaymentPage\n */\n/* jshint ignore:end */\nPaymentPage = function PaymentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PaymentPage.prototype, Page.prototype);\nPaymentPage.prototype.constructor = PaymentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of PaymentInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @param {PaymentPayload} payload - Payload response from the API\n *\n * @returns PaymentInstance\n */\n/* jshint ignore:end */\nPaymentPage.prototype.getInstance = function getInstance(payload) {\n  return new PaymentInstance(\n    this._version,\n    payload,\n    this._solution.accountSid,\n    this._solution.callSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPaymentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance\n *\n * @property {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @property {string} callSid -\n *          The SID of the Call the resource is associated with.\n * @property {string} sid - The SID of the Payments resource.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {PaymentPayload} payload - The instance payload\n * @param {sid} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {sid} callSid - The SID of the Call the resource is associated with.\n * @param {sid} sid - The SID of Payments session\n */\n/* jshint ignore:end */\nPaymentInstance = function PaymentInstance(version, payload, accountSid,\n                                            callSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.callSid = payload.call_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, callSid: callSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(PaymentInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new PaymentContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.callSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n/* jshint ignore:end */\nPaymentInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPaymentInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The SID of the Account that will update the resource\n * @param {sid} callSid - The SID of the call that will create the resource.\n * @param {sid} sid - The SID of Payments session\n */\n/* jshint ignore:end */\nPaymentContext = function PaymentContext(version, accountSid, callSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, callSid: callSid, sid: sid, };\n  this._uri = `/Accounts/${accountSid}/Calls/${callSid}/Payments/${sid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions.\n * @param {string} opts.statusCallback -\n *          Provide an absolute or relative URL to receive status updates regarding your Pay session.\n * @param {payment.capture} [opts.capture] -\n *          The piece of payment information that you wish the caller to enter.\n * @param {payment.status} [opts.status] -\n *          Indicates whether the current payment session should be cancelled or completed.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n/* jshint ignore:end */\nPaymentContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.idempotencyKey)) {\n    throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n  }\n  if (_.isUndefined(opts.statusCallback)) {\n    throw new Error('Required parameter \"opts.statusCallback\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'Capture': _.get(opts, 'capture'),\n    'Status': _.get(opts, 'status')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new PaymentInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPaymentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPaymentContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PaymentList: PaymentList,\n  PaymentPage: PaymentPage,\n  PaymentInstance: PaymentInstance,\n  PaymentContext: PaymentContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}