{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../../../../base/values'); /* jshint ignore:line */\n\nvar FunctionVersionContentList;\nvar FunctionVersionContentPage;\nvar FunctionVersionContentInstance;\nvar FunctionVersionContentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentList\n *\n * @param {Twilio.Serverless.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the Function Version resource is associated with\n * @param {string} functionSid -\n *          The SID of the Function that is the parent of the Function Version\n * @param {string} sid -\n *          The unique string that identifies the Function Version resource\n */\n/* jshint ignore:end */\nFunctionVersionContentList = function FunctionVersionContentList(version, serviceSid, functionSid, sid) {\n  /* jshint ignore:start */\n  /**\n   * @function functionVersionContent\n   * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext}\n   */\n  /* jshint ignore:end */\n  function FunctionVersionContentListInstance(sid) {\n    return FunctionVersionContentListInstance.get(sid);\n  }\n  FunctionVersionContentListInstance._version = version;\n  // Path Solution\n  FunctionVersionContentListInstance._solution = {\n    serviceSid: serviceSid,\n    functionSid: functionSid,\n    sid: sid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a function_version_content\n   *\n   * @function get\n   * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentList#\n   *\n   * @returns {Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext}\n   */\n  /* jshint ignore:end */\n  FunctionVersionContentListInstance.get = function get() {\n    return new FunctionVersionContentContext(this._version, this._solution.serviceSid, this._solution.functionSid, this._solution.sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FunctionVersionContentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  FunctionVersionContentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return FunctionVersionContentListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FunctionVersionContentSolution} solution - Path solution\n *\n * @returns FunctionVersionContentPage\n */\n/* jshint ignore:end */\nFunctionVersionContentPage = function FunctionVersionContentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(FunctionVersionContentPage.prototype, Page.prototype);\nFunctionVersionContentPage.prototype.constructor = FunctionVersionContentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FunctionVersionContentInstance\n *\n * @function getInstance\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentPage#\n *\n * @param {FunctionVersionContentPayload} payload - Payload response from the API\n *\n * @returns FunctionVersionContentInstance\n */\n/* jshint ignore:end */\nFunctionVersionContentPage.prototype.getInstance = function getInstance(payload) {\n  return new FunctionVersionContentInstance(this._version, payload, this._solution.serviceSid, this._solution.functionSid, this._solution.sid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFunctionVersionContentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nFunctionVersionContentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Function Version resource\n * @property {string} accountSid -\n *          The SID of the Account that created the Function Version resource\n * @property {string} serviceSid -\n *          The SID of the Service that the Function Version resource is associated with\n * @property {string} functionSid -\n *          The SID of the Function that is the parent of the Function Version\n * @property {string} content - The content of the Function Version resource\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {FunctionVersionContentPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the Function Version resource is associated with\n * @param {sid} functionSid -\n *          The SID of the Function that is the parent of the Function Version\n * @param {sid} sid -\n *          The unique string that identifies the Function Version resource\n */\n/* jshint ignore:end */\nFunctionVersionContentInstance = function FunctionVersionContentInstance(version, payload, serviceSid, functionSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.functionSid = payload.function_sid; // jshint ignore:line\n  this.content = payload.content; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    functionSid: functionSid,\n    sid: sid\n  };\n};\nObject.defineProperty(FunctionVersionContentInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FunctionVersionContentContext(this._version, this._solution.serviceSid, this._solution.functionSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FunctionVersionContentInstance\n *\n * @function fetch\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FunctionVersionContentInstance\n */\n/* jshint ignore:end */\nFunctionVersionContentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFunctionVersionContentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nFunctionVersionContentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Service to fetch the Function Version content from\n * @param {sid} functionSid -\n *          The SID of the Function that is the parent of the Function Version content to fetch\n * @param {sid} sid - The SID that identifies the Function Version content to fetch\n */\n/* jshint ignore:end */\nFunctionVersionContentContext = function FunctionVersionContentContext(version, serviceSid, functionSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    functionSid: functionSid,\n    sid: sid\n  };\n  this._uri = `/Services/${serviceSid}/Functions/${functionSid}/Versions/${sid}/Content`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FunctionVersionContentInstance\n *\n * @function fetch\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FunctionVersionContentInstance\n */\n/* jshint ignore:end */\nFunctionVersionContentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FunctionVersionContentInstance(this._version, payload, this._solution.serviceSid, this._solution.functionSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFunctionVersionContentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nFunctionVersionContentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  FunctionVersionContentList: FunctionVersionContentList,\n  FunctionVersionContentPage: FunctionVersionContentPage,\n  FunctionVersionContentInstance: FunctionVersionContentInstance,\n  FunctionVersionContentContext: FunctionVersionContentContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","FunctionVersionContentList","FunctionVersionContentPage","FunctionVersionContentInstance","FunctionVersionContentContext","version","serviceSid","functionSid","sid","FunctionVersionContentListInstance","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","service_sid","function_sid","content","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/serverless/v1/service/function/functionVersion/functionVersionContent.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../../../base/values');  /* jshint ignore:line */\n\nvar FunctionVersionContentList;\nvar FunctionVersionContentPage;\nvar FunctionVersionContentInstance;\nvar FunctionVersionContentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentList\n *\n * @param {Twilio.Serverless.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the Function Version resource is associated with\n * @param {string} functionSid -\n *          The SID of the Function that is the parent of the Function Version\n * @param {string} sid -\n *          The unique string that identifies the Function Version resource\n */\n/* jshint ignore:end */\nFunctionVersionContentList = function FunctionVersionContentList(version,\n    serviceSid, functionSid, sid) {\n  /* jshint ignore:start */\n  /**\n   * @function functionVersionContent\n   * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext}\n   */\n  /* jshint ignore:end */\n  function FunctionVersionContentListInstance(sid) {\n    return FunctionVersionContentListInstance.get(sid);\n  }\n\n  FunctionVersionContentListInstance._version = version;\n  // Path Solution\n  FunctionVersionContentListInstance._solution = {\n    serviceSid: serviceSid,\n    functionSid: functionSid,\n    sid: sid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a function_version_content\n   *\n   * @function get\n   * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentList#\n   *\n   * @returns {Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext}\n   */\n  /* jshint ignore:end */\n  FunctionVersionContentListInstance.get = function get() {\n    return new FunctionVersionContentContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.functionSid,\n      this._solution.sid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FunctionVersionContentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FunctionVersionContentListInstance[util.inspect.custom] = function\n      inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FunctionVersionContentListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FunctionVersionContentSolution} solution - Path solution\n *\n * @returns FunctionVersionContentPage\n */\n/* jshint ignore:end */\nFunctionVersionContentPage = function FunctionVersionContentPage(version,\n    response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FunctionVersionContentPage.prototype, Page.prototype);\nFunctionVersionContentPage.prototype.constructor = FunctionVersionContentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FunctionVersionContentInstance\n *\n * @function getInstance\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentPage#\n *\n * @param {FunctionVersionContentPayload} payload - Payload response from the API\n *\n * @returns FunctionVersionContentInstance\n */\n/* jshint ignore:end */\nFunctionVersionContentPage.prototype.getInstance = function getInstance(payload)\n    {\n  return new FunctionVersionContentInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.functionSid,\n    this._solution.sid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFunctionVersionContentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFunctionVersionContentPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Function Version resource\n * @property {string} accountSid -\n *          The SID of the Account that created the Function Version resource\n * @property {string} serviceSid -\n *          The SID of the Service that the Function Version resource is associated with\n * @property {string} functionSid -\n *          The SID of the Function that is the parent of the Function Version\n * @property {string} content - The content of the Function Version resource\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {FunctionVersionContentPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the Function Version resource is associated with\n * @param {sid} functionSid -\n *          The SID of the Function that is the parent of the Function Version\n * @param {sid} sid -\n *          The unique string that identifies the Function Version resource\n */\n/* jshint ignore:end */\nFunctionVersionContentInstance = function\n    FunctionVersionContentInstance(version, payload, serviceSid, functionSid,\n    sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.functionSid = payload.function_sid; // jshint ignore:line\n  this.content = payload.content; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, functionSid: functionSid, sid: sid, };\n};\n\nObject.defineProperty(FunctionVersionContentInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new FunctionVersionContentContext(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.functionSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FunctionVersionContentInstance\n *\n * @function fetch\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FunctionVersionContentInstance\n */\n/* jshint ignore:end */\nFunctionVersionContentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFunctionVersionContentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFunctionVersionContentInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FunctionVersionContentContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Service to fetch the Function Version content from\n * @param {sid} functionSid -\n *          The SID of the Function that is the parent of the Function Version content to fetch\n * @param {sid} sid - The SID that identifies the Function Version content to fetch\n */\n/* jshint ignore:end */\nFunctionVersionContentContext = function FunctionVersionContentContext(version,\n    serviceSid, functionSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, functionSid: functionSid, sid: sid, };\n  this._uri = `/Services/${serviceSid}/Functions/${functionSid}/Versions/${sid}/Content`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FunctionVersionContentInstance\n *\n * @function fetch\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FunctionVersionContentInstance\n */\n/* jshint ignore:end */\nFunctionVersionContentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FunctionVersionContentInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.functionSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Serverless.V1.ServiceContext.FunctionContext.FunctionVersionContext.FunctionVersionContentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFunctionVersionContentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFunctionVersionContentContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FunctionVersionContentList: FunctionVersionContentList,\n  FunctionVersionContentPage: FunctionVersionContentPage,\n  FunctionVersionContentInstance: FunctionVersionContentInstance,\n  FunctionVersionContentContext: FunctionVersionContentContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}