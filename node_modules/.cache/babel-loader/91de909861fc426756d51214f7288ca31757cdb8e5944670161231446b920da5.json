{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenInstance = exports.TokenListInstance = exports.ApiV2010AccountTokenIceServers = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass ApiV2010AccountTokenIceServers {}\nexports.ApiV2010AccountTokenIceServers = ApiV2010AccountTokenIceServers;\nfunction TokenListInstance(version, accountSid) {\n  if (!(0, utility_1.isValidPathParam)(accountSid)) {\n    throw new Error(\"Parameter 'accountSid' is not valid.\");\n  }\n  const instance = {};\n  instance._version = version;\n  instance._solution = {\n    accountSid\n  };\n  instance._uri = `/Accounts/${accountSid}/Tokens.json`;\n  instance.create = function create(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"ttl\"] !== undefined) data[\"Ttl\"] = params[\"ttl\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TokenInstance(operationVersion, payload, instance._solution.accountSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.TokenListInstance = TokenListInstance;\nclass TokenInstance {\n  constructor(_version, payload, accountSid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n    this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated);\n    this.iceServers = payload.ice_servers;\n    this.password = payload.password;\n    this.ttl = payload.ttl;\n    this.username = payload.username;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      iceServers: this.iceServers,\n      password: this.password,\n      ttl: this.ttl,\n      username: this.username\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TokenInstance = TokenInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","TokenInstance","TokenListInstance","ApiV2010AccountTokenIceServers","util_1","require","deserialize","serialize","utility_1","version","accountSid","isValidPathParam","Error","instance","_version","_solution","_uri","create","params","callback","Function","data","undefined","headers","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","inspectImpl","_depth","options","constructor","account_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","iceServers","ice_servers","password","ttl","username"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/api/v2010/account/token.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstance = exports.TokenListInstance = exports.ApiV2010AccountTokenIceServers = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass ApiV2010AccountTokenIceServers {\n}\nexports.ApiV2010AccountTokenIceServers = ApiV2010AccountTokenIceServers;\nfunction TokenListInstance(version, accountSid) {\n    if (!(0, utility_1.isValidPathParam)(accountSid)) {\n        throw new Error(\"Parameter 'accountSid' is not valid.\");\n    }\n    const instance = {};\n    instance._version = version;\n    instance._solution = { accountSid };\n    instance._uri = `/Accounts/${accountSid}/Tokens.json`;\n    instance.create = function create(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"ttl\"] !== undefined)\n            data[\"Ttl\"] = params[\"ttl\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TokenInstance(operationVersion, payload, instance._solution.accountSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.TokenListInstance = TokenListInstance;\nclass TokenInstance {\n    constructor(_version, payload, accountSid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n        this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated);\n        this.iceServers = payload.ice_servers;\n        this.password = payload.password;\n        this.ttl = payload.ttl;\n        this.username = payload.username;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            iceServers: this.iceServers,\n            password: this.password,\n            ttl: this.ttl,\n            username: this.username,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TokenInstance = TokenInstance;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,iBAAiB,GAAGH,OAAO,CAACI,8BAA8B,GAAG,KAAK,CAAC;AACnG,MAAMC,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMC,WAAW,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAC3D,MAAME,SAAS,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AACvD,MAAMG,SAAS,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACrD,MAAMF,8BAA8B,CAAC;AAErCJ,OAAO,CAACI,8BAA8B,GAAGA,8BAA8B;AACvE,SAASD,iBAAiBA,CAACO,OAAO,EAAEC,UAAU,EAAE;EAC5C,IAAI,CAAC,CAAC,CAAC,EAAEF,SAAS,CAACG,gBAAgB,EAAED,UAAU,CAAC,EAAE;IAC9C,MAAM,IAAIE,KAAK,CAAC,sCAAsC,CAAC;EAC3D;EACA,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBA,QAAQ,CAACC,QAAQ,GAAGL,OAAO;EAC3BI,QAAQ,CAACE,SAAS,GAAG;IAAEL;EAAW,CAAC;EACnCG,QAAQ,CAACG,IAAI,GAAI,aAAYN,UAAW,cAAa;EACrDG,QAAQ,CAACI,MAAM,GAAG,SAASA,MAAMA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IAChD,IAAID,MAAM,YAAYE,QAAQ,EAAE;MAC5BD,QAAQ,GAAGD,MAAM;MACjBA,MAAM,GAAG,CAAC,CAAC;IACf,CAAC,MACI;MACDA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;IACzB;IACA,IAAIG,IAAI,GAAG,CAAC,CAAC;IACb,IAAIH,MAAM,CAAC,KAAK,CAAC,KAAKI,SAAS,EAC3BD,IAAI,CAAC,KAAK,CAAC,GAAGH,MAAM,CAAC,KAAK,CAAC;IAC/B,MAAMK,OAAO,GAAG,CAAC,CAAC;IAClBA,OAAO,CAAC,cAAc,CAAC,GAAG,mCAAmC;IAC7D,IAAIC,gBAAgB,GAAGf,OAAO;MAAEgB,gBAAgB,GAAGD,gBAAgB,CAACP,MAAM,CAAC;QACvES,GAAG,EAAEb,QAAQ,CAACG,IAAI;QAClBW,MAAM,EAAE,MAAM;QACdN,IAAI;QACJE;MACJ,CAAC,CAAC;IACFE,gBAAgB,GAAGA,gBAAgB,CAACG,IAAI,CAAEC,OAAO,IAAK,IAAI5B,aAAa,CAACuB,gBAAgB,EAAEK,OAAO,EAAEhB,QAAQ,CAACE,SAAS,CAACL,UAAU,CAAC,CAAC;IAClIe,gBAAgB,GAAGZ,QAAQ,CAACC,QAAQ,CAACgB,kBAAkB,CAACL,gBAAgB,EAAEN,QAAQ,CAAC;IACnF,OAAOM,gBAAgB;EAC3B,CAAC;EACDZ,QAAQ,CAACkB,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAChC,OAAOlB,QAAQ,CAACE,SAAS;EAC7B,CAAC;EACDF,QAAQ,CAACT,MAAM,CAAC4B,OAAO,CAACC,MAAM,CAAC,GAAG,SAASC,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAE;IACpE,OAAO,CAAC,CAAC,EAAEhC,MAAM,CAAC4B,OAAO,EAAEnB,QAAQ,CAACkB,MAAM,CAAC,CAAC,EAAEK,OAAO,CAAC;EAC1D,CAAC;EACD,OAAOvB,QAAQ;AACnB;AACAd,OAAO,CAACG,iBAAiB,GAAGA,iBAAiB;AAC7C,MAAMD,aAAa,CAAC;EAChBoC,WAAWA,CAACvB,QAAQ,EAAEe,OAAO,EAAEnB,UAAU,EAAE;IACvC,IAAI,CAACI,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACJ,UAAU,GAAGmB,OAAO,CAACS,WAAW;IACrC,IAAI,CAACC,WAAW,GAAGjC,WAAW,CAACkC,eAAe,CAACX,OAAO,CAACY,YAAY,CAAC;IACpE,IAAI,CAACC,WAAW,GAAGpC,WAAW,CAACkC,eAAe,CAACX,OAAO,CAACc,YAAY,CAAC;IACpE,IAAI,CAACC,UAAU,GAAGf,OAAO,CAACgB,WAAW;IACrC,IAAI,CAACC,QAAQ,GAAGjB,OAAO,CAACiB,QAAQ;IAChC,IAAI,CAACC,GAAG,GAAGlB,OAAO,CAACkB,GAAG;IACtB,IAAI,CAACC,QAAQ,GAAGnB,OAAO,CAACmB,QAAQ;EACpC;EACA;AACJ;AACA;AACA;AACA;EACIjB,MAAMA,CAAA,EAAG;IACL,OAAO;MACHrB,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3B6B,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BG,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BE,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BE,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,QAAQ,EAAE,IAAI,CAACA;IACnB,CAAC;EACL;EACA,CAAC5C,MAAM,CAAC4B,OAAO,CAACC,MAAM,EAAEE,MAAM,EAAEC,OAAO,EAAE;IACrC,OAAO,CAAC,CAAC,EAAEhC,MAAM,CAAC4B,OAAO,EAAE,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEK,OAAO,CAAC;EACtD;AACJ;AACArC,OAAO,CAACE,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}