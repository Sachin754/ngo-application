{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Sync\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamMessageInstance = exports.StreamMessageListInstance = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nfunction StreamMessageListInstance(version, serviceSid, streamSid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(streamSid)) {\n    throw new Error(\"Parameter 'streamSid' is not valid.\");\n  }\n  const instance = {};\n  instance._version = version;\n  instance._solution = {\n    serviceSid,\n    streamSid\n  };\n  instance._uri = `/Services/${serviceSid}/Streams/${streamSid}/Messages`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"data\"] === null || params[\"data\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['data']\\\" missing.\");\n    }\n    let data = {};\n    data[\"Data\"] = serialize.object(params[\"data\"]);\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new StreamMessageInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.streamSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.StreamMessageListInstance = StreamMessageListInstance;\nclass StreamMessageInstance {\n  constructor(_version, payload, serviceSid, streamSid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.data = payload.data;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      data: this.data\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.StreamMessageInstance = StreamMessageInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","StreamMessageInstance","StreamMessageListInstance","util_1","require","deserialize","serialize","utility_1","version","serviceSid","streamSid","isValidPathParam","Error","instance","_version","_solution","_uri","create","params","callback","undefined","data","object","headers","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","inspectImpl","_depth","options","constructor","sid"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/sync/v1/service/syncStream/streamMessage.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Sync\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamMessageInstance = exports.StreamMessageListInstance = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nfunction StreamMessageListInstance(version, serviceSid, streamSid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(streamSid)) {\n        throw new Error(\"Parameter 'streamSid' is not valid.\");\n    }\n    const instance = {};\n    instance._version = version;\n    instance._solution = { serviceSid, streamSid };\n    instance._uri = `/Services/${serviceSid}/Streams/${streamSid}/Messages`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"data\"] === null || params[\"data\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['data']\\\" missing.\");\n        }\n        let data = {};\n        data[\"Data\"] = serialize.object(params[\"data\"]);\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new StreamMessageInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.streamSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.StreamMessageListInstance = StreamMessageListInstance;\nclass StreamMessageInstance {\n    constructor(_version, payload, serviceSid, streamSid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.data = payload.data;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            data: this.data,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.StreamMessageInstance = StreamMessageInstance;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAGF,OAAO,CAACG,yBAAyB,GAAG,KAAK,CAAC;AAC1E,MAAMC,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMC,WAAW,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AAC9D,MAAME,SAAS,GAAGF,OAAO,CAAC,+BAA+B,CAAC;AAC1D,MAAMG,SAAS,GAAGH,OAAO,CAAC,6BAA6B,CAAC;AACxD,SAASF,yBAAyBA,CAACM,OAAO,EAAEC,UAAU,EAAEC,SAAS,EAAE;EAC/D,IAAI,CAAC,CAAC,CAAC,EAAEH,SAAS,CAACI,gBAAgB,EAAEF,UAAU,CAAC,EAAE;IAC9C,MAAM,IAAIG,KAAK,CAAC,sCAAsC,CAAC;EAC3D;EACA,IAAI,CAAC,CAAC,CAAC,EAAEL,SAAS,CAACI,gBAAgB,EAAED,SAAS,CAAC,EAAE;IAC7C,MAAM,IAAIE,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBA,QAAQ,CAACC,QAAQ,GAAGN,OAAO;EAC3BK,QAAQ,CAACE,SAAS,GAAG;IAAEN,UAAU;IAAEC;EAAU,CAAC;EAC9CG,QAAQ,CAACG,IAAI,GAAI,aAAYP,UAAW,YAAWC,SAAU,WAAU;EACvEG,QAAQ,CAACI,MAAM,GAAG,SAASA,MAAMA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IAChD,IAAID,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKE,SAAS,EAAE;MACzC,MAAM,IAAIR,KAAK,CAAC,sCAAsC,CAAC;IAC3D;IACA,IAAIM,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,IAAIA,MAAM,CAAC,MAAM,CAAC,KAAKE,SAAS,EAAE;MACzD,MAAM,IAAIR,KAAK,CAAC,gDAAgD,CAAC;IACrE;IACA,IAAIS,IAAI,GAAG,CAAC,CAAC;IACbA,IAAI,CAAC,MAAM,CAAC,GAAGf,SAAS,CAACgB,MAAM,CAACJ,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/C,MAAMK,OAAO,GAAG,CAAC,CAAC;IAClBA,OAAO,CAAC,cAAc,CAAC,GAAG,mCAAmC;IAC7D,IAAIC,gBAAgB,GAAGhB,OAAO;MAAEiB,gBAAgB,GAAGD,gBAAgB,CAACP,MAAM,CAAC;QACvES,GAAG,EAAEb,QAAQ,CAACG,IAAI;QAClBW,MAAM,EAAE,MAAM;QACdN,IAAI;QACJE;MACJ,CAAC,CAAC;IACFE,gBAAgB,GAAGA,gBAAgB,CAACG,IAAI,CAAEC,OAAO,IAAK,IAAI5B,qBAAqB,CAACuB,gBAAgB,EAAEK,OAAO,EAAEhB,QAAQ,CAACE,SAAS,CAACN,UAAU,EAAEI,QAAQ,CAACE,SAAS,CAACL,SAAS,CAAC,CAAC;IACxKe,gBAAgB,GAAGZ,QAAQ,CAACC,QAAQ,CAACgB,kBAAkB,CAACL,gBAAgB,EAAEN,QAAQ,CAAC;IACnF,OAAOM,gBAAgB;EAC3B,CAAC;EACDZ,QAAQ,CAACkB,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAChC,OAAOlB,QAAQ,CAACE,SAAS;EAC7B,CAAC;EACDF,QAAQ,CAACV,MAAM,CAAC6B,OAAO,CAACC,MAAM,CAAC,GAAG,SAASC,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAE;IACpE,OAAO,CAAC,CAAC,EAAEjC,MAAM,CAAC6B,OAAO,EAAEnB,QAAQ,CAACkB,MAAM,CAAC,CAAC,EAAEK,OAAO,CAAC;EAC1D,CAAC;EACD,OAAOvB,QAAQ;AACnB;AACAd,OAAO,CAACG,yBAAyB,GAAGA,yBAAyB;AAC7D,MAAMD,qBAAqB,CAAC;EACxBoC,WAAWA,CAACvB,QAAQ,EAAEe,OAAO,EAAEpB,UAAU,EAAEC,SAAS,EAAE;IAClD,IAAI,CAACI,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACwB,GAAG,GAAGT,OAAO,CAACS,GAAG;IACtB,IAAI,CAACjB,IAAI,GAAGQ,OAAO,CAACR,IAAI;EAC5B;EACA;AACJ;AACA;AACA;AACA;EACIU,MAAMA,CAAA,EAAG;IACL,OAAO;MACHO,GAAG,EAAE,IAAI,CAACA,GAAG;MACbjB,IAAI,EAAE,IAAI,CAACA;IACf,CAAC;EACL;EACA,CAAClB,MAAM,CAAC6B,OAAO,CAACC,MAAM,EAAEE,MAAM,EAAEC,OAAO,EAAE;IACrC,OAAO,CAAC,CAAC,EAAEjC,MAAM,CAAC6B,OAAO,EAAE,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEK,OAAO,CAAC;EACtD;AACJ;AACArC,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}