{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssistantPage = exports.AssistantListInstance = exports.AssistantInstance = exports.AssistantContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst assistantFallbackActions_1 = require(\"./assistant/assistantFallbackActions\");\nconst assistantInitiationActions_1 = require(\"./assistant/assistantInitiationActions\");\nconst dialogue_1 = require(\"./assistant/dialogue\");\nconst fieldType_1 = require(\"./assistant/fieldType\");\nconst modelBuild_1 = require(\"./assistant/modelBuild\");\nconst query_1 = require(\"./assistant/query\");\nconst styleSheet_1 = require(\"./assistant/styleSheet\");\nconst task_1 = require(\"./assistant/task\");\nclass AssistantContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/Assistants/${sid}`;\n  }\n  get assistantFallbackActions() {\n    this._assistantFallbackActions = this._assistantFallbackActions || (0, assistantFallbackActions_1.AssistantFallbackActionsListInstance)(this._version, this._solution.sid);\n    return this._assistantFallbackActions;\n  }\n  get assistantInitiationActions() {\n    this._assistantInitiationActions = this._assistantInitiationActions || (0, assistantInitiationActions_1.AssistantInitiationActionsListInstance)(this._version, this._solution.sid);\n    return this._assistantInitiationActions;\n  }\n  get dialogues() {\n    this._dialogues = this._dialogues || (0, dialogue_1.DialogueListInstance)(this._version, this._solution.sid);\n    return this._dialogues;\n  }\n  get fieldTypes() {\n    this._fieldTypes = this._fieldTypes || (0, fieldType_1.FieldTypeListInstance)(this._version, this._solution.sid);\n    return this._fieldTypes;\n  }\n  get modelBuilds() {\n    this._modelBuilds = this._modelBuilds || (0, modelBuild_1.ModelBuildListInstance)(this._version, this._solution.sid);\n    return this._modelBuilds;\n  }\n  get queries() {\n    this._queries = this._queries || (0, query_1.QueryListInstance)(this._version, this._solution.sid);\n    return this._queries;\n  }\n  get styleSheet() {\n    this._styleSheet = this._styleSheet || (0, styleSheet_1.StyleSheetListInstance)(this._version, this._solution.sid);\n    return this._styleSheet;\n  }\n  get tasks() {\n    this._tasks = this._tasks || (0, task_1.TaskListInstance)(this._version, this._solution.sid);\n    return this._tasks;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new AssistantInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"logQueries\"] !== undefined) data[\"LogQueries\"] = serialize.bool(params[\"logQueries\"]);\n    if (params[\"uniqueName\"] !== undefined) data[\"UniqueName\"] = params[\"uniqueName\"];\n    if (params[\"callbackUrl\"] !== undefined) data[\"CallbackUrl\"] = params[\"callbackUrl\"];\n    if (params[\"callbackEvents\"] !== undefined) data[\"CallbackEvents\"] = params[\"callbackEvents\"];\n    if (params[\"fallbackActions\"] !== undefined) data[\"FallbackActions\"] = serialize.object(params[\"fallbackActions\"]);\n    if (params[\"initiationActions\"] !== undefined) data[\"InitiationActions\"] = serialize.object(params[\"initiationActions\"]);\n    if (params[\"styleSheet\"] !== undefined) data[\"StyleSheet\"] = serialize.object(params[\"styleSheet\"]);\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new AssistantInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AssistantContextImpl = AssistantContextImpl;\nclass AssistantInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.friendlyName = payload.friendly_name;\n    this.latestModelBuildSid = payload.latest_model_build_sid;\n    this.links = payload.links;\n    this.logQueries = payload.log_queries;\n    this.sid = payload.sid;\n    this.uniqueName = payload.unique_name;\n    this.url = payload.url;\n    this.callbackUrl = payload.callback_url;\n    this.callbackEvents = payload.callback_events;\n    this._solution = {\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new AssistantContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a AssistantInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a AssistantInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed AssistantInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Access the assistantFallbackActions.\n   */\n  assistantFallbackActions() {\n    return this._proxy.assistantFallbackActions;\n  }\n  /**\n   * Access the assistantInitiationActions.\n   */\n  assistantInitiationActions() {\n    return this._proxy.assistantInitiationActions;\n  }\n  /**\n   * Access the dialogues.\n   */\n  dialogues() {\n    return this._proxy.dialogues;\n  }\n  /**\n   * Access the fieldTypes.\n   */\n  fieldTypes() {\n    return this._proxy.fieldTypes;\n  }\n  /**\n   * Access the modelBuilds.\n   */\n  modelBuilds() {\n    return this._proxy.modelBuilds;\n  }\n  /**\n   * Access the queries.\n   */\n  queries() {\n    return this._proxy.queries;\n  }\n  /**\n   * Access the styleSheet.\n   */\n  styleSheet() {\n    return this._proxy.styleSheet;\n  }\n  /**\n   * Access the tasks.\n   */\n  tasks() {\n    return this._proxy.tasks;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      friendlyName: this.friendlyName,\n      latestModelBuildSid: this.latestModelBuildSid,\n      links: this.links,\n      logQueries: this.logQueries,\n      sid: this.sid,\n      uniqueName: this.uniqueName,\n      url: this.url,\n      callbackUrl: this.callbackUrl,\n      callbackEvents: this.callbackEvents\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AssistantInstance = AssistantInstance;\nfunction AssistantListInstance(version) {\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new AssistantContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/Assistants`;\n  instance.create = function create(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"logQueries\"] !== undefined) data[\"LogQueries\"] = serialize.bool(params[\"logQueries\"]);\n    if (params[\"uniqueName\"] !== undefined) data[\"UniqueName\"] = params[\"uniqueName\"];\n    if (params[\"callbackUrl\"] !== undefined) data[\"CallbackUrl\"] = params[\"callbackUrl\"];\n    if (params[\"callbackEvents\"] !== undefined) data[\"CallbackEvents\"] = params[\"callbackEvents\"];\n    if (params[\"fallbackActions\"] !== undefined) data[\"FallbackActions\"] = serialize.object(params[\"fallbackActions\"]);\n    if (params[\"initiationActions\"] !== undefined) data[\"InitiationActions\"] = serialize.object(params[\"initiationActions\"]);\n    if (params[\"styleSheet\"] !== undefined) data[\"StyleSheet\"] = serialize.object(params[\"styleSheet\"]);\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new AssistantInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new AssistantPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new AssistantPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.AssistantListInstance = AssistantListInstance;\nclass AssistantPage extends Page_1.default {\n  /**\n   * Initialize the AssistantPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of AssistantInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new AssistantInstance(this._version, payload);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AssistantPage = AssistantPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","AssistantPage","AssistantListInstance","AssistantInstance","AssistantContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","assistantFallbackActions_1","assistantInitiationActions_1","dialogue_1","fieldType_1","modelBuild_1","query_1","styleSheet_1","task_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","assistantFallbackActions","_assistantFallbackActions","AssistantFallbackActionsListInstance","assistantInitiationActions","_assistantInitiationActions","AssistantInitiationActionsListInstance","dialogues","_dialogues","DialogueListInstance","fieldTypes","_fieldTypes","FieldTypeListInstance","modelBuilds","_modelBuilds","ModelBuildListInstance","queries","_queries","QueryListInstance","styleSheet","_styleSheet","StyleSheetListInstance","tasks","_tasks","TaskListInstance","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","bool","object","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","latestModelBuildSid","latest_model_build_sid","links","logQueries","log_queries","uniqueName","unique_name","url","callbackUrl","callback_url","callbackEvents","callback_events","_proxy","_context","version","get","create","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/preview/understand/assistant.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssistantPage = exports.AssistantListInstance = exports.AssistantInstance = exports.AssistantContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst assistantFallbackActions_1 = require(\"./assistant/assistantFallbackActions\");\nconst assistantInitiationActions_1 = require(\"./assistant/assistantInitiationActions\");\nconst dialogue_1 = require(\"./assistant/dialogue\");\nconst fieldType_1 = require(\"./assistant/fieldType\");\nconst modelBuild_1 = require(\"./assistant/modelBuild\");\nconst query_1 = require(\"./assistant/query\");\nconst styleSheet_1 = require(\"./assistant/styleSheet\");\nconst task_1 = require(\"./assistant/task\");\nclass AssistantContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/Assistants/${sid}`;\n    }\n    get assistantFallbackActions() {\n        this._assistantFallbackActions =\n            this._assistantFallbackActions ||\n                (0, assistantFallbackActions_1.AssistantFallbackActionsListInstance)(this._version, this._solution.sid);\n        return this._assistantFallbackActions;\n    }\n    get assistantInitiationActions() {\n        this._assistantInitiationActions =\n            this._assistantInitiationActions ||\n                (0, assistantInitiationActions_1.AssistantInitiationActionsListInstance)(this._version, this._solution.sid);\n        return this._assistantInitiationActions;\n    }\n    get dialogues() {\n        this._dialogues =\n            this._dialogues ||\n                (0, dialogue_1.DialogueListInstance)(this._version, this._solution.sid);\n        return this._dialogues;\n    }\n    get fieldTypes() {\n        this._fieldTypes =\n            this._fieldTypes ||\n                (0, fieldType_1.FieldTypeListInstance)(this._version, this._solution.sid);\n        return this._fieldTypes;\n    }\n    get modelBuilds() {\n        this._modelBuilds =\n            this._modelBuilds ||\n                (0, modelBuild_1.ModelBuildListInstance)(this._version, this._solution.sid);\n        return this._modelBuilds;\n    }\n    get queries() {\n        this._queries =\n            this._queries || (0, query_1.QueryListInstance)(this._version, this._solution.sid);\n        return this._queries;\n    }\n    get styleSheet() {\n        this._styleSheet =\n            this._styleSheet ||\n                (0, styleSheet_1.StyleSheetListInstance)(this._version, this._solution.sid);\n        return this._styleSheet;\n    }\n    get tasks() {\n        this._tasks =\n            this._tasks || (0, task_1.TaskListInstance)(this._version, this._solution.sid);\n        return this._tasks;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new AssistantInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"logQueries\"] !== undefined)\n            data[\"LogQueries\"] = serialize.bool(params[\"logQueries\"]);\n        if (params[\"uniqueName\"] !== undefined)\n            data[\"UniqueName\"] = params[\"uniqueName\"];\n        if (params[\"callbackUrl\"] !== undefined)\n            data[\"CallbackUrl\"] = params[\"callbackUrl\"];\n        if (params[\"callbackEvents\"] !== undefined)\n            data[\"CallbackEvents\"] = params[\"callbackEvents\"];\n        if (params[\"fallbackActions\"] !== undefined)\n            data[\"FallbackActions\"] = serialize.object(params[\"fallbackActions\"]);\n        if (params[\"initiationActions\"] !== undefined)\n            data[\"InitiationActions\"] = serialize.object(params[\"initiationActions\"]);\n        if (params[\"styleSheet\"] !== undefined)\n            data[\"StyleSheet\"] = serialize.object(params[\"styleSheet\"]);\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new AssistantInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AssistantContextImpl = AssistantContextImpl;\nclass AssistantInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.friendlyName = payload.friendly_name;\n        this.latestModelBuildSid = payload.latest_model_build_sid;\n        this.links = payload.links;\n        this.logQueries = payload.log_queries;\n        this.sid = payload.sid;\n        this.uniqueName = payload.unique_name;\n        this.url = payload.url;\n        this.callbackUrl = payload.callback_url;\n        this.callbackEvents = payload.callback_events;\n        this._solution = { sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new AssistantContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a AssistantInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a AssistantInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed AssistantInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Access the assistantFallbackActions.\n     */\n    assistantFallbackActions() {\n        return this._proxy.assistantFallbackActions;\n    }\n    /**\n     * Access the assistantInitiationActions.\n     */\n    assistantInitiationActions() {\n        return this._proxy.assistantInitiationActions;\n    }\n    /**\n     * Access the dialogues.\n     */\n    dialogues() {\n        return this._proxy.dialogues;\n    }\n    /**\n     * Access the fieldTypes.\n     */\n    fieldTypes() {\n        return this._proxy.fieldTypes;\n    }\n    /**\n     * Access the modelBuilds.\n     */\n    modelBuilds() {\n        return this._proxy.modelBuilds;\n    }\n    /**\n     * Access the queries.\n     */\n    queries() {\n        return this._proxy.queries;\n    }\n    /**\n     * Access the styleSheet.\n     */\n    styleSheet() {\n        return this._proxy.styleSheet;\n    }\n    /**\n     * Access the tasks.\n     */\n    tasks() {\n        return this._proxy.tasks;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            friendlyName: this.friendlyName,\n            latestModelBuildSid: this.latestModelBuildSid,\n            links: this.links,\n            logQueries: this.logQueries,\n            sid: this.sid,\n            uniqueName: this.uniqueName,\n            url: this.url,\n            callbackUrl: this.callbackUrl,\n            callbackEvents: this.callbackEvents,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AssistantInstance = AssistantInstance;\nfunction AssistantListInstance(version) {\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new AssistantContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/Assistants`;\n    instance.create = function create(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"logQueries\"] !== undefined)\n            data[\"LogQueries\"] = serialize.bool(params[\"logQueries\"]);\n        if (params[\"uniqueName\"] !== undefined)\n            data[\"UniqueName\"] = params[\"uniqueName\"];\n        if (params[\"callbackUrl\"] !== undefined)\n            data[\"CallbackUrl\"] = params[\"callbackUrl\"];\n        if (params[\"callbackEvents\"] !== undefined)\n            data[\"CallbackEvents\"] = params[\"callbackEvents\"];\n        if (params[\"fallbackActions\"] !== undefined)\n            data[\"FallbackActions\"] = serialize.object(params[\"fallbackActions\"]);\n        if (params[\"initiationActions\"] !== undefined)\n            data[\"InitiationActions\"] = serialize.object(params[\"initiationActions\"]);\n        if (params[\"styleSheet\"] !== undefined)\n            data[\"StyleSheet\"] = serialize.object(params[\"styleSheet\"]);\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new AssistantInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new AssistantPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new AssistantPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.AssistantListInstance = AssistantListInstance;\nclass AssistantPage extends Page_1.default {\n    /**\n     * Initialize the AssistantPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of AssistantInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new AssistantInstance(this._version, payload);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AssistantPage = AssistantPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}