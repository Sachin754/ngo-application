{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar FeedbackSummaryList;\nvar FeedbackSummaryPage;\nvar FeedbackSummaryInstance;\nvar FeedbackSummaryContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created this resource\n */\n/* jshint ignore:end */\nFeedbackSummaryList = function FeedbackSummaryList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function feedbackSummaries\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n  /* jshint ignore:end */\n  function FeedbackSummaryListInstance(sid) {\n    return FeedbackSummaryListInstance.get(sid);\n  }\n  FeedbackSummaryListInstance._version = version;\n  // Path Solution\n  FeedbackSummaryListInstance._solution = {\n    accountSid: accountSid\n  };\n  FeedbackSummaryListInstance._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary.json`;\n  /* jshint ignore:start */\n  /**\n   * create a FeedbackSummaryInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {object} opts - Options for request\n   * @param {Date} opts.startDate - Only include feedback given on or after this date\n   * @param {Date} opts.endDate - Only include feedback given on or before this date\n   * @param {boolean} [opts.includeSubaccounts] -\n   *          `true` includes feedback from the specified account and its subaccounts\n   * @param {string} [opts.statusCallback] -\n   *          The URL that we will request when the feedback summary is complete\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we use to make requests to the StatusCallback URL\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.startDate)) {\n      throw new Error('Required parameter \"opts.startDate\" missing.');\n    }\n    if (_.isUndefined(opts.endDate)) {\n      throw new Error('Required parameter \"opts.endDate\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'StartDate': serialize.iso8601Date(_.get(opts, 'startDate')),\n      'EndDate': serialize.iso8601Date(_.get(opts, 'endDate')),\n      'IncludeSubaccounts': serialize.bool(_.get(opts, 'includeSubaccounts')),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a feedback_summary\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {string} sid -\n   *          A string that uniquely identifies this feedback summary resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.get = function get(sid) {\n    return new FeedbackSummaryContext(this._version, this._solution.accountSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  FeedbackSummaryListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return FeedbackSummaryListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSummarySolution} solution - Path solution\n *\n * @returns FeedbackSummaryPage\n */\n/* jshint ignore:end */\nFeedbackSummaryPage = function FeedbackSummaryPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(FeedbackSummaryPage.prototype, Page.prototype);\nFeedbackSummaryPage.prototype.constructor = FeedbackSummaryPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FeedbackSummaryInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @param {FeedbackSummaryPayload} payload - Payload response from the API\n *\n * @returns FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nFeedbackSummaryPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {number} callCount - The total number of calls\n * @property {number} callFeedbackCount -\n *          The total number of calls with a feedback entry\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {Date} endDate - The latest feedback entry date in the summary\n * @property {boolean} includeSubaccounts -\n *          Whether the feedback summary includes subaccounts\n * @property {object} issues - Issues experienced during the call\n * @property {number} qualityScoreAverage -\n *          The average QualityScore of the feedback entries\n * @property {number} qualityScoreMedian -\n *          The median QualityScore of the feedback entries\n * @property {number} qualityScoreStandardDeviation -\n *          The standard deviation of the quality scores\n * @property {string} sid - A string that uniquely identifies this feedback entry\n * @property {Date} startDate - The earliest feedback entry date in the summary\n * @property {feedback_summary.status} status - The status of the feedback summary\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackSummaryPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created this resource\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance = function FeedbackSummaryInstance(version, payload, accountSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.callCount = deserialize.integer(payload.call_count); // jshint ignore:line\n  this.callFeedbackCount = deserialize.integer(payload.call_feedback_count); // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.endDate = deserialize.iso8601Date(payload.end_date); // jshint ignore:line\n  this.includeSubaccounts = payload.include_subaccounts; // jshint ignore:line\n  this.issues = payload.issues; // jshint ignore:line\n  this.qualityScoreAverage = deserialize.decimal(payload.quality_score_average); // jshint ignore:line\n  this.qualityScoreMedian = deserialize.decimal(payload.quality_score_median); // jshint ignore:line\n  this.qualityScoreStandardDeviation = deserialize.decimal(payload.quality_score_standard_deviation); // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.startDate = deserialize.iso8601Date(payload.start_date); // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(FeedbackSummaryInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FeedbackSummaryContext(this._version, this._solution.accountSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nFeedbackSummaryInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n/* jshint ignore:end */\nFeedbackSummaryContext = function FeedbackSummaryContext(version, accountSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid\n  };\n  this._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary/${sid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nFeedbackSummaryContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  FeedbackSummaryList: FeedbackSummaryList,\n  FeedbackSummaryPage: FeedbackSummaryPage,\n  FeedbackSummaryInstance: FeedbackSummaryInstance,\n  FeedbackSummaryContext: FeedbackSummaryContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","FeedbackSummaryList","FeedbackSummaryPage","FeedbackSummaryInstance","FeedbackSummaryContext","version","accountSid","FeedbackSummaryListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","startDate","endDate","deferred","defer","data","of","iso8601Date","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","callCount","integer","call_count","callFeedbackCount","call_feedback_count","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","end_date","includeSubaccounts","include_subaccounts","issues","qualityScoreAverage","decimal","quality_score_average","qualityScoreMedian","quality_score_median","qualityScoreStandardDeviation","quality_score_standard_deviation","start_date","status","_context","undefined","Object","defineProperty","fetch","_proxy","remove","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/api/v2010/account/call/feedbackSummary.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar FeedbackSummaryList;\nvar FeedbackSummaryPage;\nvar FeedbackSummaryInstance;\nvar FeedbackSummaryContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created this resource\n */\n/* jshint ignore:end */\nFeedbackSummaryList = function FeedbackSummaryList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function feedbackSummaries\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n  /* jshint ignore:end */\n  function FeedbackSummaryListInstance(sid) {\n    return FeedbackSummaryListInstance.get(sid);\n  }\n\n  FeedbackSummaryListInstance._version = version;\n  // Path Solution\n  FeedbackSummaryListInstance._solution = {accountSid: accountSid};\n  FeedbackSummaryListInstance._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary.json`;\n  /* jshint ignore:start */\n  /**\n   * create a FeedbackSummaryInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {object} opts - Options for request\n   * @param {Date} opts.startDate - Only include feedback given on or after this date\n   * @param {Date} opts.endDate - Only include feedback given on or before this date\n   * @param {boolean} [opts.includeSubaccounts] -\n   *          `true` includes feedback from the specified account and its subaccounts\n   * @param {string} [opts.statusCallback] -\n   *          The URL that we will request when the feedback summary is complete\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we use to make requests to the StatusCallback URL\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.startDate)) {\n      throw new Error('Required parameter \"opts.startDate\" missing.');\n    }\n    if (_.isUndefined(opts.endDate)) {\n      throw new Error('Required parameter \"opts.endDate\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'StartDate': serialize.iso8601Date(_.get(opts, 'startDate')),\n      'EndDate': serialize.iso8601Date(_.get(opts, 'endDate')),\n      'IncludeSubaccounts': serialize.bool(_.get(opts, 'includeSubaccounts')),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new FeedbackSummaryInstance(\n        this._version,\n        payload,\n        this._solution.accountSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a feedback_summary\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {string} sid -\n   *          A string that uniquely identifies this feedback summary resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.get = function get(sid) {\n    return new FeedbackSummaryContext(this._version, this._solution.accountSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackSummaryListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackSummaryListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSummarySolution} solution - Path solution\n *\n * @returns FeedbackSummaryPage\n */\n/* jshint ignore:end */\nFeedbackSummaryPage = function FeedbackSummaryPage(version, response, solution)\n                                                    {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackSummaryPage.prototype, Page.prototype);\nFeedbackSummaryPage.prototype.constructor = FeedbackSummaryPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FeedbackSummaryInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @param {FeedbackSummaryPayload} payload - Payload response from the API\n *\n * @returns FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackSummaryPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {number} callCount - The total number of calls\n * @property {number} callFeedbackCount -\n *          The total number of calls with a feedback entry\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {Date} endDate - The latest feedback entry date in the summary\n * @property {boolean} includeSubaccounts -\n *          Whether the feedback summary includes subaccounts\n * @property {object} issues - Issues experienced during the call\n * @property {number} qualityScoreAverage -\n *          The average QualityScore of the feedback entries\n * @property {number} qualityScoreMedian -\n *          The median QualityScore of the feedback entries\n * @property {number} qualityScoreStandardDeviation -\n *          The standard deviation of the quality scores\n * @property {string} sid - A string that uniquely identifies this feedback entry\n * @property {Date} startDate - The earliest feedback entry date in the summary\n * @property {feedback_summary.status} status - The status of the feedback summary\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackSummaryPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created this resource\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance = function FeedbackSummaryInstance(version, payload,\n                                                            accountSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.callCount = deserialize.integer(payload.call_count); // jshint ignore:line\n  this.callFeedbackCount = deserialize.integer(payload.call_feedback_count); // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.endDate = deserialize.iso8601Date(payload.end_date); // jshint ignore:line\n  this.includeSubaccounts = payload.include_subaccounts; // jshint ignore:line\n  this.issues = payload.issues; // jshint ignore:line\n  this.qualityScoreAverage = deserialize.decimal(payload.quality_score_average); // jshint ignore:line\n  this.qualityScoreMedian = deserialize.decimal(payload.quality_score_median); // jshint ignore:line\n  this.qualityScoreStandardDeviation = deserialize.decimal(payload.quality_score_standard_deviation); // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.startDate = deserialize.iso8601Date(payload.start_date); // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(FeedbackSummaryInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new FeedbackSummaryContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackSummaryInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n/* jshint ignore:end */\nFeedbackSummaryContext = function FeedbackSummaryContext(version, accountSid,\n                                                          sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, sid: sid, };\n  this._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary/${sid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackSummaryInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFeedbackSummaryContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackSummaryList: FeedbackSummaryList,\n  FeedbackSummaryPage: FeedbackSummaryPage,\n  FeedbackSummaryInstance: FeedbackSummaryInstance,\n  FeedbackSummaryContext: FeedbackSummaryContext\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAE;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAE;AAC7B,IAAIG,IAAI,GAAGH,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAE;AACjD,IAAII,WAAW,GAAGJ,OAAO,CACrB,iCAAiC,CAAC,CAAC,CAAE;AACzC,IAAIK,SAAS,GAAGL,OAAO,CACnB,+BAA+B,CAAC,CAAC,CAAE;AACvC,IAAIM,MAAM,GAAGN,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAE;;AAErD,IAAIO,mBAAmB;AACvB,IAAIC,mBAAmB;AACvB,IAAIC,uBAAuB;AAC3B,IAAIC,sBAAsB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,mBAAmB,GAAG,SAASA,mBAAmBA,CAACI,OAAO,EAAEC,UAAU,EAAE;EACtE;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACA,SAASC,2BAA2BA,CAACC,GAAG,EAAE;IACxC,OAAOD,2BAA2B,CAACE,GAAG,CAACD,GAAG,CAAC;EAC7C;EAEAD,2BAA2B,CAACG,QAAQ,GAAGL,OAAO;EAC9C;EACAE,2BAA2B,CAACI,SAAS,GAAG;IAACL,UAAU,EAAEA;EAAU,CAAC;EAChEC,2BAA2B,CAACK,IAAI,GAAI,aAAYN,UAAW,6BAA4B;EACvF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAC,2BAA2B,CAACM,MAAM,GAAG,SAASA,MAAMA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IACnE,IAAIpB,CAAC,CAACqB,WAAW,CAACF,IAAI,CAAC,EAAE;MACvB,MAAM,IAAIG,KAAK,CAAC,oCAAoC,CAAC;IACvD;IACA,IAAItB,CAAC,CAACqB,WAAW,CAACF,IAAI,CAACI,SAAS,CAAC,EAAE;MACjC,MAAM,IAAID,KAAK,CAAC,8CAA8C,CAAC;IACjE;IACA,IAAItB,CAAC,CAACqB,WAAW,CAACF,IAAI,CAACK,OAAO,CAAC,EAAE;MAC/B,MAAM,IAAIF,KAAK,CAAC,4CAA4C,CAAC;IAC/D;IAEA,IAAIG,QAAQ,GAAG3B,CAAC,CAAC4B,KAAK,CAAC,CAAC;IACxB,IAAIC,IAAI,GAAGtB,MAAM,CAACuB,EAAE,CAAC;MACnB,WAAW,EAAExB,SAAS,CAACyB,WAAW,CAAC7B,CAAC,CAACc,GAAG,CAACK,IAAI,EAAE,WAAW,CAAC,CAAC;MAC5D,SAAS,EAAEf,SAAS,CAACyB,WAAW,CAAC7B,CAAC,CAACc,GAAG,CAACK,IAAI,EAAE,SAAS,CAAC,CAAC;MACxD,oBAAoB,EAAEf,SAAS,CAAC0B,IAAI,CAAC9B,CAAC,CAACc,GAAG,CAACK,IAAI,EAAE,oBAAoB,CAAC,CAAC;MACvE,gBAAgB,EAAEnB,CAAC,CAACc,GAAG,CAACK,IAAI,EAAE,gBAAgB,CAAC;MAC/C,sBAAsB,EAAEnB,CAAC,CAACc,GAAG,CAACK,IAAI,EAAE,sBAAsB;IAC5D,CAAC,CAAC;IAEF,IAAIY,OAAO,GAAG,IAAI,CAAChB,QAAQ,CAACG,MAAM,CAAC;MAACc,GAAG,EAAE,IAAI,CAACf,IAAI;MAAEgB,MAAM,EAAE,MAAM;MAAEN,IAAI,EAAEA;IAAI,CAAC,CAAC;IAEhFI,OAAO,GAAGA,OAAO,CAACG,IAAI,CAAC,UAASC,OAAO,EAAE;MACvCV,QAAQ,CAACW,OAAO,CAAC,IAAI5B,uBAAuB,CAC1C,IAAI,CAACO,QAAQ,EACboB,OAAO,EACP,IAAI,CAACnB,SAAS,CAACL,UAAU,EACzB,IAAI,CAACK,SAAS,CAACH,GACjB,CAAC,CAAC;IACJ,CAAC,CAACwB,IAAI,CAAC,IAAI,CAAC,CAAC;IAEbN,OAAO,CAACO,KAAK,CAAC,UAASC,KAAK,EAAE;MAC5Bd,QAAQ,CAACe,MAAM,CAACD,KAAK,CAAC;IACxB,CAAC,CAAC;IAEF,IAAIvC,CAAC,CAACyC,UAAU,CAACrB,QAAQ,CAAC,EAAE;MAC1BK,QAAQ,CAACM,OAAO,CAACW,OAAO,CAACtB,QAAQ,CAAC;IACpC;IAEA,OAAOK,QAAQ,CAACM,OAAO;EACzB,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAnB,2BAA2B,CAACE,GAAG,GAAG,SAASA,GAAGA,CAACD,GAAG,EAAE;IAClD,OAAO,IAAIJ,sBAAsB,CAAC,IAAI,CAACM,QAAQ,EAAE,IAAI,CAACC,SAAS,CAACL,UAAU,EAAEE,GAAG,CAAC;EAClF,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAD,2BAA2B,CAAC+B,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IACrD,OAAO,IAAI,CAAC3B,SAAS;EACvB,CAAC;EAEDJ,2BAA2B,CAACX,IAAI,CAAC2C,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EACrEC,OAAO,EAAE;IACX,OAAO9C,IAAI,CAAC2C,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;EAC7C,CAAC;EAED,OAAOnC,2BAA2B;AACpC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,mBAAmB,GAAG,SAASA,mBAAmBA,CAACG,OAAO,EAAEsC,QAAQ,EAAEC,QAAQ,EAC1B;EAClD;EACA,IAAI,CAACjC,SAAS,GAAGiC,QAAQ;EAEzB/C,IAAI,CAACgD,SAAS,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,EAAE1C,OAAO,EAAEsC,QAAQ,EAAE,IAAI,CAAChC,SAAS,CAAC;AAC1E,CAAC;AAEDhB,CAAC,CAACqD,MAAM,CAAC9C,mBAAmB,CAAC2C,SAAS,EAAEhD,IAAI,CAACgD,SAAS,CAAC;AACvD3C,mBAAmB,CAAC2C,SAAS,CAACC,WAAW,GAAG5C,mBAAmB;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,mBAAmB,CAAC2C,SAAS,CAACI,WAAW,GAAG,SAASA,WAAWA,CAACnB,OAAO,EAAE;EACxE,OAAO,IAAI3B,uBAAuB,CAAC,IAAI,CAACO,QAAQ,EAAEoB,OAAO,EAAE,IAAI,CAACnB,SAAS,CAACL,UAAU,CAAC;AACvF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,mBAAmB,CAAC2C,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACvD,IAAIY,KAAK,GAAG,CAAC,CAAC;EACdvD,CAAC,CAACwD,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAAC1D,CAAC,CAAC2D,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAE1D,CAAC,CAACyC,UAAU,CAACgB,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAEDhD,mBAAmB,CAAC2C,SAAS,CAACjD,IAAI,CAAC2C,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EACvEC,OAAO,EAAE;EACX,OAAO9C,IAAI,CAAC2C,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvC,uBAAuB,GAAG,SAASA,uBAAuBA,CAACE,OAAO,EAAEyB,OAAO,EACfxB,UAAU,EAAEE,GAAG,EAAE;EAC3E,IAAI,CAACE,QAAQ,GAAGL,OAAO;;EAEvB;EACA,IAAI,CAACC,UAAU,GAAGwB,OAAO,CAACyB,WAAW,CAAC,CAAC;EACvC,IAAI,CAACC,SAAS,GAAG1D,WAAW,CAAC2D,OAAO,CAAC3B,OAAO,CAAC4B,UAAU,CAAC,CAAC,CAAC;EAC1D,IAAI,CAACC,iBAAiB,GAAG7D,WAAW,CAAC2D,OAAO,CAAC3B,OAAO,CAAC8B,mBAAmB,CAAC,CAAC,CAAC;EAC3E,IAAI,CAACC,WAAW,GAAG/D,WAAW,CAACgE,eAAe,CAAChC,OAAO,CAACiC,YAAY,CAAC,CAAC,CAAC;EACtE,IAAI,CAACC,WAAW,GAAGlE,WAAW,CAACgE,eAAe,CAAChC,OAAO,CAACmC,YAAY,CAAC,CAAC,CAAC;EACtE,IAAI,CAAC9C,OAAO,GAAGrB,WAAW,CAAC0B,WAAW,CAACM,OAAO,CAACoC,QAAQ,CAAC,CAAC,CAAC;EAC1D,IAAI,CAACC,kBAAkB,GAAGrC,OAAO,CAACsC,mBAAmB,CAAC,CAAC;EACvD,IAAI,CAACC,MAAM,GAAGvC,OAAO,CAACuC,MAAM,CAAC,CAAC;EAC9B,IAAI,CAACC,mBAAmB,GAAGxE,WAAW,CAACyE,OAAO,CAACzC,OAAO,CAAC0C,qBAAqB,CAAC,CAAC,CAAC;EAC/E,IAAI,CAACC,kBAAkB,GAAG3E,WAAW,CAACyE,OAAO,CAACzC,OAAO,CAAC4C,oBAAoB,CAAC,CAAC,CAAC;EAC7E,IAAI,CAACC,6BAA6B,GAAG7E,WAAW,CAACyE,OAAO,CAACzC,OAAO,CAAC8C,gCAAgC,CAAC,CAAC,CAAC;EACpG,IAAI,CAACpE,GAAG,GAAGsB,OAAO,CAACtB,GAAG,CAAC,CAAC;EACxB,IAAI,CAACU,SAAS,GAAGpB,WAAW,CAAC0B,WAAW,CAACM,OAAO,CAAC+C,UAAU,CAAC,CAAC,CAAC;EAC9D,IAAI,CAACC,MAAM,GAAGhD,OAAO,CAACgD,MAAM,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACC,QAAQ,GAAGC,SAAS;EACzB,IAAI,CAACrE,SAAS,GAAG;IAACL,UAAU,EAAEA,UAAU;IAAEE,GAAG,EAAEA,GAAG,IAAI,IAAI,CAACA;EAAK,CAAC;AACnE,CAAC;AAEDyE,MAAM,CAACC,cAAc,CAAC/E,uBAAuB,CAAC0C,SAAS,EACrD,QAAQ,EAAE;EACRpC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC,IAAI,CAACsE,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,GAAG,IAAI3E,sBAAsB,CACxC,IAAI,CAACM,QAAQ,EACb,IAAI,CAACC,SAAS,CAACL,UAAU,EACzB,IAAI,CAACK,SAAS,CAACH,GACjB,CAAC;IACH;IAEA,OAAO,IAAI,CAACuE,QAAQ;EACtB;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5E,uBAAuB,CAAC0C,SAAS,CAACsC,KAAK,GAAG,SAASA,KAAKA,CAACpE,QAAQ,EAAE;EACjE,OAAO,IAAI,CAACqE,MAAM,CAACD,KAAK,CAACpE,QAAQ,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,uBAAuB,CAAC0C,SAAS,CAACwC,MAAM,GAAG,SAASA,MAAMA,CAACtE,QAAQ,EAAE;EACnE,OAAO,IAAI,CAACqE,MAAM,CAACC,MAAM,CAACtE,QAAQ,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,uBAAuB,CAAC0C,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC3D,IAAIY,KAAK,GAAG,CAAC,CAAC;EACdvD,CAAC,CAACwD,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAAC1D,CAAC,CAAC2D,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAE1D,CAAC,CAACyC,UAAU,CAACgB,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAED/C,uBAAuB,CAAC0C,SAAS,CAACjD,IAAI,CAAC2C,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAC3EC,OAAO,EAAE;EACX,OAAO9C,IAAI,CAAC2C,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,sBAAsB,GAAG,SAASA,sBAAsBA,CAACC,OAAO,EAAEC,UAAU,EAClBE,GAAG,EAAE;EAC7D,IAAI,CAACE,QAAQ,GAAGL,OAAO;;EAEvB;EACA,IAAI,CAACM,SAAS,GAAG;IAACL,UAAU,EAAEA,UAAU;IAAEE,GAAG,EAAEA;EAAK,CAAC;EACrD,IAAI,CAACI,IAAI,GAAI,aAAYN,UAAW,0BAAyBE,GAAI,OAAM;AACzE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,sBAAsB,CAACyC,SAAS,CAACsC,KAAK,GAAG,SAASA,KAAKA,CAACpE,QAAQ,EAAE;EAChE,IAAIK,QAAQ,GAAG3B,CAAC,CAAC4B,KAAK,CAAC,CAAC;EACxB,IAAIK,OAAO,GAAG,IAAI,CAAChB,QAAQ,CAACyE,KAAK,CAAC;IAACxD,GAAG,EAAE,IAAI,CAACf,IAAI;IAAEgB,MAAM,EAAE;EAAK,CAAC,CAAC;EAElEF,OAAO,GAAGA,OAAO,CAACG,IAAI,CAAC,UAASC,OAAO,EAAE;IACvCV,QAAQ,CAACW,OAAO,CAAC,IAAI5B,uBAAuB,CAC1C,IAAI,CAACO,QAAQ,EACboB,OAAO,EACP,IAAI,CAACnB,SAAS,CAACL,UAAU,EACzB,IAAI,CAACK,SAAS,CAACH,GACjB,CAAC,CAAC;EACJ,CAAC,CAACwB,IAAI,CAAC,IAAI,CAAC,CAAC;EAEbN,OAAO,CAACO,KAAK,CAAC,UAASC,KAAK,EAAE;IAC5Bd,QAAQ,CAACe,MAAM,CAACD,KAAK,CAAC;EACxB,CAAC,CAAC;EAEF,IAAIvC,CAAC,CAACyC,UAAU,CAACrB,QAAQ,CAAC,EAAE;IAC1BK,QAAQ,CAACM,OAAO,CAACW,OAAO,CAACtB,QAAQ,CAAC;EACpC;EAEA,OAAOK,QAAQ,CAACM,OAAO;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,sBAAsB,CAACyC,SAAS,CAACwC,MAAM,GAAG,SAASA,MAAMA,CAACtE,QAAQ,EAAE;EAClE,IAAIK,QAAQ,GAAG3B,CAAC,CAAC4B,KAAK,CAAC,CAAC;EACxB,IAAIK,OAAO,GAAG,IAAI,CAAChB,QAAQ,CAAC2E,MAAM,CAAC;IAAC1D,GAAG,EAAE,IAAI,CAACf,IAAI;IAAEgB,MAAM,EAAE;EAAQ,CAAC,CAAC;EAEtEF,OAAO,GAAGA,OAAO,CAACG,IAAI,CAAC,UAASC,OAAO,EAAE;IACvCV,QAAQ,CAACW,OAAO,CAACD,OAAO,CAAC;EAC3B,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC,CAAC;EAEbN,OAAO,CAACO,KAAK,CAAC,UAASC,KAAK,EAAE;IAC5Bd,QAAQ,CAACe,MAAM,CAACD,KAAK,CAAC;EACxB,CAAC,CAAC;EAEF,IAAIvC,CAAC,CAACyC,UAAU,CAACrB,QAAQ,CAAC,EAAE;IAC1BK,QAAQ,CAACM,OAAO,CAACW,OAAO,CAACtB,QAAQ,CAAC;EACpC;EAEA,OAAOK,QAAQ,CAACM,OAAO;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,sBAAsB,CAACyC,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC1D,OAAO,IAAI,CAAC3B,SAAS;AACvB,CAAC;AAEDP,sBAAsB,CAACyC,SAAS,CAACjD,IAAI,CAAC2C,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAC1EC,OAAO,EAAE;EACX,OAAO9C,IAAI,CAAC2C,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;AAED4C,MAAM,CAACC,OAAO,GAAG;EACftF,mBAAmB,EAAEA,mBAAmB;EACxCC,mBAAmB,EAAEA,mBAAmB;EACxCC,uBAAuB,EAAEA,uBAAuB;EAChDC,sBAAsB,EAAEA;AAC1B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}