{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar EvaluationList;\nvar EvaluationPage;\nvar EvaluationInstance;\nvar EvaluationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n * @param {string} bundleSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nEvaluationList = function EvaluationList(version, bundleSid) {\n  /* jshint ignore:start */\n  /**\n   * @function evaluations\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n  /* jshint ignore:end */\n  function EvaluationListInstance(sid) {\n    return EvaluationListInstance.get(sid);\n  }\n  EvaluationListInstance._version = version;\n  // Path Solution\n  EvaluationListInstance._solution = {\n    bundleSid: bundleSid\n  };\n  EvaluationListInstance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations`;\n  /* jshint ignore:start */\n  /**\n   * create a EvaluationInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed EvaluationInstance\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.create = function create(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST'\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EvaluationInstance(this._version, payload, this._solution.bundleSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams EvaluationInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists EvaluationInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a evaluation\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} sid - The unique string that identifies the Evaluation resource\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.get = function get(sid) {\n    return new EvaluationContext(this._version, this._solution.bundleSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  EvaluationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return EvaluationListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationPage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {EvaluationSolution} solution - Path solution\n *\n * @returns EvaluationPage\n */\n/* jshint ignore:end */\nEvaluationPage = function EvaluationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(EvaluationPage.prototype, Page.prototype);\nEvaluationPage.prototype.constructor = EvaluationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of EvaluationInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @param {EvaluationPayload} payload - Payload response from the API\n *\n * @returns EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationPage.prototype.getInstance = function getInstance(payload) {\n  return new EvaluationInstance(this._version, payload, this._solution.bundleSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nEvaluationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Evaluation resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} regulationSid - The unique string of a regulation\n * @property {string} bundleSid - The unique string that identifies the resource\n * @property {evaluation.status} status -\n *          The compliance status of the Evaluation resource\n * @property {object} results - The results of the Evaluation resource\n * @property {Date} dateCreated - The date_created\n * @property {string} url - The url\n *\n * @param {V2} version - Version of the resource\n * @param {EvaluationPayload} payload - The instance payload\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nEvaluationInstance = function EvaluationInstance(version, payload, bundleSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.regulationSid = payload.regulation_sid; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.results = payload.results; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    bundleSid: bundleSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(EvaluationInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new EvaluationContext(this._version, this._solution.bundleSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nEvaluationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nEvaluationContext = function EvaluationContext(version, bundleSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    bundleSid: bundleSid,\n    sid: sid\n  };\n  this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new EvaluationInstance(this._version, payload, this._solution.bundleSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nEvaluationContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  EvaluationList: EvaluationList,\n  EvaluationPage: EvaluationPage,\n  EvaluationInstance: EvaluationInstance,\n  EvaluationContext: EvaluationContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","EvaluationList","EvaluationPage","EvaluationInstance","EvaluationContext","version","bundleSid","EvaluationListInstance","sid","get","_version","_solution","_uri","create","callback","deferred","defer","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","opts","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","data","of","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","regulationSid","regulation_sid","bundle_sid","status","results","dateCreated","iso8601DateTime","date_created","url","_context","undefined","Object","defineProperty","fetch","_proxy","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle/evaluation.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar EvaluationList;\nvar EvaluationPage;\nvar EvaluationInstance;\nvar EvaluationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n * @param {string} bundleSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nEvaluationList = function EvaluationList(version, bundleSid) {\n  /* jshint ignore:start */\n  /**\n   * @function evaluations\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n  /* jshint ignore:end */\n  function EvaluationListInstance(sid) {\n    return EvaluationListInstance.get(sid);\n  }\n\n  EvaluationListInstance._version = version;\n  // Path Solution\n  EvaluationListInstance._solution = {bundleSid: bundleSid};\n  EvaluationListInstance._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations`;\n  /* jshint ignore:start */\n  /**\n   * create a EvaluationInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed EvaluationInstance\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.create = function create(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.create({uri: this._uri, method: 'POST'});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EvaluationInstance(\n        this._version,\n        payload,\n        this._solution.bundleSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams EvaluationInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists EvaluationInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of EvaluationInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EvaluationPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a evaluation\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @param {string} sid - The unique string that identifies the Evaluation resource\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext}\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.get = function get(sid) {\n    return new EvaluationContext(this._version, this._solution.bundleSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  EvaluationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  EvaluationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return EvaluationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationPage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {EvaluationSolution} solution - Path solution\n *\n * @returns EvaluationPage\n */\n/* jshint ignore:end */\nEvaluationPage = function EvaluationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(EvaluationPage.prototype, Page.prototype);\nEvaluationPage.prototype.constructor = EvaluationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of EvaluationInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @param {EvaluationPayload} payload - Payload response from the API\n *\n * @returns EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationPage.prototype.getInstance = function getInstance(payload) {\n  return new EvaluationInstance(this._version, payload, this._solution.bundleSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nEvaluationPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance\n *\n * @property {string} sid -\n *          The unique string that identifies the Evaluation resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} regulationSid - The unique string of a regulation\n * @property {string} bundleSid - The unique string that identifies the resource\n * @property {evaluation.status} status -\n *          The compliance status of the Evaluation resource\n * @property {object} results - The results of the Evaluation resource\n * @property {Date} dateCreated - The date_created\n * @property {string} url - The url\n *\n * @param {V2} version - Version of the resource\n * @param {EvaluationPayload} payload - The instance payload\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nEvaluationInstance = function EvaluationInstance(version, payload, bundleSid,\n                                                  sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.regulationSid = payload.regulation_sid; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.results = payload.results; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {bundleSid: bundleSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(EvaluationInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new EvaluationContext(this._version, this._solution.bundleSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nEvaluationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EvaluationContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} bundleSid - The unique string that identifies the resource\n * @param {sid} sid - The unique string that identifies the Evaluation resource\n */\n/* jshint ignore:end */\nEvaluationContext = function EvaluationContext(version, bundleSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {bundleSid: bundleSid, sid: sid, };\n  this._uri = `/RegulatoryCompliance/Bundles/${bundleSid}/Evaluations/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a EvaluationInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EvaluationInstance\n */\n/* jshint ignore:end */\nEvaluationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new EvaluationInstance(\n      this._version,\n      payload,\n      this._solution.bundleSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEvaluationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nEvaluationContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  EvaluationList: EvaluationList,\n  EvaluationPage: EvaluationPage,\n  EvaluationInstance: EvaluationInstance,\n  EvaluationContext: EvaluationContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}