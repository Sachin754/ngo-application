{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Policy = void 0;\nconst jsonwebtoken_1 = __importDefault(require(\"jsonwebtoken\"));\n/**\n * Create a new Policy\n */\nclass Policy {\n  /**\n   * Create a new Policy instance\n   *\n   * @param options - ...\n   * @param options.url - Policy URL\n   * @param options.method - HTTP Method\n   * @param options.queryFilter - Request query filter allowances\n   * @param options.postFilter - Request post filter allowances\n   * @param options.allowed - Allow the policy\n   */\n  constructor(options) {\n    options = options || {};\n    this.url = options.url || \"\";\n    this.method = options.method || \"GET\";\n    this.queryFilter = options.queryFilter || {};\n    this.postFilter = options.postFilter || {};\n    this.allow = options.allow || true;\n  }\n  payload() {\n    return {\n      url: this.url,\n      method: this.method,\n      query_filter: this.queryFilter,\n      post_filter: this.postFilter,\n      allow: this.allow\n    };\n  }\n}\nexports.Policy = Policy;\nclass TaskRouterCapability {\n  /**\n   * @param options - ...\n   * @param options.accountSid - account sid\n   * @param options.authToken - auth token\n   * @param options.workspaceSid - workspace sid\n   * @param options.channelId - taskrouter channel id\n   * @param options.friendlyName - friendly name for the jwt\n   * @param options.ttl - time to live\n   * @param options.version - taskrouter version\n   */\n  constructor(options) {\n    if (!options) {\n      throw new Error('Required parameter \"options\" missing.');\n    }\n    if (!options.accountSid) {\n      throw new Error('Required parameter \"options.accountSid\" missing.');\n    }\n    if (!options.authToken) {\n      throw new Error('Required parameter \"options.authToken\" missing.');\n    }\n    if (!options.workspaceSid) {\n      throw new Error('Required parameter \"options.workspaceSid\" missing.');\n    }\n    if (!options.channelId) {\n      throw new Error('Required parameter \"options.channelId\" missing.');\n    }\n    this.accountSid = options.accountSid;\n    this.authToken = options.authToken;\n    this.workspaceSid = options.workspaceSid;\n    this.channelId = options.channelId;\n    this.friendlyName = options.friendlyName;\n    this.ttl = options.ttl || 3600;\n    this.version = options.version || \"v1\";\n    this.policies = [];\n  }\n  addPolicy(policy) {\n    this.policies.push(policy);\n  }\n  toJwt() {\n    var payload = {\n      iss: this.accountSid,\n      exp: Math.floor(new Date().valueOf() / 1000) + this.ttl,\n      version: this.version,\n      friendly_name: this.friendlyName,\n      account_sid: this.accountSid,\n      channel: this.channelId,\n      workspace_sid: this.workspaceSid,\n      policies: this.policies.map(policy => policy.payload())\n    };\n    if (this.channelId.startsWith(\"WK\")) {\n      payload.worker_sid = this.channelId;\n    } else if (this.channelId.startsWith(\"WQ\")) {\n      payload.taskqueue_sid = this.channelId;\n    }\n    return jsonwebtoken_1.default.sign(payload, this.authToken);\n  }\n}\nexports.default = TaskRouterCapability;\nTaskRouterCapability.Policy = Policy;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Policy","jsonwebtoken_1","require","constructor","options","url","method","queryFilter","postFilter","allow","payload","query_filter","post_filter","TaskRouterCapability","Error","accountSid","authToken","workspaceSid","channelId","friendlyName","ttl","version","policies","addPolicy","policy","push","toJwt","iss","exp","Math","floor","Date","valueOf","friendly_name","account_sid","channel","workspace_sid","map","startsWith","worker_sid","taskqueue_sid","default","sign"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/jwt/taskrouter/TaskRouterCapability.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Policy = void 0;\nconst jsonwebtoken_1 = __importDefault(require(\"jsonwebtoken\"));\n/**\n * Create a new Policy\n */\nclass Policy {\n    /**\n     * Create a new Policy instance\n     *\n     * @param options - ...\n     * @param options.url - Policy URL\n     * @param options.method - HTTP Method\n     * @param options.queryFilter - Request query filter allowances\n     * @param options.postFilter - Request post filter allowances\n     * @param options.allowed - Allow the policy\n     */\n    constructor(options) {\n        options = options || {};\n        this.url = options.url || \"\";\n        this.method = options.method || \"GET\";\n        this.queryFilter = options.queryFilter || {};\n        this.postFilter = options.postFilter || {};\n        this.allow = options.allow || true;\n    }\n    payload() {\n        return {\n            url: this.url,\n            method: this.method,\n            query_filter: this.queryFilter,\n            post_filter: this.postFilter,\n            allow: this.allow,\n        };\n    }\n}\nexports.Policy = Policy;\nclass TaskRouterCapability {\n    /**\n     * @param options - ...\n     * @param options.accountSid - account sid\n     * @param options.authToken - auth token\n     * @param options.workspaceSid - workspace sid\n     * @param options.channelId - taskrouter channel id\n     * @param options.friendlyName - friendly name for the jwt\n     * @param options.ttl - time to live\n     * @param options.version - taskrouter version\n     */\n    constructor(options) {\n        if (!options) {\n            throw new Error('Required parameter \"options\" missing.');\n        }\n        if (!options.accountSid) {\n            throw new Error('Required parameter \"options.accountSid\" missing.');\n        }\n        if (!options.authToken) {\n            throw new Error('Required parameter \"options.authToken\" missing.');\n        }\n        if (!options.workspaceSid) {\n            throw new Error('Required parameter \"options.workspaceSid\" missing.');\n        }\n        if (!options.channelId) {\n            throw new Error('Required parameter \"options.channelId\" missing.');\n        }\n        this.accountSid = options.accountSid;\n        this.authToken = options.authToken;\n        this.workspaceSid = options.workspaceSid;\n        this.channelId = options.channelId;\n        this.friendlyName = options.friendlyName;\n        this.ttl = options.ttl || 3600;\n        this.version = options.version || \"v1\";\n        this.policies = [];\n    }\n    addPolicy(policy) {\n        this.policies.push(policy);\n    }\n    toJwt() {\n        var payload = {\n            iss: this.accountSid,\n            exp: Math.floor(new Date().valueOf() / 1000) + this.ttl,\n            version: this.version,\n            friendly_name: this.friendlyName,\n            account_sid: this.accountSid,\n            channel: this.channelId,\n            workspace_sid: this.workspaceSid,\n            policies: this.policies.map((policy) => policy.payload()),\n        };\n        if (this.channelId.startsWith(\"WK\")) {\n            payload.worker_sid = this.channelId;\n        }\n        else if (this.channelId.startsWith(\"WQ\")) {\n            payload.taskqueue_sid = this.channelId;\n        }\n        return jsonwebtoken_1.default.sign(payload, this.authToken);\n    }\n}\nexports.default = TaskRouterCapability;\nTaskRouterCapability.Policy = Policy;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,MAAMC,cAAc,GAAGR,eAAe,CAACS,OAAO,CAAC,cAAc,CAAC,CAAC;AAC/D;AACA;AACA;AACA,MAAMF,MAAM,CAAC;EACT;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,WAAWA,CAACC,OAAO,EAAE;IACjBA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAI,CAACC,GAAG,GAAGD,OAAO,CAACC,GAAG,IAAI,EAAE;IAC5B,IAAI,CAACC,MAAM,GAAGF,OAAO,CAACE,MAAM,IAAI,KAAK;IACrC,IAAI,CAACC,WAAW,GAAGH,OAAO,CAACG,WAAW,IAAI,CAAC,CAAC;IAC5C,IAAI,CAACC,UAAU,GAAGJ,OAAO,CAACI,UAAU,IAAI,CAAC,CAAC;IAC1C,IAAI,CAACC,KAAK,GAAGL,OAAO,CAACK,KAAK,IAAI,IAAI;EACtC;EACAC,OAAOA,CAAA,EAAG;IACN,OAAO;MACHL,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBK,YAAY,EAAE,IAAI,CAACJ,WAAW;MAC9BK,WAAW,EAAE,IAAI,CAACJ,UAAU;MAC5BC,KAAK,EAAE,IAAI,CAACA;IAChB,CAAC;EACL;AACJ;AACAX,OAAO,CAACE,MAAM,GAAGA,MAAM;AACvB,MAAMa,oBAAoB,CAAC;EACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIV,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,EAAE;MACV,MAAM,IAAIU,KAAK,CAAC,uCAAuC,CAAC;IAC5D;IACA,IAAI,CAACV,OAAO,CAACW,UAAU,EAAE;MACrB,MAAM,IAAID,KAAK,CAAC,kDAAkD,CAAC;IACvE;IACA,IAAI,CAACV,OAAO,CAACY,SAAS,EAAE;MACpB,MAAM,IAAIF,KAAK,CAAC,iDAAiD,CAAC;IACtE;IACA,IAAI,CAACV,OAAO,CAACa,YAAY,EAAE;MACvB,MAAM,IAAIH,KAAK,CAAC,oDAAoD,CAAC;IACzE;IACA,IAAI,CAACV,OAAO,CAACc,SAAS,EAAE;MACpB,MAAM,IAAIJ,KAAK,CAAC,iDAAiD,CAAC;IACtE;IACA,IAAI,CAACC,UAAU,GAAGX,OAAO,CAACW,UAAU;IACpC,IAAI,CAACC,SAAS,GAAGZ,OAAO,CAACY,SAAS;IAClC,IAAI,CAACC,YAAY,GAAGb,OAAO,CAACa,YAAY;IACxC,IAAI,CAACC,SAAS,GAAGd,OAAO,CAACc,SAAS;IAClC,IAAI,CAACC,YAAY,GAAGf,OAAO,CAACe,YAAY;IACxC,IAAI,CAACC,GAAG,GAAGhB,OAAO,CAACgB,GAAG,IAAI,IAAI;IAC9B,IAAI,CAACC,OAAO,GAAGjB,OAAO,CAACiB,OAAO,IAAI,IAAI;IACtC,IAAI,CAACC,QAAQ,GAAG,EAAE;EACtB;EACAC,SAASA,CAACC,MAAM,EAAE;IACd,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,MAAM,CAAC;EAC9B;EACAE,KAAKA,CAAA,EAAG;IACJ,IAAIhB,OAAO,GAAG;MACViB,GAAG,EAAE,IAAI,CAACZ,UAAU;MACpBa,GAAG,EAAEC,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAACZ,GAAG;MACvDC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBY,aAAa,EAAE,IAAI,CAACd,YAAY;MAChCe,WAAW,EAAE,IAAI,CAACnB,UAAU;MAC5BoB,OAAO,EAAE,IAAI,CAACjB,SAAS;MACvBkB,aAAa,EAAE,IAAI,CAACnB,YAAY;MAChCK,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACe,GAAG,CAAEb,MAAM,IAAKA,MAAM,CAACd,OAAO,CAAC,CAAC;IAC5D,CAAC;IACD,IAAI,IAAI,CAACQ,SAAS,CAACoB,UAAU,CAAC,IAAI,CAAC,EAAE;MACjC5B,OAAO,CAAC6B,UAAU,GAAG,IAAI,CAACrB,SAAS;IACvC,CAAC,MACI,IAAI,IAAI,CAACA,SAAS,CAACoB,UAAU,CAAC,IAAI,CAAC,EAAE;MACtC5B,OAAO,CAAC8B,aAAa,GAAG,IAAI,CAACtB,SAAS;IAC1C;IACA,OAAOjB,cAAc,CAACwC,OAAO,CAACC,IAAI,CAAChC,OAAO,EAAE,IAAI,CAACM,SAAS,CAAC;EAC/D;AACJ;AACAlB,OAAO,CAAC2C,OAAO,GAAG5B,oBAAoB;AACtCA,oBAAoB,CAACb,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}