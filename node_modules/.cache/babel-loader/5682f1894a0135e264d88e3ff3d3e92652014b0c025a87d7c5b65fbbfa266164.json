{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Autopilot\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskActionsListInstance = exports.TaskActionsInstance = exports.TaskActionsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass TaskActionsContextImpl {\n  constructor(_version, assistantSid, taskSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(assistantSid)) {\n      throw new Error(\"Parameter 'assistantSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(taskSid)) {\n      throw new Error(\"Parameter 'taskSid' is not valid.\");\n    }\n    this._solution = {\n      assistantSid,\n      taskSid\n    };\n    this._uri = `/Assistants/${assistantSid}/Tasks/${taskSid}/Actions`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new TaskActionsInstance(operationVersion, payload, instance._solution.assistantSid, instance._solution.taskSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"actions\"] !== undefined) data[\"Actions\"] = serialize.object(params[\"actions\"]);\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TaskActionsInstance(operationVersion, payload, instance._solution.assistantSid, instance._solution.taskSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TaskActionsContextImpl = TaskActionsContextImpl;\nclass TaskActionsInstance {\n  constructor(_version, payload, assistantSid, taskSid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.assistantSid = payload.assistant_sid;\n    this.taskSid = payload.task_sid;\n    this.url = payload.url;\n    this.data = payload.data;\n    this._solution = {\n      assistantSid,\n      taskSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new TaskActionsContextImpl(this._version, this._solution.assistantSid, this._solution.taskSid);\n    return this._context;\n  }\n  /**\n   * Fetch a TaskActionsInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed TaskActionsInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      assistantSid: this.assistantSid,\n      taskSid: this.taskSid,\n      url: this.url,\n      data: this.data\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TaskActionsInstance = TaskActionsInstance;\nfunction TaskActionsListInstance(version, assistantSid, taskSid) {\n  if (!(0, utility_1.isValidPathParam)(assistantSid)) {\n    throw new Error(\"Parameter 'assistantSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(taskSid)) {\n    throw new Error(\"Parameter 'taskSid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new TaskActionsContextImpl(version, assistantSid, taskSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    assistantSid,\n    taskSid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.TaskActionsListInstance = TaskActionsListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","TaskActionsListInstance","TaskActionsInstance","TaskActionsContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","assistantSid","taskSid","isValidPathParam","Error","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","update","params","Function","data","undefined","object","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","assistant_sid","task_sid","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/autopilot/v1/assistant/task/taskActions.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Autopilot\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaskActionsListInstance = exports.TaskActionsInstance = exports.TaskActionsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass TaskActionsContextImpl {\n    constructor(_version, assistantSid, taskSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(assistantSid)) {\n            throw new Error(\"Parameter 'assistantSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(taskSid)) {\n            throw new Error(\"Parameter 'taskSid' is not valid.\");\n        }\n        this._solution = { assistantSid, taskSid };\n        this._uri = `/Assistants/${assistantSid}/Tasks/${taskSid}/Actions`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new TaskActionsInstance(operationVersion, payload, instance._solution.assistantSid, instance._solution.taskSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"actions\"] !== undefined)\n            data[\"Actions\"] = serialize.object(params[\"actions\"]);\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TaskActionsInstance(operationVersion, payload, instance._solution.assistantSid, instance._solution.taskSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TaskActionsContextImpl = TaskActionsContextImpl;\nclass TaskActionsInstance {\n    constructor(_version, payload, assistantSid, taskSid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.assistantSid = payload.assistant_sid;\n        this.taskSid = payload.task_sid;\n        this.url = payload.url;\n        this.data = payload.data;\n        this._solution = { assistantSid, taskSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new TaskActionsContextImpl(this._version, this._solution.assistantSid, this._solution.taskSid);\n        return this._context;\n    }\n    /**\n     * Fetch a TaskActionsInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed TaskActionsInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            assistantSid: this.assistantSid,\n            taskSid: this.taskSid,\n            url: this.url,\n            data: this.data,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TaskActionsInstance = TaskActionsInstance;\nfunction TaskActionsListInstance(version, assistantSid, taskSid) {\n    if (!(0, utility_1.isValidPathParam)(assistantSid)) {\n        throw new Error(\"Parameter 'assistantSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(taskSid)) {\n        throw new Error(\"Parameter 'taskSid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new TaskActionsContextImpl(version, assistantSid, taskSid);\n    };\n    instance._version = version;\n    instance._solution = { assistantSid, taskSid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.TaskActionsListInstance = TaskActionsListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}