{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkflowRealTimeStatisticsListInstance = exports.WorkflowRealTimeStatisticsInstance = exports.WorkflowRealTimeStatisticsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass WorkflowRealTimeStatisticsContextImpl {\n  constructor(_version, workspaceSid, workflowSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n      throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(workflowSid)) {\n      throw new Error(\"Parameter 'workflowSid' is not valid.\");\n    }\n    this._solution = {\n      workspaceSid,\n      workflowSid\n    };\n    this._uri = `/Workspaces/${workspaceSid}/Workflows/${workflowSid}/RealTimeStatistics`;\n  }\n  fetch(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"taskChannel\"] !== undefined) data[\"TaskChannel\"] = params[\"taskChannel\"];\n    const headers = {};\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new WorkflowRealTimeStatisticsInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.workflowSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.WorkflowRealTimeStatisticsContextImpl = WorkflowRealTimeStatisticsContextImpl;\nclass WorkflowRealTimeStatisticsInstance {\n  constructor(_version, payload, workspaceSid, workflowSid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age);\n    this.longestTaskWaitingSid = payload.longest_task_waiting_sid;\n    this.tasksByPriority = payload.tasks_by_priority;\n    this.tasksByStatus = payload.tasks_by_status;\n    this.totalTasks = deserialize.integer(payload.total_tasks);\n    this.workflowSid = payload.workflow_sid;\n    this.workspaceSid = payload.workspace_sid;\n    this.url = payload.url;\n    this._solution = {\n      workspaceSid,\n      workflowSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new WorkflowRealTimeStatisticsContextImpl(this._version, this._solution.workspaceSid, this._solution.workflowSid);\n    return this._context;\n  }\n  fetch(params, callback) {\n    return this._proxy.fetch(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      longestTaskWaitingAge: this.longestTaskWaitingAge,\n      longestTaskWaitingSid: this.longestTaskWaitingSid,\n      tasksByPriority: this.tasksByPriority,\n      tasksByStatus: this.tasksByStatus,\n      totalTasks: this.totalTasks,\n      workflowSid: this.workflowSid,\n      workspaceSid: this.workspaceSid,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.WorkflowRealTimeStatisticsInstance = WorkflowRealTimeStatisticsInstance;\nfunction WorkflowRealTimeStatisticsListInstance(version, workspaceSid, workflowSid) {\n  if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n    throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(workflowSid)) {\n    throw new Error(\"Parameter 'workflowSid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new WorkflowRealTimeStatisticsContextImpl(version, workspaceSid, workflowSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    workspaceSid,\n    workflowSid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.WorkflowRealTimeStatisticsListInstance = WorkflowRealTimeStatisticsListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","WorkflowRealTimeStatisticsListInstance","WorkflowRealTimeStatisticsInstance","WorkflowRealTimeStatisticsContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","workspaceSid","workflowSid","isValidPathParam","Error","_solution","_uri","fetch","params","callback","Function","data","undefined","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","accountSid","account_sid","longestTaskWaitingAge","integer","longest_task_waiting_age","longestTaskWaitingSid","longest_task_waiting_sid","tasksByPriority","tasks_by_priority","tasksByStatus","tasks_by_status","totalTasks","total_tasks","workflow_sid","workspace_sid","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/taskrouter/v1/workspace/workflow/workflowRealTimeStatistics.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkflowRealTimeStatisticsListInstance = exports.WorkflowRealTimeStatisticsInstance = exports.WorkflowRealTimeStatisticsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass WorkflowRealTimeStatisticsContextImpl {\n    constructor(_version, workspaceSid, workflowSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n            throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(workflowSid)) {\n            throw new Error(\"Parameter 'workflowSid' is not valid.\");\n        }\n        this._solution = { workspaceSid, workflowSid };\n        this._uri = `/Workspaces/${workspaceSid}/Workflows/${workflowSid}/RealTimeStatistics`;\n    }\n    fetch(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"taskChannel\"] !== undefined)\n            data[\"TaskChannel\"] = params[\"taskChannel\"];\n        const headers = {};\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new WorkflowRealTimeStatisticsInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.workflowSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.WorkflowRealTimeStatisticsContextImpl = WorkflowRealTimeStatisticsContextImpl;\nclass WorkflowRealTimeStatisticsInstance {\n    constructor(_version, payload, workspaceSid, workflowSid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age);\n        this.longestTaskWaitingSid = payload.longest_task_waiting_sid;\n        this.tasksByPriority = payload.tasks_by_priority;\n        this.tasksByStatus = payload.tasks_by_status;\n        this.totalTasks = deserialize.integer(payload.total_tasks);\n        this.workflowSid = payload.workflow_sid;\n        this.workspaceSid = payload.workspace_sid;\n        this.url = payload.url;\n        this._solution = { workspaceSid, workflowSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new WorkflowRealTimeStatisticsContextImpl(this._version, this._solution.workspaceSid, this._solution.workflowSid);\n        return this._context;\n    }\n    fetch(params, callback) {\n        return this._proxy.fetch(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            longestTaskWaitingAge: this.longestTaskWaitingAge,\n            longestTaskWaitingSid: this.longestTaskWaitingSid,\n            tasksByPriority: this.tasksByPriority,\n            tasksByStatus: this.tasksByStatus,\n            totalTasks: this.totalTasks,\n            workflowSid: this.workflowSid,\n            workspaceSid: this.workspaceSid,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.WorkflowRealTimeStatisticsInstance = WorkflowRealTimeStatisticsInstance;\nfunction WorkflowRealTimeStatisticsListInstance(version, workspaceSid, workflowSid) {\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n        throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(workflowSid)) {\n        throw new Error(\"Parameter 'workflowSid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new WorkflowRealTimeStatisticsContextImpl(version, workspaceSid, workflowSid);\n    };\n    instance._version = version;\n    instance._solution = { workspaceSid, workflowSid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.WorkflowRealTimeStatisticsListInstance = WorkflowRealTimeStatisticsListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}