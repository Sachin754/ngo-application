{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar UsAppToPersonList;\nvar UsAppToPersonPage;\nvar UsAppToPersonInstance;\nvar UsAppToPersonContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n/* jshint ignore:end */\nUsAppToPersonList = function UsAppToPersonList(version, messagingServiceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function usAppToPerson\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n  /* jshint ignore:end */\n  function UsAppToPersonListInstance(sid) {\n    return UsAppToPersonListInstance.get(sid);\n  }\n  UsAppToPersonListInstance._version = version;\n  // Path Solution\n  UsAppToPersonListInstance._solution = {\n    messagingServiceSid: messagingServiceSid\n  };\n  UsAppToPersonListInstance._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p`;\n  /* jshint ignore:start */\n  /**\n   * create a UsAppToPersonInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.brandRegistrationSid - A2P Brand Registration SID\n   * @param {string} opts.description -\n   *          A short description of what this SMS campaign does\n   * @param {string|list} opts.messageSamples - Message samples\n   * @param {string} opts.usAppToPersonUsecase - A2P Campaign Use Case.\n   * @param {boolean} opts.hasEmbeddedLinks -\n   *          Indicates that this SMS campaign will send messages that contain links\n   * @param {boolean} opts.hasEmbeddedPhone -\n   *          Indicates that this SMS campaign will send messages that contain phone numbers\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.brandRegistrationSid)) {\n      throw new Error('Required parameter \"opts.brandRegistrationSid\" missing.');\n    }\n    if (_.isUndefined(opts.description)) {\n      throw new Error('Required parameter \"opts.description\" missing.');\n    }\n    if (_.isUndefined(opts.messageSamples)) {\n      throw new Error('Required parameter \"opts.messageSamples\" missing.');\n    }\n    if (_.isUndefined(opts.usAppToPersonUsecase)) {\n      throw new Error('Required parameter \"opts.usAppToPersonUsecase\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedLinks)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedLinks\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedPhone)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedPhone\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid'),\n      'Description': _.get(opts, 'description'),\n      'MessageSamples': serialize.map(_.get(opts, 'messageSamples'), function (e) {\n        return e;\n      }),\n      'UsAppToPersonUsecase': _.get(opts, 'usAppToPersonUsecase'),\n      'HasEmbeddedLinks': serialize.bool(_.get(opts, 'hasEmbeddedLinks')),\n      'HasEmbeddedPhone': serialize.bool(_.get(opts, 'hasEmbeddedPhone'))\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams UsAppToPersonInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists UsAppToPersonInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a us_app_to_person\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} sid -\n   *          The SID that identifies the US A2P Compliance resource to fetch\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.get = function get(sid) {\n    return new UsAppToPersonContext(this._version, this._solution.messagingServiceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  UsAppToPersonListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return UsAppToPersonListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonSolution} solution - Path solution\n *\n * @returns UsAppToPersonPage\n */\n/* jshint ignore:end */\nUsAppToPersonPage = function UsAppToPersonPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(UsAppToPersonPage.prototype, Page.prototype);\nUsAppToPersonPage.prototype.constructor = UsAppToPersonPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsAppToPersonInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @param {UsAppToPersonPayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nUsAppToPersonPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance\n *\n * @property {string} sid -\n *          The unique string that identifies a US A2P Compliance resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} brandRegistrationSid - A2P Brand Registration SID\n * @property {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @property {string} description -\n *          A short description of what this SMS campaign does\n * @property {string} messageSamples - Message samples\n * @property {string} usAppToPersonUsecase - A2P Campaign Use Case.\n * @property {boolean} hasEmbeddedLinks -\n *          Indicate that this SMS campaign will send messages that contain links\n * @property {boolean} hasEmbeddedPhone -\n *          Indicates that this SMS campaign will send messages that contain phone numbers\n * @property {string} campaignStatus - Campaign status\n * @property {string} campaignId - The Campaign Registry (TCR) Campaign ID.\n * @property {boolean} isExternallyRegistered -\n *          Indicates whether the campaign was registered externally or not\n * @property {object} rateLimits -\n *          Rate limit and/or classification set by each carrier\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the US App to Person resource\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonPayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n/* jshint ignore:end */\nUsAppToPersonInstance = function UsAppToPersonInstance(version, payload, messagingServiceSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.brandRegistrationSid = payload.brand_registration_sid; // jshint ignore:line\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n  this.description = payload.description; // jshint ignore:line\n  this.messageSamples = payload.message_samples; // jshint ignore:line\n  this.usAppToPersonUsecase = payload.us_app_to_person_usecase; // jshint ignore:line\n  this.hasEmbeddedLinks = payload.has_embedded_links; // jshint ignore:line\n  this.hasEmbeddedPhone = payload.has_embedded_phone; // jshint ignore:line\n  this.campaignStatus = payload.campaign_status; // jshint ignore:line\n  this.campaignId = payload.campaign_id; // jshint ignore:line\n  this.isExternallyRegistered = payload.is_externally_registered; // jshint ignore:line\n  this.rateLimits = payload.rate_limits; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    messagingServiceSid: messagingServiceSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(UsAppToPersonInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new UsAppToPersonContext(this._version, this._solution.messagingServiceSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nUsAppToPersonInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service to fetch the resource from\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n/* jshint ignore:end */\nUsAppToPersonContext = function UsAppToPersonContext(version, messagingServiceSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    messagingServiceSid: messagingServiceSid,\n    sid: sid\n  };\n  this._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nUsAppToPersonContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  UsAppToPersonList: UsAppToPersonList,\n  UsAppToPersonPage: UsAppToPersonPage,\n  UsAppToPersonInstance: UsAppToPersonInstance,\n  UsAppToPersonContext: UsAppToPersonContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","UsAppToPersonList","UsAppToPersonPage","UsAppToPersonInstance","UsAppToPersonContext","version","messagingServiceSid","UsAppToPersonListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","brandRegistrationSid","description","messageSamples","usAppToPersonUsecase","hasEmbeddedLinks","hasEmbeddedPhone","deferred","defer","data","of","map","e","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","brand_registration_sid","messaging_service_sid","message_samples","us_app_to_person_usecase","has_embedded_links","has_embedded_phone","campaignStatus","campaign_status","campaignId","campaign_id","isExternallyRegistered","is_externally_registered","rateLimits","rate_limits","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","remove","_proxy","fetch","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/messaging/v1/service/usAppToPerson.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar UsAppToPersonList;\nvar UsAppToPersonPage;\nvar UsAppToPersonInstance;\nvar UsAppToPersonContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n/* jshint ignore:end */\nUsAppToPersonList = function UsAppToPersonList(version, messagingServiceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function usAppToPerson\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n  /* jshint ignore:end */\n  function UsAppToPersonListInstance(sid) {\n    return UsAppToPersonListInstance.get(sid);\n  }\n\n  UsAppToPersonListInstance._version = version;\n  // Path Solution\n  UsAppToPersonListInstance._solution = {messagingServiceSid: messagingServiceSid};\n  UsAppToPersonListInstance._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p`;\n  /* jshint ignore:start */\n  /**\n   * create a UsAppToPersonInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.brandRegistrationSid - A2P Brand Registration SID\n   * @param {string} opts.description -\n   *          A short description of what this SMS campaign does\n   * @param {string|list} opts.messageSamples - Message samples\n   * @param {string} opts.usAppToPersonUsecase - A2P Campaign Use Case.\n   * @param {boolean} opts.hasEmbeddedLinks -\n   *          Indicates that this SMS campaign will send messages that contain links\n   * @param {boolean} opts.hasEmbeddedPhone -\n   *          Indicates that this SMS campaign will send messages that contain phone numbers\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.brandRegistrationSid)) {\n      throw new Error('Required parameter \"opts.brandRegistrationSid\" missing.');\n    }\n    if (_.isUndefined(opts.description)) {\n      throw new Error('Required parameter \"opts.description\" missing.');\n    }\n    if (_.isUndefined(opts.messageSamples)) {\n      throw new Error('Required parameter \"opts.messageSamples\" missing.');\n    }\n    if (_.isUndefined(opts.usAppToPersonUsecase)) {\n      throw new Error('Required parameter \"opts.usAppToPersonUsecase\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedLinks)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedLinks\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedPhone)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedPhone\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid'),\n      'Description': _.get(opts, 'description'),\n      'MessageSamples': serialize.map(_.get(opts, 'messageSamples'), function(e) { return e; }),\n      'UsAppToPersonUsecase': _.get(opts, 'usAppToPersonUsecase'),\n      'HasEmbeddedLinks': serialize.bool(_.get(opts, 'hasEmbeddedLinks')),\n      'HasEmbeddedPhone': serialize.bool(_.get(opts, 'hasEmbeddedPhone'))\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonInstance(\n        this._version,\n        payload,\n        this._solution.messagingServiceSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams UsAppToPersonInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists UsAppToPersonInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of UsAppToPersonInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a us_app_to_person\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {string} sid -\n   *          The SID that identifies the US A2P Compliance resource to fetch\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.get = function get(sid) {\n    return new UsAppToPersonContext(this._version, this._solution.messagingServiceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsAppToPersonListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsAppToPersonListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonSolution} solution - Path solution\n *\n * @returns UsAppToPersonPage\n */\n/* jshint ignore:end */\nUsAppToPersonPage = function UsAppToPersonPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsAppToPersonPage.prototype, Page.prototype);\nUsAppToPersonPage.prototype.constructor = UsAppToPersonPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsAppToPersonInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @param {UsAppToPersonPayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance\n *\n * @property {string} sid -\n *          The unique string that identifies a US A2P Compliance resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} brandRegistrationSid - A2P Brand Registration SID\n * @property {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @property {string} description -\n *          A short description of what this SMS campaign does\n * @property {string} messageSamples - Message samples\n * @property {string} usAppToPersonUsecase - A2P Campaign Use Case.\n * @property {boolean} hasEmbeddedLinks -\n *          Indicate that this SMS campaign will send messages that contain links\n * @property {boolean} hasEmbeddedPhone -\n *          Indicates that this SMS campaign will send messages that contain phone numbers\n * @property {string} campaignStatus - Campaign status\n * @property {string} campaignId - The Campaign Registry (TCR) Campaign ID.\n * @property {boolean} isExternallyRegistered -\n *          Indicates whether the campaign was registered externally or not\n * @property {object} rateLimits -\n *          Rate limit and/or classification set by each carrier\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the US App to Person resource\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonPayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n/* jshint ignore:end */\nUsAppToPersonInstance = function UsAppToPersonInstance(version, payload,\n                                                        messagingServiceSid,\n                                                        sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.brandRegistrationSid = payload.brand_registration_sid; // jshint ignore:line\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n  this.description = payload.description; // jshint ignore:line\n  this.messageSamples = payload.message_samples; // jshint ignore:line\n  this.usAppToPersonUsecase = payload.us_app_to_person_usecase; // jshint ignore:line\n  this.hasEmbeddedLinks = payload.has_embedded_links; // jshint ignore:line\n  this.hasEmbeddedPhone = payload.has_embedded_phone; // jshint ignore:line\n  this.campaignStatus = payload.campaign_status; // jshint ignore:line\n  this.campaignId = payload.campaign_id; // jshint ignore:line\n  this.isExternallyRegistered = payload.is_externally_registered; // jshint ignore:line\n  this.rateLimits = payload.rate_limits; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {messagingServiceSid: messagingServiceSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(UsAppToPersonInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new UsAppToPersonContext(\n          this._version,\n          this._solution.messagingServiceSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service to fetch the resource from\n * @param {sid} sid -\n *          The SID that identifies the US A2P Compliance resource to fetch\n */\n/* jshint ignore:end */\nUsAppToPersonContext = function UsAppToPersonContext(version,\n                                                      messagingServiceSid, sid)\n                                                      {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {messagingServiceSid: messagingServiceSid, sid: sid, };\n  this._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * remove a UsAppToPersonInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UsAppToPersonInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new UsAppToPersonInstance(\n      this._version,\n      payload,\n      this._solution.messagingServiceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUsAppToPersonContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsAppToPersonList: UsAppToPersonList,\n  UsAppToPersonPage: UsAppToPersonPage,\n  UsAppToPersonInstance: UsAppToPersonInstance,\n  UsAppToPersonContext: UsAppToPersonContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}