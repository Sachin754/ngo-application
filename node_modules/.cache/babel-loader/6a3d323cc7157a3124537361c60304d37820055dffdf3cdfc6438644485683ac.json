{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserDefinedMessageSubscriptionListInstance = exports.UserDefinedMessageSubscriptionInstance = exports.UserDefinedMessageSubscriptionContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass UserDefinedMessageSubscriptionContextImpl {\n  constructor(_version, accountSid, callSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(accountSid)) {\n      throw new Error(\"Parameter 'accountSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(callSid)) {\n      throw new Error(\"Parameter 'callSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      accountSid,\n      callSid,\n      sid\n    };\n    this._uri = `/Accounts/${accountSid}/Calls/${callSid}/UserDefinedMessageSubscriptions/${sid}.json`;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UserDefinedMessageSubscriptionContextImpl = UserDefinedMessageSubscriptionContextImpl;\nclass UserDefinedMessageSubscriptionInstance {\n  constructor(_version, payload, accountSid, callSid, sid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.callSid = payload.call_sid;\n    this.sid = payload.sid;\n    this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n    this.uri = payload.uri;\n    this._solution = {\n      accountSid,\n      callSid,\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new UserDefinedMessageSubscriptionContextImpl(this._version, this._solution.accountSid, this._solution.callSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a UserDefinedMessageSubscriptionInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      callSid: this.callSid,\n      sid: this.sid,\n      dateCreated: this.dateCreated,\n      uri: this.uri\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UserDefinedMessageSubscriptionInstance = UserDefinedMessageSubscriptionInstance;\nfunction UserDefinedMessageSubscriptionListInstance(version, accountSid, callSid) {\n  if (!(0, utility_1.isValidPathParam)(accountSid)) {\n    throw new Error(\"Parameter 'accountSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(callSid)) {\n    throw new Error(\"Parameter 'callSid' is not valid.\");\n  }\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new UserDefinedMessageSubscriptionContextImpl(version, accountSid, callSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    accountSid,\n    callSid\n  };\n  instance._uri = `/Accounts/${accountSid}/Calls/${callSid}/UserDefinedMessageSubscriptions.json`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"callback\"] === null || params[\"callback\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['callback']\\\" missing.\");\n    }\n    let data = {};\n    data[\"Callback\"] = params[\"callback\"];\n    if (params[\"idempotencyKey\"] !== undefined) data[\"IdempotencyKey\"] = params[\"idempotencyKey\"];\n    if (params[\"method\"] !== undefined) data[\"Method\"] = params[\"method\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new UserDefinedMessageSubscriptionInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.callSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.UserDefinedMessageSubscriptionListInstance = UserDefinedMessageSubscriptionListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","UserDefinedMessageSubscriptionListInstance","UserDefinedMessageSubscriptionInstance","UserDefinedMessageSubscriptionContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","accountSid","callSid","sid","isValidPathParam","Error","_solution","_uri","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","toJSON","inspect","custom","_depth","options","payload","account_sid","call_sid","dateCreated","rfc2822DateTime","date_created","_proxy","_context","version","get","create","params","undefined","data","headers","then","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/api/v2010/account/call/userDefinedMessageSubscription.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserDefinedMessageSubscriptionListInstance = exports.UserDefinedMessageSubscriptionInstance = exports.UserDefinedMessageSubscriptionContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass UserDefinedMessageSubscriptionContextImpl {\n    constructor(_version, accountSid, callSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(accountSid)) {\n            throw new Error(\"Parameter 'accountSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(callSid)) {\n            throw new Error(\"Parameter 'callSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { accountSid, callSid, sid };\n        this._uri = `/Accounts/${accountSid}/Calls/${callSid}/UserDefinedMessageSubscriptions/${sid}.json`;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UserDefinedMessageSubscriptionContextImpl = UserDefinedMessageSubscriptionContextImpl;\nclass UserDefinedMessageSubscriptionInstance {\n    constructor(_version, payload, accountSid, callSid, sid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.callSid = payload.call_sid;\n        this.sid = payload.sid;\n        this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n        this.uri = payload.uri;\n        this._solution = { accountSid, callSid, sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new UserDefinedMessageSubscriptionContextImpl(this._version, this._solution.accountSid, this._solution.callSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a UserDefinedMessageSubscriptionInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            callSid: this.callSid,\n            sid: this.sid,\n            dateCreated: this.dateCreated,\n            uri: this.uri,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UserDefinedMessageSubscriptionInstance = UserDefinedMessageSubscriptionInstance;\nfunction UserDefinedMessageSubscriptionListInstance(version, accountSid, callSid) {\n    if (!(0, utility_1.isValidPathParam)(accountSid)) {\n        throw new Error(\"Parameter 'accountSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(callSid)) {\n        throw new Error(\"Parameter 'callSid' is not valid.\");\n    }\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new UserDefinedMessageSubscriptionContextImpl(version, accountSid, callSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { accountSid, callSid };\n    instance._uri = `/Accounts/${accountSid}/Calls/${callSid}/UserDefinedMessageSubscriptions.json`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"callback\"] === null || params[\"callback\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['callback']\\\" missing.\");\n        }\n        let data = {};\n        data[\"Callback\"] = params[\"callback\"];\n        if (params[\"idempotencyKey\"] !== undefined)\n            data[\"IdempotencyKey\"] = params[\"idempotencyKey\"];\n        if (params[\"method\"] !== undefined)\n            data[\"Method\"] = params[\"method\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new UserDefinedMessageSubscriptionInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.callSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.UserDefinedMessageSubscriptionListInstance = UserDefinedMessageSubscriptionListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}