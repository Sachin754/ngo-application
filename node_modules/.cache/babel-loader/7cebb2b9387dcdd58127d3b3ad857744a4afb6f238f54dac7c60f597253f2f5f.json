{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst xmlbuilder_1 = __importDefault(require(\"xmlbuilder\"));\n/* jshint ignore:start */\n/**\n * Parent TwiML object\n */\n/* jshint ignore:end */\nclass TwiML {\n  constructor() {\n    this._propertyName = \"\";\n    this.response = xmlbuilder_1.default.create(\"Response\", {\n      stringify: {\n        attValue: function (value) {\n          if (Array.isArray(value)) {\n            value = value.join(\" \");\n          }\n          return this.attEscape?.(\"\" + value || \"\") || \"\";\n        }\n      }\n    }).dec(\"1.0\", \"UTF-8\");\n  }\n  /* jshint ignore:start */\n  /**\n   * Because child elements have properties named after their class names, we need\n   * to translate that when we want to access that at the parent prototype level.\n   * So this will translate something like Say to 'say' and VoiceResponse to\n   * 'response'.\n   */\n  /* jshint ignore:end */\n  _getXml() {\n    return this[this._propertyName];\n  }\n  /* jshint ignore:start */\n  /**\n   * Convert to TwiML\n   *\n   * @returns TwiML XML\n   */\n  /* jshint ignore:end */\n  toString() {\n    return this._getXml().end();\n  }\n  /* jshint ignore:start */\n  /**\n   * Add text under the TwiML node\n   *\n   * @param {string} content\n   */\n  /* jshint ignore:end */\n  addText(content) {\n    this._getXml().txt(content);\n  }\n  /* jshint ignore:start */\n  /**\n   * Add an arbitrary tag as a child.\n   *\n   * @param {string} content\n   */\n  /* jshint ignore:end */\n  addChild(tagName, attributes) {\n    return new GenericNode(this._getXml().ele(tagName, attributes));\n  }\n}\nexports.default = TwiML;\n/* jshint ignore:start */\n/**\n * Generic node\n */\n/* jshint ignore:end */\nclass GenericNode extends TwiML {\n  // must match variable name for _getPropertyName\n  constructor(node) {\n    super();\n    this.node = node;\n    this._propertyName = \"node\";\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","xmlbuilder_1","require","TwiML","constructor","_propertyName","response","default","create","stringify","attValue","Array","isArray","join","attEscape","dec","_getXml","toString","end","addText","content","txt","addChild","tagName","attributes","GenericNode","ele","node"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/twiml/TwiML.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xmlbuilder_1 = __importDefault(require(\"xmlbuilder\"));\n/* jshint ignore:start */\n/**\n * Parent TwiML object\n */\n/* jshint ignore:end */\nclass TwiML {\n    constructor() {\n        this._propertyName = \"\";\n        this.response = xmlbuilder_1.default\n            .create(\"Response\", {\n            stringify: {\n                attValue: function (value) {\n                    if (Array.isArray(value)) {\n                        value = value.join(\" \");\n                    }\n                    return this.attEscape?.(\"\" + value || \"\") || \"\";\n                },\n            },\n        })\n            .dec(\"1.0\", \"UTF-8\");\n    }\n    /* jshint ignore:start */\n    /**\n     * Because child elements have properties named after their class names, we need\n     * to translate that when we want to access that at the parent prototype level.\n     * So this will translate something like Say to 'say' and VoiceResponse to\n     * 'response'.\n     */\n    /* jshint ignore:end */\n    _getXml() {\n        return this[this._propertyName];\n    }\n    /* jshint ignore:start */\n    /**\n     * Convert to TwiML\n     *\n     * @returns TwiML XML\n     */\n    /* jshint ignore:end */\n    toString() {\n        return this._getXml().end();\n    }\n    /* jshint ignore:start */\n    /**\n     * Add text under the TwiML node\n     *\n     * @param {string} content\n     */\n    /* jshint ignore:end */\n    addText(content) {\n        this._getXml().txt(content);\n    }\n    /* jshint ignore:start */\n    /**\n     * Add an arbitrary tag as a child.\n     *\n     * @param {string} content\n     */\n    /* jshint ignore:end */\n    addChild(tagName, attributes) {\n        return new GenericNode(this._getXml().ele(tagName, attributes));\n    }\n}\nexports.default = TwiML;\n/* jshint ignore:start */\n/**\n * Generic node\n */\n/* jshint ignore:end */\nclass GenericNode extends TwiML {\n    // must match variable name for _getPropertyName\n    constructor(node) {\n        super();\n        this.node = node;\n        this._propertyName = \"node\";\n    }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,YAAY,GAAGP,eAAe,CAACQ,OAAO,CAAC,YAAY,CAAC,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,CAAC;EACRC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,QAAQ,GAAGL,YAAY,CAACM,OAAO,CAC/BC,MAAM,CAAC,UAAU,EAAE;MACpBC,SAAS,EAAE;QACPC,QAAQ,EAAE,SAAAA,CAAUV,KAAK,EAAE;UACvB,IAAIW,KAAK,CAACC,OAAO,CAACZ,KAAK,CAAC,EAAE;YACtBA,KAAK,GAAGA,KAAK,CAACa,IAAI,CAAC,GAAG,CAAC;UAC3B;UACA,OAAO,IAAI,CAACC,SAAS,GAAG,EAAE,GAAGd,KAAK,IAAI,EAAE,CAAC,IAAI,EAAE;QACnD;MACJ;IACJ,CAAC,CAAC,CACGe,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC;EAC5B;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACAC,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAAC,IAAI,CAACX,aAAa,CAAC;EACnC;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACAY,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACD,OAAO,CAAC,CAAC,CAACE,GAAG,CAAC,CAAC;EAC/B;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACAC,OAAOA,CAACC,OAAO,EAAE;IACb,IAAI,CAACJ,OAAO,CAAC,CAAC,CAACK,GAAG,CAACD,OAAO,CAAC;EAC/B;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACAE,QAAQA,CAACC,OAAO,EAAEC,UAAU,EAAE;IAC1B,OAAO,IAAIC,WAAW,CAAC,IAAI,CAACT,OAAO,CAAC,CAAC,CAACU,GAAG,CAACH,OAAO,EAAEC,UAAU,CAAC,CAAC;EACnE;AACJ;AACAzB,OAAO,CAACQ,OAAO,GAAGJ,KAAK;AACvB;AACA;AACA;AACA;AACA;AACA,MAAMsB,WAAW,SAAStB,KAAK,CAAC;EAC5B;EACAC,WAAWA,CAACuB,IAAI,EAAE;IACd,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACtB,aAAa,GAAG,MAAM;EAC/B;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}