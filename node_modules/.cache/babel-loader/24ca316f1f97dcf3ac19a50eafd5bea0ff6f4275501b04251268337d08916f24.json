{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar AssistantFallbackActionsList = require('./assistant/assistantFallbackActions').AssistantFallbackActionsList;\nvar AssistantInitiationActionsList = require('./assistant/assistantInitiationActions').AssistantInitiationActionsList;\nvar DialogueList = require('./assistant/dialogue').DialogueList;\nvar FieldTypeList = require('./assistant/fieldType').FieldTypeList;\nvar ModelBuildList = require('./assistant/modelBuild').ModelBuildList;\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar QueryList = require('./assistant/query').QueryList;\nvar StyleSheetList = require('./assistant/styleSheet').StyleSheetList;\nvar TaskList = require('./assistant/task').TaskList;\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar AssistantList;\nvar AssistantPage;\nvar AssistantInstance;\nvar AssistantContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n */\n/* jshint ignore:end */\nAssistantList = function AssistantList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function assistants\n   * @memberof Twilio.Preview.Understand#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext}\n   */\n  /* jshint ignore:end */\n  function AssistantListInstance(sid) {\n    return AssistantListInstance.get(sid);\n  }\n  AssistantListInstance._version = version;\n  // Path Solution\n  AssistantListInstance._solution = {};\n  AssistantListInstance._uri = `/Assistants`;\n  /* jshint ignore:start */\n  /**\n   * Streams AssistantInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AssistantInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AssistantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AssistantPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AssistantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AssistantPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a AssistantInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n   * @param {boolean} [opts.logQueries] -\n   *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.\n   * @param {string} [opts.uniqueName] -\n   *          A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.\n   * @param {string} [opts.callbackUrl] -\n   *          A user-provided URL to send event callbacks to.\n   * @param {string} [opts.callbackEvents] -\n   *          Space-separated list of callback events that will trigger callbacks.\n   * @param {object} [opts.fallbackActions] -\n   *          The JSON actions to be executed when the user's input is not recognized as matching any Task.\n   * @param {object} [opts.initiationActions] -\n   *          The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.\n   * @param {object} [opts.styleSheet] -\n   *          The JSON object that holds the style sheet for the assistant\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AssistantInstance\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'LogQueries': serialize.bool(_.get(opts, 'logQueries')),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'CallbackUrl': _.get(opts, 'callbackUrl'),\n      'CallbackEvents': _.get(opts, 'callbackEvents'),\n      'FallbackActions': serialize.object(_.get(opts, 'fallbackActions')),\n      'InitiationActions': serialize.object(_.get(opts, 'initiationActions')),\n      'StyleSheet': serialize.object(_.get(opts, 'styleSheet'))\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AssistantInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a assistant\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {string} sid -\n   *          A 34 character string that uniquely identifies this resource.\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext}\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.get = function get(sid) {\n    return new AssistantContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  AssistantListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return AssistantListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AssistantSolution} solution - Path solution\n *\n * @returns AssistantPage\n */\n/* jshint ignore:end */\nAssistantPage = function AssistantPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(AssistantPage.prototype, Page.prototype);\nAssistantPage.prototype.constructor = AssistantPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AssistantInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantPage#\n *\n * @param {AssistantPayload} payload - Payload response from the API\n *\n * @returns AssistantInstance\n */\n/* jshint ignore:end */\nAssistantPage.prototype.getInstance = function getInstance(payload) {\n  return new AssistantInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAssistantPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAssistantPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Assistant.\n * @property {Date} dateCreated - The date that this resource was created\n * @property {Date} dateUpdated - The date that this resource was last updated\n * @property {string} friendlyName -\n *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n * @property {string} latestModelBuildSid -\n *          The unique ID (Sid) of the latest model build. Null if no model has been built.\n * @property {string} links - The links\n * @property {boolean} logQueries -\n *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter.\n * @property {string} sid -\n *          A 34 character string that uniquely identifies this resource.\n * @property {string} uniqueName -\n *          A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path. Unique up to 64 characters long.\n * @property {string} url - The url\n * @property {string} callbackUrl - A user-provided URL to send event callbacks to.\n * @property {string} callbackEvents -\n *          Space-separated list of callback events that will trigger callbacks.\n *\n * @param {Understand} version - Version of the resource\n * @param {AssistantPayload} payload - The instance payload\n * @param {sid_like} sid -\n *          A 34 character string that uniquely identifies this resource.\n */\n/* jshint ignore:end */\nAssistantInstance = function AssistantInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.latestModelBuildSid = payload.latest_model_build_sid; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.logQueries = payload.log_queries; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.callbackUrl = payload.callback_url; // jshint ignore:line\n  this.callbackEvents = payload.callback_events; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(AssistantInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new AssistantContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AssistantInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AssistantInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n * @param {boolean} [opts.logQueries] -\n *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.\n * @param {string} [opts.uniqueName] -\n *          A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.\n * @param {string} [opts.callbackUrl] -\n *          A user-provided URL to send event callbacks to.\n * @param {string} [opts.callbackEvents] -\n *          Space-separated list of callback events that will trigger callbacks.\n * @param {object} [opts.fallbackActions] -\n *          The JSON actions to be executed when the user's input is not recognized as matching any Task.\n * @param {object} [opts.initiationActions] -\n *          The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.\n * @param {object} [opts.styleSheet] -\n *          The JSON object that holds the style sheet for the assistant\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a AssistantInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the fieldTypes\n *\n * @function fieldTypes\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.FieldTypeList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.fieldTypes = function fieldTypes() {\n  return this._proxy.fieldTypes;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tasks\n *\n * @function tasks\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.TaskList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.tasks = function tasks() {\n  return this._proxy.tasks;\n};\n\n/* jshint ignore:start */\n/**\n * Access the modelBuilds\n *\n * @function modelBuilds\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.ModelBuildList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.modelBuilds = function modelBuilds() {\n  return this._proxy.modelBuilds;\n};\n\n/* jshint ignore:start */\n/**\n * Access the queries\n *\n * @function queries\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.QueryList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.queries = function queries() {\n  return this._proxy.queries;\n};\n\n/* jshint ignore:start */\n/**\n * Access the assistantFallbackActions\n *\n * @function assistantFallbackActions\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.AssistantFallbackActionsList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.assistantFallbackActions = function assistantFallbackActions() {\n  return this._proxy.assistantFallbackActions;\n};\n\n/* jshint ignore:start */\n/**\n * Access the assistantInitiationActions\n *\n * @function assistantInitiationActions\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.AssistantInitiationActionsList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.assistantInitiationActions = function assistantInitiationActions() {\n  return this._proxy.assistantInitiationActions;\n};\n\n/* jshint ignore:start */\n/**\n * Access the dialogues\n *\n * @function dialogues\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.DialogueList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.dialogues = function dialogues() {\n  return this._proxy.dialogues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the styleSheet\n *\n * @function styleSheet\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.StyleSheetList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.styleSheet = function styleSheet() {\n  return this._proxy.styleSheet;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAssistantInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext\n *\n * @property {Twilio.Preview.Understand.AssistantContext.FieldTypeList} fieldTypes -\n *          fieldTypes resource\n * @property {Twilio.Preview.Understand.AssistantContext.TaskList} tasks -\n *          tasks resource\n * @property {Twilio.Preview.Understand.AssistantContext.ModelBuildList} modelBuilds -\n *          modelBuilds resource\n * @property {Twilio.Preview.Understand.AssistantContext.QueryList} queries -\n *          queries resource\n * @property {Twilio.Preview.Understand.AssistantContext.AssistantFallbackActionsList} assistantFallbackActions -\n *          assistantFallbackActions resource\n * @property {Twilio.Preview.Understand.AssistantContext.AssistantInitiationActionsList} assistantInitiationActions -\n *          assistantInitiationActions resource\n * @property {Twilio.Preview.Understand.AssistantContext.DialogueList} dialogues -\n *          dialogues resource\n * @property {Twilio.Preview.Understand.AssistantContext.StyleSheetList} styleSheet -\n *          styleSheet resource\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} sid -\n *          A 34 character string that uniquely identifies this resource.\n */\n/* jshint ignore:end */\nAssistantContext = function AssistantContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Assistants/${sid}`;\n\n  // Dependents\n  this._fieldTypes = undefined;\n  this._tasks = undefined;\n  this._modelBuilds = undefined;\n  this._queries = undefined;\n  this._assistantFallbackActions = undefined;\n  this._assistantInitiationActions = undefined;\n  this._dialogues = undefined;\n  this._styleSheet = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AssistantInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AssistantInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AssistantInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n * @param {boolean} [opts.logQueries] -\n *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.\n * @param {string} [opts.uniqueName] -\n *          A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.\n * @param {string} [opts.callbackUrl] -\n *          A user-provided URL to send event callbacks to.\n * @param {string} [opts.callbackEvents] -\n *          Space-separated list of callback events that will trigger callbacks.\n * @param {object} [opts.fallbackActions] -\n *          The JSON actions to be executed when the user's input is not recognized as matching any Task.\n * @param {object} [opts.initiationActions] -\n *          The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.\n * @param {object} [opts.styleSheet] -\n *          The JSON object that holds the style sheet for the assistant\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'LogQueries': serialize.bool(_.get(opts, 'logQueries')),\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'CallbackUrl': _.get(opts, 'callbackUrl'),\n    'CallbackEvents': _.get(opts, 'callbackEvents'),\n    'FallbackActions': serialize.object(_.get(opts, 'fallbackActions')),\n    'InitiationActions': serialize.object(_.get(opts, 'initiationActions')),\n    'StyleSheet': serialize.object(_.get(opts, 'styleSheet'))\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AssistantInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a AssistantInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(AssistantContext.prototype, 'fieldTypes', {\n  get: function () {\n    if (!this._fieldTypes) {\n      this._fieldTypes = new FieldTypeList(this._version, this._solution.sid);\n    }\n    return this._fieldTypes;\n  }\n});\nObject.defineProperty(AssistantContext.prototype, 'tasks', {\n  get: function () {\n    if (!this._tasks) {\n      this._tasks = new TaskList(this._version, this._solution.sid);\n    }\n    return this._tasks;\n  }\n});\nObject.defineProperty(AssistantContext.prototype, 'modelBuilds', {\n  get: function () {\n    if (!this._modelBuilds) {\n      this._modelBuilds = new ModelBuildList(this._version, this._solution.sid);\n    }\n    return this._modelBuilds;\n  }\n});\nObject.defineProperty(AssistantContext.prototype, 'queries', {\n  get: function () {\n    if (!this._queries) {\n      this._queries = new QueryList(this._version, this._solution.sid);\n    }\n    return this._queries;\n  }\n});\nObject.defineProperty(AssistantContext.prototype, 'assistantFallbackActions', {\n  get: function () {\n    if (!this._assistantFallbackActions) {\n      this._assistantFallbackActions = new AssistantFallbackActionsList(this._version, this._solution.sid);\n    }\n    return this._assistantFallbackActions;\n  }\n});\nObject.defineProperty(AssistantContext.prototype, 'assistantInitiationActions', {\n  get: function () {\n    if (!this._assistantInitiationActions) {\n      this._assistantInitiationActions = new AssistantInitiationActionsList(this._version, this._solution.sid);\n    }\n    return this._assistantInitiationActions;\n  }\n});\nObject.defineProperty(AssistantContext.prototype, 'dialogues', {\n  get: function () {\n    if (!this._dialogues) {\n      this._dialogues = new DialogueList(this._version, this._solution.sid);\n    }\n    return this._dialogues;\n  }\n});\nObject.defineProperty(AssistantContext.prototype, 'styleSheet', {\n  get: function () {\n    if (!this._styleSheet) {\n      this._styleSheet = new StyleSheetList(this._version, this._solution.sid);\n    }\n    return this._styleSheet;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAssistantContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nAssistantContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  AssistantList: AssistantList,\n  AssistantPage: AssistantPage,\n  AssistantInstance: AssistantInstance,\n  AssistantContext: AssistantContext\n};","map":{"version":3,"names":["Q","require","_","util","AssistantFallbackActionsList","AssistantInitiationActionsList","DialogueList","FieldTypeList","ModelBuildList","Page","QueryList","StyleSheetList","TaskList","deserialize","serialize","values","AssistantList","AssistantPage","AssistantInstance","AssistantContext","version","AssistantListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","bool","object","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","latestModelBuildSid","latest_model_build_sid","links","logQueries","log_queries","uniqueName","unique_name","url","callbackUrl","callback_url","callbackEvents","callback_events","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","fieldTypes","tasks","modelBuilds","queries","assistantFallbackActions","assistantInitiationActions","dialogues","styleSheet","_fieldTypes","_tasks","_modelBuilds","_queries","_assistantFallbackActions","_assistantInitiationActions","_dialogues","_styleSheet","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/preview/understand/assistant.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar AssistantFallbackActionsList = require(\n    './assistant/assistantFallbackActions').AssistantFallbackActionsList;\nvar AssistantInitiationActionsList = require(\n    './assistant/assistantInitiationActions').AssistantInitiationActionsList;\nvar DialogueList = require('./assistant/dialogue').DialogueList;\nvar FieldTypeList = require('./assistant/fieldType').FieldTypeList;\nvar ModelBuildList = require('./assistant/modelBuild').ModelBuildList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar QueryList = require('./assistant/query').QueryList;\nvar StyleSheetList = require('./assistant/styleSheet').StyleSheetList;\nvar TaskList = require('./assistant/task').TaskList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar AssistantList;\nvar AssistantPage;\nvar AssistantInstance;\nvar AssistantContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n */\n/* jshint ignore:end */\nAssistantList = function AssistantList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function assistants\n   * @memberof Twilio.Preview.Understand#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext}\n   */\n  /* jshint ignore:end */\n  function AssistantListInstance(sid) {\n    return AssistantListInstance.get(sid);\n  }\n\n  AssistantListInstance._version = version;\n  // Path Solution\n  AssistantListInstance._solution = {};\n  AssistantListInstance._uri = `/Assistants`;\n  /* jshint ignore:start */\n  /**\n   * Streams AssistantInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AssistantInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AssistantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AssistantPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AssistantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AssistantPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a AssistantInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n   * @param {boolean} [opts.logQueries] -\n   *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.\n   * @param {string} [opts.uniqueName] -\n   *          A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.\n   * @param {string} [opts.callbackUrl] -\n   *          A user-provided URL to send event callbacks to.\n   * @param {string} [opts.callbackEvents] -\n   *          Space-separated list of callback events that will trigger callbacks.\n   * @param {object} [opts.fallbackActions] -\n   *          The JSON actions to be executed when the user's input is not recognized as matching any Task.\n   * @param {object} [opts.initiationActions] -\n   *          The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.\n   * @param {object} [opts.styleSheet] -\n   *          The JSON object that holds the style sheet for the assistant\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AssistantInstance\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'LogQueries': serialize.bool(_.get(opts, 'logQueries')),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'CallbackUrl': _.get(opts, 'callbackUrl'),\n      'CallbackEvents': _.get(opts, 'callbackEvents'),\n      'FallbackActions': serialize.object(_.get(opts, 'fallbackActions')),\n      'InitiationActions': serialize.object(_.get(opts, 'initiationActions')),\n      'StyleSheet': serialize.object(_.get(opts, 'styleSheet'))\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AssistantInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a assistant\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @param {string} sid -\n   *          A 34 character string that uniquely identifies this resource.\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext}\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.get = function get(sid) {\n    return new AssistantContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AssistantListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AssistantListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AssistantListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AssistantSolution} solution - Path solution\n *\n * @returns AssistantPage\n */\n/* jshint ignore:end */\nAssistantPage = function AssistantPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AssistantPage.prototype, Page.prototype);\nAssistantPage.prototype.constructor = AssistantPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AssistantInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantPage#\n *\n * @param {AssistantPayload} payload - Payload response from the API\n *\n * @returns AssistantInstance\n */\n/* jshint ignore:end */\nAssistantPage.prototype.getInstance = function getInstance(payload) {\n  return new AssistantInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAssistantPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAssistantPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Assistant.\n * @property {Date} dateCreated - The date that this resource was created\n * @property {Date} dateUpdated - The date that this resource was last updated\n * @property {string} friendlyName -\n *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n * @property {string} latestModelBuildSid -\n *          The unique ID (Sid) of the latest model build. Null if no model has been built.\n * @property {string} links - The links\n * @property {boolean} logQueries -\n *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter.\n * @property {string} sid -\n *          A 34 character string that uniquely identifies this resource.\n * @property {string} uniqueName -\n *          A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path. Unique up to 64 characters long.\n * @property {string} url - The url\n * @property {string} callbackUrl - A user-provided URL to send event callbacks to.\n * @property {string} callbackEvents -\n *          Space-separated list of callback events that will trigger callbacks.\n *\n * @param {Understand} version - Version of the resource\n * @param {AssistantPayload} payload - The instance payload\n * @param {sid_like} sid -\n *          A 34 character string that uniquely identifies this resource.\n */\n/* jshint ignore:end */\nAssistantInstance = function AssistantInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.latestModelBuildSid = payload.latest_model_build_sid; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.logQueries = payload.log_queries; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.callbackUrl = payload.callback_url; // jshint ignore:line\n  this.callbackEvents = payload.callback_events; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(AssistantInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new AssistantContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AssistantInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AssistantInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n * @param {boolean} [opts.logQueries] -\n *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.\n * @param {string} [opts.uniqueName] -\n *          A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.\n * @param {string} [opts.callbackUrl] -\n *          A user-provided URL to send event callbacks to.\n * @param {string} [opts.callbackEvents] -\n *          Space-separated list of callback events that will trigger callbacks.\n * @param {object} [opts.fallbackActions] -\n *          The JSON actions to be executed when the user's input is not recognized as matching any Task.\n * @param {object} [opts.initiationActions] -\n *          The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.\n * @param {object} [opts.styleSheet] -\n *          The JSON object that holds the style sheet for the assistant\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a AssistantInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the fieldTypes\n *\n * @function fieldTypes\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.FieldTypeList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.fieldTypes = function fieldTypes() {\n  return this._proxy.fieldTypes;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tasks\n *\n * @function tasks\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.TaskList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.tasks = function tasks() {\n  return this._proxy.tasks;\n};\n\n/* jshint ignore:start */\n/**\n * Access the modelBuilds\n *\n * @function modelBuilds\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.ModelBuildList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.modelBuilds = function modelBuilds() {\n  return this._proxy.modelBuilds;\n};\n\n/* jshint ignore:start */\n/**\n * Access the queries\n *\n * @function queries\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.QueryList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.queries = function queries() {\n  return this._proxy.queries;\n};\n\n/* jshint ignore:start */\n/**\n * Access the assistantFallbackActions\n *\n * @function assistantFallbackActions\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.AssistantFallbackActionsList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.assistantFallbackActions = function\n    assistantFallbackActions() {\n  return this._proxy.assistantFallbackActions;\n};\n\n/* jshint ignore:start */\n/**\n * Access the assistantInitiationActions\n *\n * @function assistantInitiationActions\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.AssistantInitiationActionsList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.assistantInitiationActions = function\n    assistantInitiationActions() {\n  return this._proxy.assistantInitiationActions;\n};\n\n/* jshint ignore:start */\n/**\n * Access the dialogues\n *\n * @function dialogues\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.DialogueList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.dialogues = function dialogues() {\n  return this._proxy.dialogues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the styleSheet\n *\n * @function styleSheet\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns {Twilio.Preview.Understand.AssistantContext.StyleSheetList}\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.styleSheet = function styleSheet() {\n  return this._proxy.styleSheet;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAssistantInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAssistantInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AssistantContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext\n *\n * @property {Twilio.Preview.Understand.AssistantContext.FieldTypeList} fieldTypes -\n *          fieldTypes resource\n * @property {Twilio.Preview.Understand.AssistantContext.TaskList} tasks -\n *          tasks resource\n * @property {Twilio.Preview.Understand.AssistantContext.ModelBuildList} modelBuilds -\n *          modelBuilds resource\n * @property {Twilio.Preview.Understand.AssistantContext.QueryList} queries -\n *          queries resource\n * @property {Twilio.Preview.Understand.AssistantContext.AssistantFallbackActionsList} assistantFallbackActions -\n *          assistantFallbackActions resource\n * @property {Twilio.Preview.Understand.AssistantContext.AssistantInitiationActionsList} assistantInitiationActions -\n *          assistantInitiationActions resource\n * @property {Twilio.Preview.Understand.AssistantContext.DialogueList} dialogues -\n *          dialogues resource\n * @property {Twilio.Preview.Understand.AssistantContext.StyleSheetList} styleSheet -\n *          styleSheet resource\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} sid -\n *          A 34 character string that uniquely identifies this resource.\n */\n/* jshint ignore:end */\nAssistantContext = function AssistantContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Assistants/${sid}`;\n\n  // Dependents\n  this._fieldTypes = undefined;\n  this._tasks = undefined;\n  this._modelBuilds = undefined;\n  this._queries = undefined;\n  this._assistantFallbackActions = undefined;\n  this._assistantInitiationActions = undefined;\n  this._dialogues = undefined;\n  this._styleSheet = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AssistantInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AssistantInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AssistantInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A text description for the Assistant. It is non-unique and can up to 255 characters long.\n * @param {boolean} [opts.logQueries] -\n *          A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.\n * @param {string} [opts.uniqueName] -\n *          A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.\n * @param {string} [opts.callbackUrl] -\n *          A user-provided URL to send event callbacks to.\n * @param {string} [opts.callbackEvents] -\n *          Space-separated list of callback events that will trigger callbacks.\n * @param {object} [opts.fallbackActions] -\n *          The JSON actions to be executed when the user's input is not recognized as matching any Task.\n * @param {object} [opts.initiationActions] -\n *          The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.\n * @param {object} [opts.styleSheet] -\n *          The JSON object that holds the style sheet for the assistant\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'LogQueries': serialize.bool(_.get(opts, 'logQueries')),\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'CallbackUrl': _.get(opts, 'callbackUrl'),\n    'CallbackEvents': _.get(opts, 'callbackEvents'),\n    'FallbackActions': serialize.object(_.get(opts, 'fallbackActions')),\n    'InitiationActions': serialize.object(_.get(opts, 'initiationActions')),\n    'StyleSheet': serialize.object(_.get(opts, 'styleSheet'))\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AssistantInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a AssistantInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AssistantInstance\n */\n/* jshint ignore:end */\nAssistantContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(AssistantContext.prototype,\n  'fieldTypes', {\n    get: function() {\n      if (!this._fieldTypes) {\n        this._fieldTypes = new FieldTypeList(this._version, this._solution.sid);\n      }\n      return this._fieldTypes;\n    }\n});\n\nObject.defineProperty(AssistantContext.prototype,\n  'tasks', {\n    get: function() {\n      if (!this._tasks) {\n        this._tasks = new TaskList(this._version, this._solution.sid);\n      }\n      return this._tasks;\n    }\n});\n\nObject.defineProperty(AssistantContext.prototype,\n  'modelBuilds', {\n    get: function() {\n      if (!this._modelBuilds) {\n        this._modelBuilds = new ModelBuildList(this._version, this._solution.sid);\n      }\n      return this._modelBuilds;\n    }\n});\n\nObject.defineProperty(AssistantContext.prototype,\n  'queries', {\n    get: function() {\n      if (!this._queries) {\n        this._queries = new QueryList(this._version, this._solution.sid);\n      }\n      return this._queries;\n    }\n});\n\nObject.defineProperty(AssistantContext.prototype,\n  'assistantFallbackActions', {\n    get: function() {\n      if (!this._assistantFallbackActions) {\n        this._assistantFallbackActions = new AssistantFallbackActionsList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._assistantFallbackActions;\n    }\n});\n\nObject.defineProperty(AssistantContext.prototype,\n  'assistantInitiationActions', {\n    get: function() {\n      if (!this._assistantInitiationActions) {\n        this._assistantInitiationActions = new AssistantInitiationActionsList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._assistantInitiationActions;\n    }\n});\n\nObject.defineProperty(AssistantContext.prototype,\n  'dialogues', {\n    get: function() {\n      if (!this._dialogues) {\n        this._dialogues = new DialogueList(this._version, this._solution.sid);\n      }\n      return this._dialogues;\n    }\n});\n\nObject.defineProperty(AssistantContext.prototype,\n  'styleSheet', {\n    get: function() {\n      if (!this._styleSheet) {\n        this._styleSheet = new StyleSheetList(this._version, this._solution.sid);\n      }\n      return this._styleSheet;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAssistantContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAssistantContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AssistantList: AssistantList,\n  AssistantPage: AssistantPage,\n  AssistantInstance: AssistantInstance,\n  AssistantContext: AssistantContext\n};\n"],"mappings":"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J,MAAM,CAACI,KAAK;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5G,iBAAiB,CAACoE,SAAS,CAACyC,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG;EAC/D,OAAO,IAAI,CAACL,MAAM,CAACK,WAAW;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA7G,iBAAiB,CAACoE,SAAS,CAAC0C,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;EACvD,OAAO,IAAI,CAACN,MAAM,CAACM,OAAO;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9G,iBAAiB,CAACoE,SAAS,CAAC2C,wBAAwB,GAAG,SACnDA,wBAAwBA,CAAA,EAAG;EAC7B,OAAO,IAAI,CAACP,MAAM,CAACO,wBAAwB;AAC7C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA/G,iBAAiB,CAACoE,SAAS,CAAC4C,0BAA0B,GAAG,SACrDA,0BAA0BA,CAAA,EAAG;EAC/B,OAAO,IAAI,CAACR,MAAM,CAACQ,0BAA0B;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhH,iBAAiB,CAACoE,SAAS,CAAC6C,SAAS,GAAG,SAASA,SAASA,CAAA,EAAG;EAC3D,OAAO,IAAI,CAACT,MAAM,CAACS,SAAS;AAC9B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjH,iBAAiB,CAACoE,SAAS,CAAC8C,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EAC7D,OAAO,IAAI,CAACV,MAAM,CAACU,UAAU;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlH,iBAAiB,CAACoE,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACrD,IAAIY,KAAK,GAAG,CAAC,CAAC;EACdzF,CAAC,CAAC0F,M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"},"metadata":{},"sourceType":"script","externalDependencies":[]}