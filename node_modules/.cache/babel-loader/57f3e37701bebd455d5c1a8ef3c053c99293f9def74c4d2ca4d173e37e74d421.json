{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Insights\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationListInstance = exports.AnnotationInstance = exports.AnnotationContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass AnnotationContextImpl {\n  constructor(_version, callSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(callSid)) {\n      throw new Error(\"Parameter 'callSid' is not valid.\");\n    }\n    this._solution = {\n      callSid\n    };\n    this._uri = `/Voice/${callSid}/Annotation`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new AnnotationInstance(operationVersion, payload, instance._solution.callSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"answeredBy\"] !== undefined) data[\"AnsweredBy\"] = params[\"answeredBy\"];\n    if (params[\"connectivityIssue\"] !== undefined) data[\"ConnectivityIssue\"] = params[\"connectivityIssue\"];\n    if (params[\"qualityIssues\"] !== undefined) data[\"QualityIssues\"] = params[\"qualityIssues\"];\n    if (params[\"spam\"] !== undefined) data[\"Spam\"] = serialize.bool(params[\"spam\"]);\n    if (params[\"callScore\"] !== undefined) data[\"CallScore\"] = params[\"callScore\"];\n    if (params[\"comment\"] !== undefined) data[\"Comment\"] = params[\"comment\"];\n    if (params[\"incident\"] !== undefined) data[\"Incident\"] = params[\"incident\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new AnnotationInstance(operationVersion, payload, instance._solution.callSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AnnotationContextImpl = AnnotationContextImpl;\nclass AnnotationInstance {\n  constructor(_version, payload, callSid) {\n    this._version = _version;\n    this.callSid = payload.call_sid;\n    this.accountSid = payload.account_sid;\n    this.answeredBy = payload.answered_by;\n    this.connectivityIssue = payload.connectivity_issue;\n    this.qualityIssues = payload.quality_issues;\n    this.spam = payload.spam;\n    this.callScore = deserialize.integer(payload.call_score);\n    this.comment = payload.comment;\n    this.incident = payload.incident;\n    this.url = payload.url;\n    this._solution = {\n      callSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new AnnotationContextImpl(this._version, this._solution.callSid);\n    return this._context;\n  }\n  /**\n   * Fetch a AnnotationInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed AnnotationInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      callSid: this.callSid,\n      accountSid: this.accountSid,\n      answeredBy: this.answeredBy,\n      connectivityIssue: this.connectivityIssue,\n      qualityIssues: this.qualityIssues,\n      spam: this.spam,\n      callScore: this.callScore,\n      comment: this.comment,\n      incident: this.incident,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AnnotationInstance = AnnotationInstance;\nfunction AnnotationListInstance(version, callSid) {\n  if (!(0, utility_1.isValidPathParam)(callSid)) {\n    throw new Error(\"Parameter 'callSid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new AnnotationContextImpl(version, callSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    callSid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.AnnotationListInstance = AnnotationListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AnnotationListInstance","AnnotationInstance","AnnotationContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","callSid","isValidPathParam","Error","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","update","params","Function","data","undefined","bool","headers","toJSON","inspect","custom","_depth","options","call_sid","accountSid","account_sid","answeredBy","answered_by","connectivityIssue","connectivity_issue","qualityIssues","quality_issues","spam","callScore","integer","call_score","comment","incident","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/insights/v1/call/annotation.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Insights\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnnotationListInstance = exports.AnnotationInstance = exports.AnnotationContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass AnnotationContextImpl {\n    constructor(_version, callSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(callSid)) {\n            throw new Error(\"Parameter 'callSid' is not valid.\");\n        }\n        this._solution = { callSid };\n        this._uri = `/Voice/${callSid}/Annotation`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new AnnotationInstance(operationVersion, payload, instance._solution.callSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"answeredBy\"] !== undefined)\n            data[\"AnsweredBy\"] = params[\"answeredBy\"];\n        if (params[\"connectivityIssue\"] !== undefined)\n            data[\"ConnectivityIssue\"] = params[\"connectivityIssue\"];\n        if (params[\"qualityIssues\"] !== undefined)\n            data[\"QualityIssues\"] = params[\"qualityIssues\"];\n        if (params[\"spam\"] !== undefined)\n            data[\"Spam\"] = serialize.bool(params[\"spam\"]);\n        if (params[\"callScore\"] !== undefined)\n            data[\"CallScore\"] = params[\"callScore\"];\n        if (params[\"comment\"] !== undefined)\n            data[\"Comment\"] = params[\"comment\"];\n        if (params[\"incident\"] !== undefined)\n            data[\"Incident\"] = params[\"incident\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new AnnotationInstance(operationVersion, payload, instance._solution.callSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AnnotationContextImpl = AnnotationContextImpl;\nclass AnnotationInstance {\n    constructor(_version, payload, callSid) {\n        this._version = _version;\n        this.callSid = payload.call_sid;\n        this.accountSid = payload.account_sid;\n        this.answeredBy = payload.answered_by;\n        this.connectivityIssue = payload.connectivity_issue;\n        this.qualityIssues = payload.quality_issues;\n        this.spam = payload.spam;\n        this.callScore = deserialize.integer(payload.call_score);\n        this.comment = payload.comment;\n        this.incident = payload.incident;\n        this.url = payload.url;\n        this._solution = { callSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new AnnotationContextImpl(this._version, this._solution.callSid);\n        return this._context;\n    }\n    /**\n     * Fetch a AnnotationInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed AnnotationInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            callSid: this.callSid,\n            accountSid: this.accountSid,\n            answeredBy: this.answeredBy,\n            connectivityIssue: this.connectivityIssue,\n            qualityIssues: this.qualityIssues,\n            spam: this.spam,\n            callScore: this.callScore,\n            comment: this.comment,\n            incident: this.incident,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AnnotationInstance = AnnotationInstance;\nfunction AnnotationListInstance(version, callSid) {\n    if (!(0, utility_1.isValidPathParam)(callSid)) {\n        throw new Error(\"Parameter 'callSid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new AnnotationContextImpl(version, callSid);\n    };\n    instance._version = version;\n    instance._solution = { callSid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.AnnotationListInstance = AnnotationListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}