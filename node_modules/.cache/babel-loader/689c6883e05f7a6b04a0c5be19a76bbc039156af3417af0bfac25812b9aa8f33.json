{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trusthub\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrustProductsChannelEndpointAssignmentPage = exports.TrustProductsChannelEndpointAssignmentListInstance = exports.TrustProductsChannelEndpointAssignmentInstance = exports.TrustProductsChannelEndpointAssignmentContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../base/Page\"));\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass TrustProductsChannelEndpointAssignmentContextImpl {\n  constructor(_version, trustProductSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(trustProductSid)) {\n      throw new Error(\"Parameter 'trustProductSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      trustProductSid,\n      sid\n    };\n    this._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments/${sid}`;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new TrustProductsChannelEndpointAssignmentInstance(operationVersion, payload, instance._solution.trustProductSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrustProductsChannelEndpointAssignmentContextImpl = TrustProductsChannelEndpointAssignmentContextImpl;\nclass TrustProductsChannelEndpointAssignmentInstance {\n  constructor(_version, payload, trustProductSid, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.trustProductSid = payload.trust_product_sid;\n    this.accountSid = payload.account_sid;\n    this.channelEndpointType = payload.channel_endpoint_type;\n    this.channelEndpointSid = payload.channel_endpoint_sid;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.url = payload.url;\n    this._solution = {\n      trustProductSid,\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new TrustProductsChannelEndpointAssignmentContextImpl(this._version, this._solution.trustProductSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a TrustProductsChannelEndpointAssignmentInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a TrustProductsChannelEndpointAssignmentInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      trustProductSid: this.trustProductSid,\n      accountSid: this.accountSid,\n      channelEndpointType: this.channelEndpointType,\n      channelEndpointSid: this.channelEndpointSid,\n      dateCreated: this.dateCreated,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrustProductsChannelEndpointAssignmentInstance = TrustProductsChannelEndpointAssignmentInstance;\nfunction TrustProductsChannelEndpointAssignmentListInstance(version, trustProductSid) {\n  if (!(0, utility_1.isValidPathParam)(trustProductSid)) {\n    throw new Error(\"Parameter 'trustProductSid' is not valid.\");\n  }\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new TrustProductsChannelEndpointAssignmentContextImpl(version, trustProductSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    trustProductSid\n  };\n  instance._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"channelEndpointType\"] === null || params[\"channelEndpointType\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['channelEndpointType']\\\" missing.\");\n    }\n    if (params[\"channelEndpointSid\"] === null || params[\"channelEndpointSid\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['channelEndpointSid']\\\" missing.\");\n    }\n    let data = {};\n    data[\"ChannelEndpointType\"] = params[\"channelEndpointType\"];\n    data[\"ChannelEndpointSid\"] = params[\"channelEndpointSid\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrustProductsChannelEndpointAssignmentInstance(operationVersion, payload, instance._solution.trustProductSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"channelEndpointSid\"] !== undefined) data[\"ChannelEndpointSid\"] = params[\"channelEndpointSid\"];\n    if (params[\"channelEndpointSids\"] !== undefined) data[\"ChannelEndpointSids\"] = params[\"channelEndpointSids\"];\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrustProductsChannelEndpointAssignmentPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new TrustProductsChannelEndpointAssignmentPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.TrustProductsChannelEndpointAssignmentListInstance = TrustProductsChannelEndpointAssignmentListInstance;\nclass TrustProductsChannelEndpointAssignmentPage extends Page_1.default {\n  /**\n   * Initialize the TrustProductsChannelEndpointAssignmentPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of TrustProductsChannelEndpointAssignmentInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new TrustProductsChannelEndpointAssignmentInstance(this._version, payload, this._solution.trustProductSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrustProductsChannelEndpointAssignmentPage = TrustProductsChannelEndpointAssignmentPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","TrustProductsChannelEndpointAssignmentPage","TrustProductsChannelEndpointAssignmentListInstance","TrustProductsChannelEndpointAssignmentInstance","TrustProductsChannelEndpointAssignmentContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","constructor","_version","trustProductSid","sid","isValidPathParam","Error","_solution","_uri","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","toJSON","inspect","custom","_depth","options","trust_product_sid","accountSid","account_sid","channelEndpointType","channel_endpoint_type","channelEndpointSid","channel_endpoint_sid","dateCreated","iso8601DateTime","date_created","url","_proxy","_context","version","get","create","params","undefined","data","headers","page","Function","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/trusthub/v1/trustProducts/trustProductsChannelEndpointAssignment.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trusthub\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrustProductsChannelEndpointAssignmentPage = exports.TrustProductsChannelEndpointAssignmentListInstance = exports.TrustProductsChannelEndpointAssignmentInstance = exports.TrustProductsChannelEndpointAssignmentContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../base/Page\"));\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass TrustProductsChannelEndpointAssignmentContextImpl {\n    constructor(_version, trustProductSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(trustProductSid)) {\n            throw new Error(\"Parameter 'trustProductSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { trustProductSid, sid };\n        this._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments/${sid}`;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new TrustProductsChannelEndpointAssignmentInstance(operationVersion, payload, instance._solution.trustProductSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrustProductsChannelEndpointAssignmentContextImpl = TrustProductsChannelEndpointAssignmentContextImpl;\nclass TrustProductsChannelEndpointAssignmentInstance {\n    constructor(_version, payload, trustProductSid, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.trustProductSid = payload.trust_product_sid;\n        this.accountSid = payload.account_sid;\n        this.channelEndpointType = payload.channel_endpoint_type;\n        this.channelEndpointSid = payload.channel_endpoint_sid;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.url = payload.url;\n        this._solution = { trustProductSid, sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new TrustProductsChannelEndpointAssignmentContextImpl(this._version, this._solution.trustProductSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a TrustProductsChannelEndpointAssignmentInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a TrustProductsChannelEndpointAssignmentInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed TrustProductsChannelEndpointAssignmentInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            trustProductSid: this.trustProductSid,\n            accountSid: this.accountSid,\n            channelEndpointType: this.channelEndpointType,\n            channelEndpointSid: this.channelEndpointSid,\n            dateCreated: this.dateCreated,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrustProductsChannelEndpointAssignmentInstance = TrustProductsChannelEndpointAssignmentInstance;\nfunction TrustProductsChannelEndpointAssignmentListInstance(version, trustProductSid) {\n    if (!(0, utility_1.isValidPathParam)(trustProductSid)) {\n        throw new Error(\"Parameter 'trustProductSid' is not valid.\");\n    }\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new TrustProductsChannelEndpointAssignmentContextImpl(version, trustProductSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { trustProductSid };\n    instance._uri = `/TrustProducts/${trustProductSid}/ChannelEndpointAssignments`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"channelEndpointType\"] === null ||\n            params[\"channelEndpointType\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['channelEndpointType']\\\" missing.\");\n        }\n        if (params[\"channelEndpointSid\"] === null ||\n            params[\"channelEndpointSid\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['channelEndpointSid']\\\" missing.\");\n        }\n        let data = {};\n        data[\"ChannelEndpointType\"] = params[\"channelEndpointType\"];\n        data[\"ChannelEndpointSid\"] = params[\"channelEndpointSid\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrustProductsChannelEndpointAssignmentInstance(operationVersion, payload, instance._solution.trustProductSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"channelEndpointSid\"] !== undefined)\n            data[\"ChannelEndpointSid\"] = params[\"channelEndpointSid\"];\n        if (params[\"channelEndpointSids\"] !== undefined)\n            data[\"ChannelEndpointSids\"] = params[\"channelEndpointSids\"];\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrustProductsChannelEndpointAssignmentPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new TrustProductsChannelEndpointAssignmentPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.TrustProductsChannelEndpointAssignmentListInstance = TrustProductsChannelEndpointAssignmentListInstance;\nclass TrustProductsChannelEndpointAssignmentPage extends Page_1.default {\n    /**\n     * Initialize the TrustProductsChannelEndpointAssignmentPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of TrustProductsChannelEndpointAssignmentInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new TrustProductsChannelEndpointAssignmentInstance(this._version, payload, this._solution.trustProductSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrustProductsChannelEndpointAssignmentPage = TrustProductsChannelEndpointAssignmentPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}