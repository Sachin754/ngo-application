{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trusthub\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrustProductsPage = exports.TrustProductsListInstance = exports.TrustProductsInstance = exports.TrustProductsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst trustProductsChannelEndpointAssignment_1 = require(\"./trustProducts/trustProductsChannelEndpointAssignment\");\nconst trustProductsEntityAssignments_1 = require(\"./trustProducts/trustProductsEntityAssignments\");\nconst trustProductsEvaluations_1 = require(\"./trustProducts/trustProductsEvaluations\");\nclass TrustProductsContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/TrustProducts/${sid}`;\n  }\n  get trustProductsChannelEndpointAssignment() {\n    this._trustProductsChannelEndpointAssignment = this._trustProductsChannelEndpointAssignment || (0, trustProductsChannelEndpointAssignment_1.TrustProductsChannelEndpointAssignmentListInstance)(this._version, this._solution.sid);\n    return this._trustProductsChannelEndpointAssignment;\n  }\n  get trustProductsEntityAssignments() {\n    this._trustProductsEntityAssignments = this._trustProductsEntityAssignments || (0, trustProductsEntityAssignments_1.TrustProductsEntityAssignmentsListInstance)(this._version, this._solution.sid);\n    return this._trustProductsEntityAssignments;\n  }\n  get trustProductsEvaluations() {\n    this._trustProductsEvaluations = this._trustProductsEvaluations || (0, trustProductsEvaluations_1.TrustProductsEvaluationsListInstance)(this._version, this._solution.sid);\n    return this._trustProductsEvaluations;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new TrustProductsInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"status\"] !== undefined) data[\"Status\"] = params[\"status\"];\n    if (params[\"statusCallback\"] !== undefined) data[\"StatusCallback\"] = params[\"statusCallback\"];\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"email\"] !== undefined) data[\"Email\"] = params[\"email\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrustProductsInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrustProductsContextImpl = TrustProductsContextImpl;\nclass TrustProductsInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.policySid = payload.policy_sid;\n    this.friendlyName = payload.friendly_name;\n    this.status = payload.status;\n    this.validUntil = deserialize.iso8601DateTime(payload.valid_until);\n    this.email = payload.email;\n    this.statusCallback = payload.status_callback;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.url = payload.url;\n    this.links = payload.links;\n    this._solution = {\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new TrustProductsContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a TrustProductsInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a TrustProductsInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed TrustProductsInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Access the trustProductsChannelEndpointAssignment.\n   */\n  trustProductsChannelEndpointAssignment() {\n    return this._proxy.trustProductsChannelEndpointAssignment;\n  }\n  /**\n   * Access the trustProductsEntityAssignments.\n   */\n  trustProductsEntityAssignments() {\n    return this._proxy.trustProductsEntityAssignments;\n  }\n  /**\n   * Access the trustProductsEvaluations.\n   */\n  trustProductsEvaluations() {\n    return this._proxy.trustProductsEvaluations;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      policySid: this.policySid,\n      friendlyName: this.friendlyName,\n      status: this.status,\n      validUntil: this.validUntil,\n      email: this.email,\n      statusCallback: this.statusCallback,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      url: this.url,\n      links: this.links\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrustProductsInstance = TrustProductsInstance;\nfunction TrustProductsListInstance(version) {\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new TrustProductsContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/TrustProducts`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"friendlyName\"] === null || params[\"friendlyName\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n    }\n    if (params[\"email\"] === null || params[\"email\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['email']\\\" missing.\");\n    }\n    if (params[\"policySid\"] === null || params[\"policySid\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['policySid']\\\" missing.\");\n    }\n    let data = {};\n    data[\"FriendlyName\"] = params[\"friendlyName\"];\n    data[\"Email\"] = params[\"email\"];\n    data[\"PolicySid\"] = params[\"policySid\"];\n    if (params[\"statusCallback\"] !== undefined) data[\"StatusCallback\"] = params[\"statusCallback\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrustProductsInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"status\"] !== undefined) data[\"Status\"] = params[\"status\"];\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"policySid\"] !== undefined) data[\"PolicySid\"] = params[\"policySid\"];\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TrustProductsPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new TrustProductsPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.TrustProductsListInstance = TrustProductsListInstance;\nclass TrustProductsPage extends Page_1.default {\n  /**\n   * Initialize the TrustProductsPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of TrustProductsInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new TrustProductsInstance(this._version, payload);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TrustProductsPage = TrustProductsPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","TrustProductsPage","TrustProductsListInstance","TrustProductsInstance","TrustProductsContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","trustProductsChannelEndpointAssignment_1","trustProductsEntityAssignments_1","trustProductsEvaluations_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","trustProductsChannelEndpointAssignment","_trustProductsChannelEndpointAssignment","TrustProductsChannelEndpointAssignmentListInstance","trustProductsEntityAssignments","_trustProductsEntityAssignments","TrustProductsEntityAssignmentsListInstance","trustProductsEvaluations","_trustProductsEvaluations","TrustProductsEvaluationsListInstance","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","policySid","policy_sid","friendlyName","friendly_name","status","validUntil","iso8601DateTime","valid_until","email","statusCallback","status_callback","dateCreated","date_created","dateUpdated","date_updated","url","links","_proxy","_context","version","get","create","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/trusthub/v1/trustProducts.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Trusthub\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrustProductsPage = exports.TrustProductsListInstance = exports.TrustProductsInstance = exports.TrustProductsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst trustProductsChannelEndpointAssignment_1 = require(\"./trustProducts/trustProductsChannelEndpointAssignment\");\nconst trustProductsEntityAssignments_1 = require(\"./trustProducts/trustProductsEntityAssignments\");\nconst trustProductsEvaluations_1 = require(\"./trustProducts/trustProductsEvaluations\");\nclass TrustProductsContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/TrustProducts/${sid}`;\n    }\n    get trustProductsChannelEndpointAssignment() {\n        this._trustProductsChannelEndpointAssignment =\n            this._trustProductsChannelEndpointAssignment ||\n                (0, trustProductsChannelEndpointAssignment_1.TrustProductsChannelEndpointAssignmentListInstance)(this._version, this._solution.sid);\n        return this._trustProductsChannelEndpointAssignment;\n    }\n    get trustProductsEntityAssignments() {\n        this._trustProductsEntityAssignments =\n            this._trustProductsEntityAssignments ||\n                (0, trustProductsEntityAssignments_1.TrustProductsEntityAssignmentsListInstance)(this._version, this._solution.sid);\n        return this._trustProductsEntityAssignments;\n    }\n    get trustProductsEvaluations() {\n        this._trustProductsEvaluations =\n            this._trustProductsEvaluations ||\n                (0, trustProductsEvaluations_1.TrustProductsEvaluationsListInstance)(this._version, this._solution.sid);\n        return this._trustProductsEvaluations;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new TrustProductsInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"status\"] !== undefined)\n            data[\"Status\"] = params[\"status\"];\n        if (params[\"statusCallback\"] !== undefined)\n            data[\"StatusCallback\"] = params[\"statusCallback\"];\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"email\"] !== undefined)\n            data[\"Email\"] = params[\"email\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrustProductsInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrustProductsContextImpl = TrustProductsContextImpl;\nclass TrustProductsInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.policySid = payload.policy_sid;\n        this.friendlyName = payload.friendly_name;\n        this.status = payload.status;\n        this.validUntil = deserialize.iso8601DateTime(payload.valid_until);\n        this.email = payload.email;\n        this.statusCallback = payload.status_callback;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.url = payload.url;\n        this.links = payload.links;\n        this._solution = { sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new TrustProductsContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a TrustProductsInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a TrustProductsInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed TrustProductsInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Access the trustProductsChannelEndpointAssignment.\n     */\n    trustProductsChannelEndpointAssignment() {\n        return this._proxy.trustProductsChannelEndpointAssignment;\n    }\n    /**\n     * Access the trustProductsEntityAssignments.\n     */\n    trustProductsEntityAssignments() {\n        return this._proxy.trustProductsEntityAssignments;\n    }\n    /**\n     * Access the trustProductsEvaluations.\n     */\n    trustProductsEvaluations() {\n        return this._proxy.trustProductsEvaluations;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            policySid: this.policySid,\n            friendlyName: this.friendlyName,\n            status: this.status,\n            validUntil: this.validUntil,\n            email: this.email,\n            statusCallback: this.statusCallback,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            url: this.url,\n            links: this.links,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrustProductsInstance = TrustProductsInstance;\nfunction TrustProductsListInstance(version) {\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new TrustProductsContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/TrustProducts`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"friendlyName\"] === null ||\n            params[\"friendlyName\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n        }\n        if (params[\"email\"] === null || params[\"email\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['email']\\\" missing.\");\n        }\n        if (params[\"policySid\"] === null || params[\"policySid\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['policySid']\\\" missing.\");\n        }\n        let data = {};\n        data[\"FriendlyName\"] = params[\"friendlyName\"];\n        data[\"Email\"] = params[\"email\"];\n        data[\"PolicySid\"] = params[\"policySid\"];\n        if (params[\"statusCallback\"] !== undefined)\n            data[\"StatusCallback\"] = params[\"statusCallback\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrustProductsInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"status\"] !== undefined)\n            data[\"Status\"] = params[\"status\"];\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"policySid\"] !== undefined)\n            data[\"PolicySid\"] = params[\"policySid\"];\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TrustProductsPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new TrustProductsPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.TrustProductsListInstance = TrustProductsListInstance;\nclass TrustProductsPage extends Page_1.default {\n    /**\n     * Initialize the TrustProductsPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of TrustProductsInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new TrustProductsInstance(this._version, payload);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TrustProductsPage = TrustProductsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}