{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Verify\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VerificationCheckInstance = exports.VerificationCheckListInstance = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nfunction VerificationCheckListInstance(version, serviceSid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  const instance = {};\n  instance._version = version;\n  instance._solution = {\n    serviceSid\n  };\n  instance._uri = `/Services/${serviceSid}/VerificationCheck`;\n  instance.create = function create(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"code\"] !== undefined) data[\"Code\"] = params[\"code\"];\n    if (params[\"to\"] !== undefined) data[\"To\"] = params[\"to\"];\n    if (params[\"verificationSid\"] !== undefined) data[\"VerificationSid\"] = params[\"verificationSid\"];\n    if (params[\"amount\"] !== undefined) data[\"Amount\"] = params[\"amount\"];\n    if (params[\"payee\"] !== undefined) data[\"Payee\"] = params[\"payee\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new VerificationCheckInstance(operationVersion, payload, instance._solution.serviceSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.VerificationCheckListInstance = VerificationCheckListInstance;\nclass VerificationCheckInstance {\n  constructor(_version, payload, serviceSid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.serviceSid = payload.service_sid;\n    this.accountSid = payload.account_sid;\n    this.to = payload.to;\n    this.channel = payload.channel;\n    this.status = payload.status;\n    this.valid = payload.valid;\n    this.amount = payload.amount;\n    this.payee = payload.payee;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.snaAttemptsErrorCodes = payload.sna_attempts_error_codes;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      serviceSid: this.serviceSid,\n      accountSid: this.accountSid,\n      to: this.to,\n      channel: this.channel,\n      status: this.status,\n      valid: this.valid,\n      amount: this.amount,\n      payee: this.payee,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      snaAttemptsErrorCodes: this.snaAttemptsErrorCodes\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.VerificationCheckInstance = VerificationCheckInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","VerificationCheckInstance","VerificationCheckListInstance","util_1","require","deserialize","serialize","utility_1","version","serviceSid","isValidPathParam","Error","instance","_version","_solution","_uri","create","params","callback","Function","data","undefined","headers","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","inspectImpl","_depth","options","constructor","sid","service_sid","accountSid","account_sid","to","channel","status","valid","amount","payee","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","snaAttemptsErrorCodes","sna_attempts_error_codes"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/verify/v2/service/verificationCheck.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Verify\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VerificationCheckInstance = exports.VerificationCheckListInstance = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nfunction VerificationCheckListInstance(version, serviceSid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    const instance = {};\n    instance._version = version;\n    instance._solution = { serviceSid };\n    instance._uri = `/Services/${serviceSid}/VerificationCheck`;\n    instance.create = function create(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"code\"] !== undefined)\n            data[\"Code\"] = params[\"code\"];\n        if (params[\"to\"] !== undefined)\n            data[\"To\"] = params[\"to\"];\n        if (params[\"verificationSid\"] !== undefined)\n            data[\"VerificationSid\"] = params[\"verificationSid\"];\n        if (params[\"amount\"] !== undefined)\n            data[\"Amount\"] = params[\"amount\"];\n        if (params[\"payee\"] !== undefined)\n            data[\"Payee\"] = params[\"payee\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new VerificationCheckInstance(operationVersion, payload, instance._solution.serviceSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.VerificationCheckListInstance = VerificationCheckListInstance;\nclass VerificationCheckInstance {\n    constructor(_version, payload, serviceSid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.serviceSid = payload.service_sid;\n        this.accountSid = payload.account_sid;\n        this.to = payload.to;\n        this.channel = payload.channel;\n        this.status = payload.status;\n        this.valid = payload.valid;\n        this.amount = payload.amount;\n        this.payee = payload.payee;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.snaAttemptsErrorCodes = payload.sna_attempts_error_codes;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            serviceSid: this.serviceSid,\n            accountSid: this.accountSid,\n            to: this.to,\n            channel: this.channel,\n            status: this.status,\n            valid: this.valid,\n            amount: this.amount,\n            payee: this.payee,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            snaAttemptsErrorCodes: this.snaAttemptsErrorCodes,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.VerificationCheckInstance = VerificationCheckInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}