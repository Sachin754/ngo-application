{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar TollFreeList;\nvar TollFreePage;\nvar TollFreeInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the TollFreeList\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTollFreeList = function TollFreeList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function tollFree\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeContext}\n   */\n  /* jshint ignore:end */\n  function TollFreeListInstance(sid) {\n    return TollFreeListInstance.get(sid);\n  }\n  TollFreeListInstance._version = version;\n  // Path Solution\n  TollFreeListInstance._solution = {\n    accountSid: accountSid\n  };\n  TollFreeListInstance._uri = `/Accounts/${accountSid}/IncomingPhoneNumbers/TollFree.json`;\n  /* jshint ignore:start */\n  /**\n   * Streams TollFreeInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the resources to read\n   * @param {string} [opts.phoneNumber] - The phone numbers of the resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists TollFreeInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the resources to read\n   * @param {string} [opts.phoneNumber] - The phone numbers of the resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of TollFreeInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the resources to read\n   * @param {string} [opts.phoneNumber] - The phone numbers of the resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Beta': serialize.bool(_.get(opts, 'beta')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'Origin': _.get(opts, 'origin'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TollFreePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of TollFreeInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TollFreePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a TollFreeInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumber - The phone number to purchase in E.164 format\n   * @param {string} [opts.apiVersion] -\n   *          The API version to use for incoming calls made to the new phone number\n   * @param {string} [opts.friendlyName] - A string to describe the new phone number\n   * @param {string} [opts.smsApplicationSid] -\n   *          The SID of the application to handle SMS messages\n   * @param {string} [opts.smsFallbackMethod] -\n   *          HTTP method used with sms_fallback_url\n   * @param {string} [opts.smsFallbackUrl] -\n   *          The URL we call when an error occurs while executing TwiML\n   * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n   * @param {string} [opts.smsUrl] -\n   *          The URL we should call when the new phone number receives an incoming SMS message\n   * @param {string} [opts.statusCallback] -\n   *          The URL to send status information to your application\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we should use to call status_callback\n   * @param {string} [opts.voiceApplicationSid] -\n   *          The SID of the application to handle the new phone number\n   * @param {boolean} [opts.voiceCallerIdLookup] -\n   *          Whether to lookup the caller's name\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method used with voice_fallback_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we will call when an error occurs in TwiML\n   * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n   * @param {string} [opts.voiceUrl] -\n   *          The URL we should call when the phone number receives a call\n   * @param {string} [opts.identitySid] -\n   *          The SID of the Identity resource to associate with the new phone number\n   * @param {string} [opts.addressSid] -\n   *          The SID of the Address resource associated with the phone number\n   * @param {toll_free.emergency_status} [opts.emergencyStatus] -\n   *          Status determining whether the new phone number is enabled for emergency calling\n   * @param {string} [opts.emergencyAddressSid] -\n   *          The emergency address configuration to use for emergency calling\n   * @param {string} [opts.trunkSid] -\n   *          SID of the trunk to handle calls to the new phone number\n   * @param {toll_free.voice_receive_mode} [opts.voiceReceiveMode] -\n   *          Incoming call type: fax or voice\n   * @param {string} [opts.bundleSid] -\n   *          The SID of the Bundle resource associated with number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TollFreeInstance\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.phoneNumber)) {\n      throw new Error('Required parameter \"opts.phoneNumber\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'ApiVersion': _.get(opts, 'apiVersion'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n      'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'IdentitySid': _.get(opts, 'identitySid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n      'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n      'TrunkSid': _.get(opts, 'trunkSid'),\n      'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n      'BundleSid': _.get(opts, 'bundleSid')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TollFreeInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  TollFreeListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return TollFreeListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TollFreePage\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreePage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TollFreeSolution} solution - Path solution\n *\n * @returns TollFreePage\n */\n/* jshint ignore:end */\nTollFreePage = function TollFreePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(TollFreePage.prototype, Page.prototype);\nTollFreePage.prototype.constructor = TollFreePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TollFreeInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreePage#\n *\n * @param {TollFreePayload} payload - Payload response from the API\n *\n * @returns TollFreeInstance\n */\n/* jshint ignore:end */\nTollFreePage.prototype.getInstance = function getInstance(payload) {\n  return new TollFreeInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTollFreePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTollFreePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TollFreeContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} addressSid -\n *          The SID of the Address resource associated with the phone number\n * @property {toll_free.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio.\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {PhoneNumberCapabilities} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} identitySid -\n *          The SID of the Identity resource associated with number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} origin - The phone number's origin. Can be twilio or hosted.\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {toll_free.voice_receive_mode} voiceReceiveMode -\n *          The voice_receive_mode\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {toll_free.emergency_status} emergencyStatus -\n *          Whether the phone number is enabled for emergency calling\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n * @property {string} bundleSid -\n *          The SID of the Bundle resource associated with number\n * @property {string} status - The status\n *\n * @param {V2010} version - Version of the resource\n * @param {TollFreePayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTollFreeInstance = function TollFreeInstance(version, payload, accountSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n  this.apiVersion = payload.api_version; // jshint ignore:line\n  this.beta = payload.beta; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.identitySid = payload.identity_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.origin = payload.origin; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n  this.voiceReceiveMode = payload.voice_receive_mode; // jshint ignore:line\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid\n  };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTollFreeInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTollFreeInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  TollFreeList: TollFreeList,\n  TollFreePage: TollFreePage,\n  TollFreeInstance: TollFreeInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","TollFreeList","TollFreePage","TollFreeInstance","version","accountSid","TollFreeListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","bool","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","phoneNumber","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","addressSid","address_sid","addressRequirements","address_requirements","apiVersion","api_version","beta","capabilities","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","identitySid","identity_sid","phone_number","origin","smsApplicationSid","sms_application_sid","smsFallbackMethod","sms_fallback_method","smsFallbackUrl","sms_fallback_url","smsMethod","sms_method","smsUrl","sms_url","statusCallback","status_callback","statusCallbackMethod","status_callback_method","trunkSid","trunk_sid","voiceReceiveMode","voice_receive_mode","voiceApplicationSid","voice_application_sid","voiceCallerIdLookup","voice_caller_id_lookup","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceMethod","voice_method","voiceUrl","voice_url","emergencyStatus","emergency_status","emergencyAddressSid","emergency_address_sid","bundleSid","bundle_sid","status","_context","undefined","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/api/v2010/account/incomingPhoneNumber/tollFree.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar TollFreeList;\nvar TollFreePage;\nvar TollFreeInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the TollFreeList\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTollFreeList = function TollFreeList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function tollFree\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeContext}\n   */\n  /* jshint ignore:end */\n  function TollFreeListInstance(sid) {\n    return TollFreeListInstance.get(sid);\n  }\n\n  TollFreeListInstance._version = version;\n  // Path Solution\n  TollFreeListInstance._solution = {accountSid: accountSid};\n  TollFreeListInstance._uri = `/Accounts/${accountSid}/IncomingPhoneNumbers/TollFree.json`;\n  /* jshint ignore:start */\n  /**\n   * Streams TollFreeInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the resources to read\n   * @param {string} [opts.phoneNumber] - The phone numbers of the resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists TollFreeInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the resources to read\n   * @param {string} [opts.phoneNumber] - The phone numbers of the resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of TollFreeInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the resources to read\n   * @param {string} [opts.phoneNumber] - The phone numbers of the resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Beta': serialize.bool(_.get(opts, 'beta')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'Origin': _.get(opts, 'origin'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TollFreePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of TollFreeInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TollFreePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a TollFreeInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumber - The phone number to purchase in E.164 format\n   * @param {string} [opts.apiVersion] -\n   *          The API version to use for incoming calls made to the new phone number\n   * @param {string} [opts.friendlyName] - A string to describe the new phone number\n   * @param {string} [opts.smsApplicationSid] -\n   *          The SID of the application to handle SMS messages\n   * @param {string} [opts.smsFallbackMethod] -\n   *          HTTP method used with sms_fallback_url\n   * @param {string} [opts.smsFallbackUrl] -\n   *          The URL we call when an error occurs while executing TwiML\n   * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n   * @param {string} [opts.smsUrl] -\n   *          The URL we should call when the new phone number receives an incoming SMS message\n   * @param {string} [opts.statusCallback] -\n   *          The URL to send status information to your application\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we should use to call status_callback\n   * @param {string} [opts.voiceApplicationSid] -\n   *          The SID of the application to handle the new phone number\n   * @param {boolean} [opts.voiceCallerIdLookup] -\n   *          Whether to lookup the caller's name\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method used with voice_fallback_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we will call when an error occurs in TwiML\n   * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n   * @param {string} [opts.voiceUrl] -\n   *          The URL we should call when the phone number receives a call\n   * @param {string} [opts.identitySid] -\n   *          The SID of the Identity resource to associate with the new phone number\n   * @param {string} [opts.addressSid] -\n   *          The SID of the Address resource associated with the phone number\n   * @param {toll_free.emergency_status} [opts.emergencyStatus] -\n   *          Status determining whether the new phone number is enabled for emergency calling\n   * @param {string} [opts.emergencyAddressSid] -\n   *          The emergency address configuration to use for emergency calling\n   * @param {string} [opts.trunkSid] -\n   *          SID of the trunk to handle calls to the new phone number\n   * @param {toll_free.voice_receive_mode} [opts.voiceReceiveMode] -\n   *          Incoming call type: fax or voice\n   * @param {string} [opts.bundleSid] -\n   *          The SID of the Bundle resource associated with number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TollFreeInstance\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.phoneNumber)) {\n      throw new Error('Required parameter \"opts.phoneNumber\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'ApiVersion': _.get(opts, 'apiVersion'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n      'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'IdentitySid': _.get(opts, 'identitySid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n      'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n      'TrunkSid': _.get(opts, 'trunkSid'),\n      'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n      'BundleSid': _.get(opts, 'bundleSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TollFreeInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TollFreeListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TollFreeListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TollFreeListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TollFreePage\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreePage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TollFreeSolution} solution - Path solution\n *\n * @returns TollFreePage\n */\n/* jshint ignore:end */\nTollFreePage = function TollFreePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TollFreePage.prototype, Page.prototype);\nTollFreePage.prototype.constructor = TollFreePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TollFreeInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreePage#\n *\n * @param {TollFreePayload} payload - Payload response from the API\n *\n * @returns TollFreeInstance\n */\n/* jshint ignore:end */\nTollFreePage.prototype.getInstance = function getInstance(payload) {\n  return new TollFreeInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTollFreePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTollFreePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TollFreeContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} addressSid -\n *          The SID of the Address resource associated with the phone number\n * @property {toll_free.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio.\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {PhoneNumberCapabilities} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} identitySid -\n *          The SID of the Identity resource associated with number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} origin - The phone number's origin. Can be twilio or hosted.\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {toll_free.voice_receive_mode} voiceReceiveMode -\n *          The voice_receive_mode\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {toll_free.emergency_status} emergencyStatus -\n *          Whether the phone number is enabled for emergency calling\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n * @property {string} bundleSid -\n *          The SID of the Bundle resource associated with number\n * @property {string} status - The status\n *\n * @param {V2010} version - Version of the resource\n * @param {TollFreePayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTollFreeInstance = function TollFreeInstance(version, payload, accountSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n  this.apiVersion = payload.api_version; // jshint ignore:line\n  this.beta = payload.beta; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.identitySid = payload.identity_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.origin = payload.origin; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n  this.voiceReceiveMode = payload.voice_receive_mode; // jshint ignore:line\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.TollFreeInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTollFreeInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTollFreeInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TollFreeList: TollFreeList,\n  TollFreePage: TollFreePage,\n  TollFreeInstance: TollFreeInstance\n};\n"],"mappings":"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CAACM,QAAQ,EAAE+C,OAAO,EAAE,IAAI,CAAC9C,SAAS,CAACL,UAAU,CAAC;AAChF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,YAAY,CAACqE,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAChD,IAAIY,KAAK,GAAG,CAAC,CAAC;EACdjF,CAAC,CAACkF,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAACpF,CAAC,CAACqF,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAEpF,CAAC,CAACoB,UAAU,CAAC+D,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAED1E,YAAY,CAACqE,SAAS,CAAC3E,IAAI,CAACqE,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAAEC,OAAO,EAAE;EAC7E,OAAOxE,IAAI,CAACqE,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjE,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,OAAO,EAAEoD,OAAO,EAAEnD,UAAU,EAAE;EACzE,IAAI,CAACI,QAAQ,GAAGL,OAAO;;EAEvB;EACA,IAAI,CAACC,UAAU,GAAGmD,OAAO,CAACyB,WAAW,CAAC,CAAC;EACvC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"},"metadata":{},"sourceType":"script","externalDependencies":[]}