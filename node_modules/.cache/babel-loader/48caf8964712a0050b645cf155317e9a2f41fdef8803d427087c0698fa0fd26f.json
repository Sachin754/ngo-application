{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MemberPage = exports.MemberListInstance = exports.MemberInstance = exports.MemberContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass MemberContextImpl {\n  constructor(_version, serviceSid, channelSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n      throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(channelSid)) {\n      throw new Error(\"Parameter 'channelSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      serviceSid,\n      channelSid,\n      sid\n    };\n    this._uri = `/Services/${serviceSid}/Channels/${channelSid}/Members/${sid}`;\n  }\n  remove(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    const headers = {};\n    if (params[\"xTwilioWebhookEnabled\"] !== undefined) headers[\"X-Twilio-Webhook-Enabled\"] = params[\"xTwilioWebhookEnabled\"];\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\",\n        params: data,\n        headers\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new MemberInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.channelSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"roleSid\"] !== undefined) data[\"RoleSid\"] = params[\"roleSid\"];\n    if (params[\"lastConsumedMessageIndex\"] !== undefined) data[\"LastConsumedMessageIndex\"] = params[\"lastConsumedMessageIndex\"];\n    if (params[\"lastConsumptionTimestamp\"] !== undefined) data[\"LastConsumptionTimestamp\"] = serialize.iso8601DateTime(params[\"lastConsumptionTimestamp\"]);\n    if (params[\"dateCreated\"] !== undefined) data[\"DateCreated\"] = serialize.iso8601DateTime(params[\"dateCreated\"]);\n    if (params[\"dateUpdated\"] !== undefined) data[\"DateUpdated\"] = serialize.iso8601DateTime(params[\"dateUpdated\"]);\n    if (params[\"attributes\"] !== undefined) data[\"Attributes\"] = params[\"attributes\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    if (params[\"xTwilioWebhookEnabled\"] !== undefined) headers[\"X-Twilio-Webhook-Enabled\"] = params[\"xTwilioWebhookEnabled\"];\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new MemberInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.channelSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.MemberContextImpl = MemberContextImpl;\nclass MemberInstance {\n  constructor(_version, payload, serviceSid, channelSid, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.channelSid = payload.channel_sid;\n    this.serviceSid = payload.service_sid;\n    this.identity = payload.identity;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.roleSid = payload.role_sid;\n    this.lastConsumedMessageIndex = deserialize.integer(payload.last_consumed_message_index);\n    this.lastConsumptionTimestamp = deserialize.iso8601DateTime(payload.last_consumption_timestamp);\n    this.url = payload.url;\n    this.attributes = payload.attributes;\n    this._solution = {\n      serviceSid,\n      channelSid,\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new MemberContextImpl(this._version, this._solution.serviceSid, this._solution.channelSid, this._solution.sid);\n    return this._context;\n  }\n  remove(params, callback) {\n    return this._proxy.remove(params, callback);\n  }\n  /**\n   * Fetch a MemberInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed MemberInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      channelSid: this.channelSid,\n      serviceSid: this.serviceSid,\n      identity: this.identity,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      roleSid: this.roleSid,\n      lastConsumedMessageIndex: this.lastConsumedMessageIndex,\n      lastConsumptionTimestamp: this.lastConsumptionTimestamp,\n      url: this.url,\n      attributes: this.attributes\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.MemberInstance = MemberInstance;\nfunction MemberListInstance(version, serviceSid, channelSid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(channelSid)) {\n    throw new Error(\"Parameter 'channelSid' is not valid.\");\n  }\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new MemberContextImpl(version, serviceSid, channelSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    serviceSid,\n    channelSid\n  };\n  instance._uri = `/Services/${serviceSid}/Channels/${channelSid}/Members`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"identity\"] === null || params[\"identity\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['identity']\\\" missing.\");\n    }\n    let data = {};\n    data[\"Identity\"] = params[\"identity\"];\n    if (params[\"roleSid\"] !== undefined) data[\"RoleSid\"] = params[\"roleSid\"];\n    if (params[\"lastConsumedMessageIndex\"] !== undefined) data[\"LastConsumedMessageIndex\"] = params[\"lastConsumedMessageIndex\"];\n    if (params[\"lastConsumptionTimestamp\"] !== undefined) data[\"LastConsumptionTimestamp\"] = serialize.iso8601DateTime(params[\"lastConsumptionTimestamp\"]);\n    if (params[\"dateCreated\"] !== undefined) data[\"DateCreated\"] = serialize.iso8601DateTime(params[\"dateCreated\"]);\n    if (params[\"dateUpdated\"] !== undefined) data[\"DateUpdated\"] = serialize.iso8601DateTime(params[\"dateUpdated\"]);\n    if (params[\"attributes\"] !== undefined) data[\"Attributes\"] = params[\"attributes\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    if (params[\"xTwilioWebhookEnabled\"] !== undefined) headers[\"X-Twilio-Webhook-Enabled\"] = params[\"xTwilioWebhookEnabled\"];\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new MemberInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.channelSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"identity\"] !== undefined) data[\"Identity\"] = serialize.map(params[\"identity\"], e => e);\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new MemberPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new MemberPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.MemberListInstance = MemberListInstance;\nclass MemberPage extends Page_1.default {\n  /**\n   * Initialize the MemberPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of MemberInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new MemberInstance(this._version, payload, this._solution.serviceSid, this._solution.channelSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.MemberPage = MemberPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","MemberPage","MemberListInstance","MemberInstance","MemberContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","constructor","_version","serviceSid","channelSid","sid","isValidPathParam","Error","_solution","_uri","remove","params","callback","Function","data","headers","undefined","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","iso8601DateTime","toJSON","inspect","custom","_depth","options","accountSid","account_sid","channel_sid","service_sid","identity","dateCreated","date_created","dateUpdated","date_updated","roleSid","role_sid","lastConsumedMessageIndex","integer","last_consumed_message_index","lastConsumptionTimestamp","last_consumption_timestamp","url","attributes","_proxy","_context","version","get","create","page","map","e","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/chat/v2/service/channel/member.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MemberPage = exports.MemberListInstance = exports.MemberInstance = exports.MemberContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass MemberContextImpl {\n    constructor(_version, serviceSid, channelSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n            throw new Error(\"Parameter 'serviceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(channelSid)) {\n            throw new Error(\"Parameter 'channelSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { serviceSid, channelSid, sid };\n        this._uri = `/Services/${serviceSid}/Channels/${channelSid}/Members/${sid}`;\n    }\n    remove(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        const headers = {};\n        if (params[\"xTwilioWebhookEnabled\"] !== undefined)\n            headers[\"X-Twilio-Webhook-Enabled\"] = params[\"xTwilioWebhookEnabled\"];\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n            params: data,\n            headers,\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new MemberInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.channelSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"roleSid\"] !== undefined)\n            data[\"RoleSid\"] = params[\"roleSid\"];\n        if (params[\"lastConsumedMessageIndex\"] !== undefined)\n            data[\"LastConsumedMessageIndex\"] = params[\"lastConsumedMessageIndex\"];\n        if (params[\"lastConsumptionTimestamp\"] !== undefined)\n            data[\"LastConsumptionTimestamp\"] = serialize.iso8601DateTime(params[\"lastConsumptionTimestamp\"]);\n        if (params[\"dateCreated\"] !== undefined)\n            data[\"DateCreated\"] = serialize.iso8601DateTime(params[\"dateCreated\"]);\n        if (params[\"dateUpdated\"] !== undefined)\n            data[\"DateUpdated\"] = serialize.iso8601DateTime(params[\"dateUpdated\"]);\n        if (params[\"attributes\"] !== undefined)\n            data[\"Attributes\"] = params[\"attributes\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        if (params[\"xTwilioWebhookEnabled\"] !== undefined)\n            headers[\"X-Twilio-Webhook-Enabled\"] = params[\"xTwilioWebhookEnabled\"];\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new MemberInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.channelSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.MemberContextImpl = MemberContextImpl;\nclass MemberInstance {\n    constructor(_version, payload, serviceSid, channelSid, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.channelSid = payload.channel_sid;\n        this.serviceSid = payload.service_sid;\n        this.identity = payload.identity;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.roleSid = payload.role_sid;\n        this.lastConsumedMessageIndex = deserialize.integer(payload.last_consumed_message_index);\n        this.lastConsumptionTimestamp = deserialize.iso8601DateTime(payload.last_consumption_timestamp);\n        this.url = payload.url;\n        this.attributes = payload.attributes;\n        this._solution = { serviceSid, channelSid, sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new MemberContextImpl(this._version, this._solution.serviceSid, this._solution.channelSid, this._solution.sid);\n        return this._context;\n    }\n    remove(params, callback) {\n        return this._proxy.remove(params, callback);\n    }\n    /**\n     * Fetch a MemberInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed MemberInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            channelSid: this.channelSid,\n            serviceSid: this.serviceSid,\n            identity: this.identity,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            roleSid: this.roleSid,\n            lastConsumedMessageIndex: this.lastConsumedMessageIndex,\n            lastConsumptionTimestamp: this.lastConsumptionTimestamp,\n            url: this.url,\n            attributes: this.attributes,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.MemberInstance = MemberInstance;\nfunction MemberListInstance(version, serviceSid, channelSid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(channelSid)) {\n        throw new Error(\"Parameter 'channelSid' is not valid.\");\n    }\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new MemberContextImpl(version, serviceSid, channelSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { serviceSid, channelSid };\n    instance._uri = `/Services/${serviceSid}/Channels/${channelSid}/Members`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"identity\"] === null || params[\"identity\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['identity']\\\" missing.\");\n        }\n        let data = {};\n        data[\"Identity\"] = params[\"identity\"];\n        if (params[\"roleSid\"] !== undefined)\n            data[\"RoleSid\"] = params[\"roleSid\"];\n        if (params[\"lastConsumedMessageIndex\"] !== undefined)\n            data[\"LastConsumedMessageIndex\"] = params[\"lastConsumedMessageIndex\"];\n        if (params[\"lastConsumptionTimestamp\"] !== undefined)\n            data[\"LastConsumptionTimestamp\"] = serialize.iso8601DateTime(params[\"lastConsumptionTimestamp\"]);\n        if (params[\"dateCreated\"] !== undefined)\n            data[\"DateCreated\"] = serialize.iso8601DateTime(params[\"dateCreated\"]);\n        if (params[\"dateUpdated\"] !== undefined)\n            data[\"DateUpdated\"] = serialize.iso8601DateTime(params[\"dateUpdated\"]);\n        if (params[\"attributes\"] !== undefined)\n            data[\"Attributes\"] = params[\"attributes\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        if (params[\"xTwilioWebhookEnabled\"] !== undefined)\n            headers[\"X-Twilio-Webhook-Enabled\"] = params[\"xTwilioWebhookEnabled\"];\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new MemberInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.channelSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"identity\"] !== undefined)\n            data[\"Identity\"] = serialize.map(params[\"identity\"], (e) => e);\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new MemberPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new MemberPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.MemberListInstance = MemberListInstance;\nclass MemberPage extends Page_1.default {\n    /**\n     * Initialize the MemberPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of MemberInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new MemberInstance(this._version, payload, this._solution.serviceSid, this._solution.channelSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.MemberPage = MemberPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}