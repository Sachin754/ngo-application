{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UsageListInstance = exports.UsageInstance = exports.UsageContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass UsageContextImpl {\n  constructor(_version, simSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(simSid)) {\n      throw new Error(\"Parameter 'simSid' is not valid.\");\n    }\n    this._solution = {\n      simSid\n    };\n    this._uri = `/Sims/${simSid}/Usage`;\n  }\n  fetch(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"end\"] !== undefined) data[\"End\"] = params[\"end\"];\n    if (params[\"start\"] !== undefined) data[\"Start\"] = params[\"start\"];\n    const headers = {};\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new UsageInstance(operationVersion, payload, instance._solution.simSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UsageContextImpl = UsageContextImpl;\nclass UsageInstance {\n  constructor(_version, payload, simSid) {\n    this._version = _version;\n    this.simSid = payload.sim_sid;\n    this.simUniqueName = payload.sim_unique_name;\n    this.accountSid = payload.account_sid;\n    this.period = payload.period;\n    this.commandsUsage = payload.commands_usage;\n    this.commandsCosts = payload.commands_costs;\n    this.dataUsage = payload.data_usage;\n    this.dataCosts = payload.data_costs;\n    this.url = payload.url;\n    this._solution = {\n      simSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new UsageContextImpl(this._version, this._solution.simSid);\n    return this._context;\n  }\n  fetch(params, callback) {\n    return this._proxy.fetch(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      simSid: this.simSid,\n      simUniqueName: this.simUniqueName,\n      accountSid: this.accountSid,\n      period: this.period,\n      commandsUsage: this.commandsUsage,\n      commandsCosts: this.commandsCosts,\n      dataUsage: this.dataUsage,\n      dataCosts: this.dataCosts,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UsageInstance = UsageInstance;\nfunction UsageListInstance(version, simSid) {\n  if (!(0, utility_1.isValidPathParam)(simSid)) {\n    throw new Error(\"Parameter 'simSid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new UsageContextImpl(version, simSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    simSid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.UsageListInstance = UsageListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","UsageListInstance","UsageInstance","UsageContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","simSid","isValidPathParam","Error","_solution","_uri","fetch","params","callback","Function","data","undefined","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","sim_sid","simUniqueName","sim_unique_name","accountSid","account_sid","period","commandsUsage","commands_usage","commandsCosts","commands_costs","dataUsage","data_usage","dataCosts","data_costs","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/preview/wireless/sim/usage.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Preview\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UsageListInstance = exports.UsageInstance = exports.UsageContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass UsageContextImpl {\n    constructor(_version, simSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(simSid)) {\n            throw new Error(\"Parameter 'simSid' is not valid.\");\n        }\n        this._solution = { simSid };\n        this._uri = `/Sims/${simSid}/Usage`;\n    }\n    fetch(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"end\"] !== undefined)\n            data[\"End\"] = params[\"end\"];\n        if (params[\"start\"] !== undefined)\n            data[\"Start\"] = params[\"start\"];\n        const headers = {};\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new UsageInstance(operationVersion, payload, instance._solution.simSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UsageContextImpl = UsageContextImpl;\nclass UsageInstance {\n    constructor(_version, payload, simSid) {\n        this._version = _version;\n        this.simSid = payload.sim_sid;\n        this.simUniqueName = payload.sim_unique_name;\n        this.accountSid = payload.account_sid;\n        this.period = payload.period;\n        this.commandsUsage = payload.commands_usage;\n        this.commandsCosts = payload.commands_costs;\n        this.dataUsage = payload.data_usage;\n        this.dataCosts = payload.data_costs;\n        this.url = payload.url;\n        this._solution = { simSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new UsageContextImpl(this._version, this._solution.simSid);\n        return this._context;\n    }\n    fetch(params, callback) {\n        return this._proxy.fetch(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            simSid: this.simSid,\n            simUniqueName: this.simUniqueName,\n            accountSid: this.accountSid,\n            period: this.period,\n            commandsUsage: this.commandsUsage,\n            commandsCosts: this.commandsCosts,\n            dataUsage: this.dataUsage,\n            dataCosts: this.dataCosts,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UsageInstance = UsageInstance;\nfunction UsageListInstance(version, simSid) {\n    if (!(0, utility_1.isValidPathParam)(simSid)) {\n        throw new Error(\"Parameter 'simSid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new UsageContextImpl(version, simSid);\n    };\n    instance._version = version;\n    instance._solution = { simSid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.UsageListInstance = UsageListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}