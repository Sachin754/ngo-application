{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Verify\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NotificationInstance = exports.NotificationListInstance = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../../base/utility\");\nfunction NotificationListInstance(version, serviceSid, identity, challengeSid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(identity)) {\n    throw new Error(\"Parameter 'identity' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(challengeSid)) {\n    throw new Error(\"Parameter 'challengeSid' is not valid.\");\n  }\n  const instance = {};\n  instance._version = version;\n  instance._solution = {\n    serviceSid,\n    identity,\n    challengeSid\n  };\n  instance._uri = `/Services/${serviceSid}/Entities/${identity}/Challenges/${challengeSid}/Notifications`;\n  instance.create = function create(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"ttl\"] !== undefined) data[\"Ttl\"] = params[\"ttl\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new NotificationInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.identity, instance._solution.challengeSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.NotificationListInstance = NotificationListInstance;\nclass NotificationInstance {\n  constructor(_version, payload, serviceSid, identity, challengeSid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.serviceSid = payload.service_sid;\n    this.entitySid = payload.entity_sid;\n    this.identity = payload.identity;\n    this.challengeSid = payload.challenge_sid;\n    this.priority = payload.priority;\n    this.ttl = deserialize.integer(payload.ttl);\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      serviceSid: this.serviceSid,\n      entitySid: this.entitySid,\n      identity: this.identity,\n      challengeSid: this.challengeSid,\n      priority: this.priority,\n      ttl: this.ttl,\n      dateCreated: this.dateCreated\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.NotificationInstance = NotificationInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","NotificationInstance","NotificationListInstance","util_1","require","deserialize","serialize","utility_1","version","serviceSid","identity","challengeSid","isValidPathParam","Error","instance","_version","_solution","_uri","create","params","callback","Function","data","undefined","headers","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","inspectImpl","_depth","options","constructor","sid","accountSid","account_sid","service_sid","entitySid","entity_sid","challenge_sid","priority","ttl","integer","dateCreated","iso8601DateTime","date_created"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/verify/v2/service/entity/challenge/notification.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Verify\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotificationInstance = exports.NotificationListInstance = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../../base/utility\");\nfunction NotificationListInstance(version, serviceSid, identity, challengeSid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(identity)) {\n        throw new Error(\"Parameter 'identity' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(challengeSid)) {\n        throw new Error(\"Parameter 'challengeSid' is not valid.\");\n    }\n    const instance = {};\n    instance._version = version;\n    instance._solution = { serviceSid, identity, challengeSid };\n    instance._uri = `/Services/${serviceSid}/Entities/${identity}/Challenges/${challengeSid}/Notifications`;\n    instance.create = function create(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"ttl\"] !== undefined)\n            data[\"Ttl\"] = params[\"ttl\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new NotificationInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.identity, instance._solution.challengeSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.NotificationListInstance = NotificationListInstance;\nclass NotificationInstance {\n    constructor(_version, payload, serviceSid, identity, challengeSid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.serviceSid = payload.service_sid;\n        this.entitySid = payload.entity_sid;\n        this.identity = payload.identity;\n        this.challengeSid = payload.challenge_sid;\n        this.priority = payload.priority;\n        this.ttl = deserialize.integer(payload.ttl);\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            serviceSid: this.serviceSid,\n            entitySid: this.entitySid,\n            identity: this.identity,\n            challengeSid: this.challengeSid,\n            priority: this.priority,\n            ttl: this.ttl,\n            dateCreated: this.dateCreated,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.NotificationInstance = NotificationInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}