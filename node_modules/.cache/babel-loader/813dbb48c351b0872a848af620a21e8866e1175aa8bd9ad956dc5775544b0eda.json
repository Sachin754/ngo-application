{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Numbers\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PortingPortabilityListInstance = exports.PortingPortabilityInstance = exports.PortingPortabilityContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass PortingPortabilityContextImpl {\n  constructor(_version, phoneNumber) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(phoneNumber)) {\n      throw new Error(\"Parameter 'phoneNumber' is not valid.\");\n    }\n    this._solution = {\n      phoneNumber\n    };\n    this._uri = `/Porting/Portability/PhoneNumber/${phoneNumber}`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new PortingPortabilityInstance(operationVersion, payload, instance._solution.phoneNumber));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.PortingPortabilityContextImpl = PortingPortabilityContextImpl;\nclass PortingPortabilityInstance {\n  constructor(_version, payload, phoneNumber) {\n    this._version = _version;\n    this.phoneNumber = payload.phone_number;\n    this.portable = payload.portable;\n    this.pinAndAccountNumberRequired = payload.pin_and_account_number_required;\n    this.notPortableReason = payload.not_portable_reason;\n    this.notPortableReasonCode = deserialize.integer(payload.not_portable_reason_code);\n    this.numberType = payload.number_type;\n    this.country = payload.country;\n    this.messagingCarrier = payload.messaging_carrier;\n    this.voiceCarrier = payload.voice_carrier;\n    this.url = payload.url;\n    this._solution = {\n      phoneNumber: phoneNumber || this.phoneNumber\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new PortingPortabilityContextImpl(this._version, this._solution.phoneNumber);\n    return this._context;\n  }\n  /**\n   * Fetch a PortingPortabilityInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed PortingPortabilityInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      phoneNumber: this.phoneNumber,\n      portable: this.portable,\n      pinAndAccountNumberRequired: this.pinAndAccountNumberRequired,\n      notPortableReason: this.notPortableReason,\n      notPortableReasonCode: this.notPortableReasonCode,\n      numberType: this.numberType,\n      country: this.country,\n      messagingCarrier: this.messagingCarrier,\n      voiceCarrier: this.voiceCarrier,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.PortingPortabilityInstance = PortingPortabilityInstance;\nfunction PortingPortabilityListInstance(version) {\n  const instance = phoneNumber => instance.get(phoneNumber);\n  instance.get = function get(phoneNumber) {\n    return new PortingPortabilityContextImpl(version, phoneNumber);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.PortingPortabilityListInstance = PortingPortabilityListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","PortingPortabilityListInstance","PortingPortabilityInstance","PortingPortabilityContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","phoneNumber","isValidPathParam","Error","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","phone_number","portable","pinAndAccountNumberRequired","pin_and_account_number_required","notPortableReason","not_portable_reason","notPortableReasonCode","integer","not_portable_reason_code","numberType","number_type","country","messagingCarrier","messaging_carrier","voiceCarrier","voice_carrier","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/numbers/v1/portingPortability.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Numbers\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PortingPortabilityListInstance = exports.PortingPortabilityInstance = exports.PortingPortabilityContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass PortingPortabilityContextImpl {\n    constructor(_version, phoneNumber) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(phoneNumber)) {\n            throw new Error(\"Parameter 'phoneNumber' is not valid.\");\n        }\n        this._solution = { phoneNumber };\n        this._uri = `/Porting/Portability/PhoneNumber/${phoneNumber}`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new PortingPortabilityInstance(operationVersion, payload, instance._solution.phoneNumber));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.PortingPortabilityContextImpl = PortingPortabilityContextImpl;\nclass PortingPortabilityInstance {\n    constructor(_version, payload, phoneNumber) {\n        this._version = _version;\n        this.phoneNumber = payload.phone_number;\n        this.portable = payload.portable;\n        this.pinAndAccountNumberRequired = payload.pin_and_account_number_required;\n        this.notPortableReason = payload.not_portable_reason;\n        this.notPortableReasonCode = deserialize.integer(payload.not_portable_reason_code);\n        this.numberType = payload.number_type;\n        this.country = payload.country;\n        this.messagingCarrier = payload.messaging_carrier;\n        this.voiceCarrier = payload.voice_carrier;\n        this.url = payload.url;\n        this._solution = { phoneNumber: phoneNumber || this.phoneNumber };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new PortingPortabilityContextImpl(this._version, this._solution.phoneNumber);\n        return this._context;\n    }\n    /**\n     * Fetch a PortingPortabilityInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed PortingPortabilityInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            phoneNumber: this.phoneNumber,\n            portable: this.portable,\n            pinAndAccountNumberRequired: this.pinAndAccountNumberRequired,\n            notPortableReason: this.notPortableReason,\n            notPortableReasonCode: this.notPortableReasonCode,\n            numberType: this.numberType,\n            country: this.country,\n            messagingCarrier: this.messagingCarrier,\n            voiceCarrier: this.voiceCarrier,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.PortingPortabilityInstance = PortingPortabilityInstance;\nfunction PortingPortabilityListInstance(version) {\n    const instance = ((phoneNumber) => instance.get(phoneNumber));\n    instance.get = function get(phoneNumber) {\n        return new PortingPortabilityContextImpl(version, phoneNumber);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.PortingPortabilityListInstance = PortingPortabilityListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}