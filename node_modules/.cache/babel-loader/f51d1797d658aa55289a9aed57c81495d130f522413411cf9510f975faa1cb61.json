{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskQueueStatisticsListInstance = exports.TaskQueueStatisticsInstance = exports.TaskQueueStatisticsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass TaskQueueStatisticsContextImpl {\n  constructor(_version, workspaceSid, taskQueueSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n      throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(taskQueueSid)) {\n      throw new Error(\"Parameter 'taskQueueSid' is not valid.\");\n    }\n    this._solution = {\n      workspaceSid,\n      taskQueueSid\n    };\n    this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${taskQueueSid}/Statistics`;\n  }\n  fetch(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"endDate\"] !== undefined) data[\"EndDate\"] = serialize.iso8601DateTime(params[\"endDate\"]);\n    if (params[\"minutes\"] !== undefined) data[\"Minutes\"] = params[\"minutes\"];\n    if (params[\"startDate\"] !== undefined) data[\"StartDate\"] = serialize.iso8601DateTime(params[\"startDate\"]);\n    if (params[\"taskChannel\"] !== undefined) data[\"TaskChannel\"] = params[\"taskChannel\"];\n    if (params[\"splitByWaitTime\"] !== undefined) data[\"SplitByWaitTime\"] = params[\"splitByWaitTime\"];\n    const headers = {};\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new TaskQueueStatisticsInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.taskQueueSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TaskQueueStatisticsContextImpl = TaskQueueStatisticsContextImpl;\nclass TaskQueueStatisticsInstance {\n  constructor(_version, payload, workspaceSid, taskQueueSid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.cumulative = payload.cumulative;\n    this.realtime = payload.realtime;\n    this.taskQueueSid = payload.task_queue_sid;\n    this.workspaceSid = payload.workspace_sid;\n    this.url = payload.url;\n    this._solution = {\n      workspaceSid,\n      taskQueueSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new TaskQueueStatisticsContextImpl(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n    return this._context;\n  }\n  fetch(params, callback) {\n    return this._proxy.fetch(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      cumulative: this.cumulative,\n      realtime: this.realtime,\n      taskQueueSid: this.taskQueueSid,\n      workspaceSid: this.workspaceSid,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.TaskQueueStatisticsInstance = TaskQueueStatisticsInstance;\nfunction TaskQueueStatisticsListInstance(version, workspaceSid, taskQueueSid) {\n  if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n    throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(taskQueueSid)) {\n    throw new Error(\"Parameter 'taskQueueSid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new TaskQueueStatisticsContextImpl(version, workspaceSid, taskQueueSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    workspaceSid,\n    taskQueueSid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.TaskQueueStatisticsListInstance = TaskQueueStatisticsListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","TaskQueueStatisticsListInstance","TaskQueueStatisticsInstance","TaskQueueStatisticsContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","workspaceSid","taskQueueSid","isValidPathParam","Error","_solution","_uri","fetch","params","callback","Function","data","undefined","iso8601DateTime","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","accountSid","account_sid","cumulative","realtime","task_queue_sid","workspace_sid","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/taskrouter/v1/workspace/taskQueue/taskQueueStatistics.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaskQueueStatisticsListInstance = exports.TaskQueueStatisticsInstance = exports.TaskQueueStatisticsContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass TaskQueueStatisticsContextImpl {\n    constructor(_version, workspaceSid, taskQueueSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n            throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(taskQueueSid)) {\n            throw new Error(\"Parameter 'taskQueueSid' is not valid.\");\n        }\n        this._solution = { workspaceSid, taskQueueSid };\n        this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${taskQueueSid}/Statistics`;\n    }\n    fetch(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"endDate\"] !== undefined)\n            data[\"EndDate\"] = serialize.iso8601DateTime(params[\"endDate\"]);\n        if (params[\"minutes\"] !== undefined)\n            data[\"Minutes\"] = params[\"minutes\"];\n        if (params[\"startDate\"] !== undefined)\n            data[\"StartDate\"] = serialize.iso8601DateTime(params[\"startDate\"]);\n        if (params[\"taskChannel\"] !== undefined)\n            data[\"TaskChannel\"] = params[\"taskChannel\"];\n        if (params[\"splitByWaitTime\"] !== undefined)\n            data[\"SplitByWaitTime\"] = params[\"splitByWaitTime\"];\n        const headers = {};\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new TaskQueueStatisticsInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.taskQueueSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TaskQueueStatisticsContextImpl = TaskQueueStatisticsContextImpl;\nclass TaskQueueStatisticsInstance {\n    constructor(_version, payload, workspaceSid, taskQueueSid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.cumulative = payload.cumulative;\n        this.realtime = payload.realtime;\n        this.taskQueueSid = payload.task_queue_sid;\n        this.workspaceSid = payload.workspace_sid;\n        this.url = payload.url;\n        this._solution = { workspaceSid, taskQueueSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new TaskQueueStatisticsContextImpl(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n        return this._context;\n    }\n    fetch(params, callback) {\n        return this._proxy.fetch(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            cumulative: this.cumulative,\n            realtime: this.realtime,\n            taskQueueSid: this.taskQueueSid,\n            workspaceSid: this.workspaceSid,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.TaskQueueStatisticsInstance = TaskQueueStatisticsInstance;\nfunction TaskQueueStatisticsListInstance(version, workspaceSid, taskQueueSid) {\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n        throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(taskQueueSid)) {\n        throw new Error(\"Parameter 'taskQueueSid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new TaskQueueStatisticsContextImpl(version, workspaceSid, taskQueueSid);\n    };\n    instance._version = version;\n    instance._solution = { workspaceSid, taskQueueSid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.TaskQueueStatisticsListInstance = TaskQueueStatisticsListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}