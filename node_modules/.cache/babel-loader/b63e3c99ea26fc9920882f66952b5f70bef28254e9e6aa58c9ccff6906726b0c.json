{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserChannelPage = exports.UserChannelInstance = exports.UserChannelListInstance = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nfunction UserChannelListInstance(version, serviceSid, userSid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(userSid)) {\n    throw new Error(\"Parameter 'userSid' is not valid.\");\n  }\n  const instance = {};\n  instance._version = version;\n  instance._solution = {\n    serviceSid,\n    userSid\n  };\n  instance._uri = `/Services/${serviceSid}/Users/${userSid}/Channels`;\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new UserChannelPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new UserChannelPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.UserChannelListInstance = UserChannelListInstance;\nclass UserChannelInstance {\n  constructor(_version, payload, serviceSid, userSid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.serviceSid = payload.service_sid;\n    this.channelSid = payload.channel_sid;\n    this.memberSid = payload.member_sid;\n    this.status = payload.status;\n    this.lastConsumedMessageIndex = deserialize.integer(payload.last_consumed_message_index);\n    this.unreadMessagesCount = deserialize.integer(payload.unread_messages_count);\n    this.links = payload.links;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      serviceSid: this.serviceSid,\n      channelSid: this.channelSid,\n      memberSid: this.memberSid,\n      status: this.status,\n      lastConsumedMessageIndex: this.lastConsumedMessageIndex,\n      unreadMessagesCount: this.unreadMessagesCount,\n      links: this.links\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UserChannelInstance = UserChannelInstance;\nclass UserChannelPage extends Page_1.default {\n  /**\n   * Initialize the UserChannelPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of UserChannelInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new UserChannelInstance(this._version, payload, this._solution.serviceSid, this._solution.userSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UserChannelPage = UserChannelPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","UserChannelPage","UserChannelInstance","UserChannelListInstance","util_1","require","Page_1","deserialize","serialize","utility_1","version","serviceSid","userSid","isValidPathParam","Error","instance","_version","_solution","_uri","page","params","callback","Function","data","undefined","pageNumber","pageToken","headers","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","toJSON","inspect","custom","inspectImpl","_depth","options","constructor","accountSid","account_sid","service_sid","channelSid","channel_sid","memberSid","member_sid","status","lastConsumedMessageIndex","integer","last_consumed_message_index","unreadMessagesCount","unread_messages_count","links","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/chat/v1/service/user/userChannel.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserChannelPage = exports.UserChannelInstance = exports.UserChannelListInstance = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nfunction UserChannelListInstance(version, serviceSid, userSid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(userSid)) {\n        throw new Error(\"Parameter 'userSid' is not valid.\");\n    }\n    const instance = {};\n    instance._version = version;\n    instance._solution = { serviceSid, userSid };\n    instance._uri = `/Services/${serviceSid}/Users/${userSid}/Channels`;\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new UserChannelPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new UserChannelPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.UserChannelListInstance = UserChannelListInstance;\nclass UserChannelInstance {\n    constructor(_version, payload, serviceSid, userSid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.serviceSid = payload.service_sid;\n        this.channelSid = payload.channel_sid;\n        this.memberSid = payload.member_sid;\n        this.status = payload.status;\n        this.lastConsumedMessageIndex = deserialize.integer(payload.last_consumed_message_index);\n        this.unreadMessagesCount = deserialize.integer(payload.unread_messages_count);\n        this.links = payload.links;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            serviceSid: this.serviceSid,\n            channelSid: this.channelSid,\n            memberSid: this.memberSid,\n            status: this.status,\n            lastConsumedMessageIndex: this.lastConsumedMessageIndex,\n            unreadMessagesCount: this.unreadMessagesCount,\n            links: this.links,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UserChannelInstance = UserChannelInstance;\nclass UserChannelPage extends Page_1.default {\n    /**\n     * Initialize the UserChannelPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of UserChannelInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new UserChannelInstance(this._version, payload, this._solution.serviceSid, this._solution.userSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UserChannelPage = UserChannelPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}