{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar TokenList;\nvar TokenPage;\nvar TokenInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenList\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTokenList = function TokenList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function tokens\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.TokenContext}\n   */\n  /* jshint ignore:end */\n  function TokenListInstance(sid) {\n    return TokenListInstance.get(sid);\n  }\n  TokenListInstance._version = version;\n  // Path Solution\n  TokenListInstance._solution = {\n    accountSid: accountSid\n  };\n  TokenListInstance._uri = `/Accounts/${accountSid}/Tokens.json`;\n  /* jshint ignore:start */\n  /**\n   * create a TokenInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.ttl] - The duration in seconds the credentials are valid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TokenInstance\n   */\n  /* jshint ignore:end */\n  TokenListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Ttl': _.get(opts, 'ttl')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new TokenInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TokenListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  TokenListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return TokenListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TokenSolution} solution - Path solution\n *\n * @returns TokenPage\n */\n/* jshint ignore:end */\nTokenPage = function TokenPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(TokenPage.prototype, Page.prototype);\nTokenPage.prototype.constructor = TokenPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TokenInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @param {TokenPayload} payload - Payload response from the API\n *\n * @returns TokenInstance\n */\n/* jshint ignore:end */\nTokenPage.prototype.getInstance = function getInstance(payload) {\n  return new TokenInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTokenPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTokenPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} iceServers - An array representing the ephemeral credentials\n * @property {string} password - The temporary password used for authenticating\n * @property {string} ttl - The duration in seconds the credentials are valid\n * @property {string} username -\n *          The temporary username that uniquely identifies a Token\n *\n * @param {V2010} version - Version of the resource\n * @param {TokenPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTokenInstance = function TokenInstance(version, payload, accountSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.iceServers = payload.ice_servers; // jshint ignore:line\n  this.password = payload.password; // jshint ignore:line\n  this.ttl = payload.ttl; // jshint ignore:line\n  this.username = payload.username; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid\n  };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTokenInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTokenInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  TokenList: TokenList,\n  TokenPage: TokenPage,\n  TokenInstance: TokenInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","TokenList","TokenPage","TokenInstance","version","accountSid","TokenListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","iceServers","ice_servers","password","ttl","username","_context","undefined","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/api/v2010/account/token.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar TokenList;\nvar TokenPage;\nvar TokenInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenList\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTokenList = function TokenList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function tokens\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.TokenContext}\n   */\n  /* jshint ignore:end */\n  function TokenListInstance(sid) {\n    return TokenListInstance.get(sid);\n  }\n\n  TokenListInstance._version = version;\n  // Path Solution\n  TokenListInstance._solution = {accountSid: accountSid};\n  TokenListInstance._uri = `/Accounts/${accountSid}/Tokens.json`;\n  /* jshint ignore:start */\n  /**\n   * create a TokenInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.ttl] - The duration in seconds the credentials are valid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed TokenInstance\n   */\n  /* jshint ignore:end */\n  TokenListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({'Ttl': _.get(opts, 'ttl')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new TokenInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.TokenList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TokenListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TokenListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TokenListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TokenSolution} solution - Path solution\n *\n * @returns TokenPage\n */\n/* jshint ignore:end */\nTokenPage = function TokenPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TokenPage.prototype, Page.prototype);\nTokenPage.prototype.constructor = TokenPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TokenInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @param {TokenPayload} payload - Payload response from the API\n *\n * @returns TokenInstance\n */\n/* jshint ignore:end */\nTokenPage.prototype.getInstance = function getInstance(payload) {\n  return new TokenInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTokenPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTokenPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TokenContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.TokenInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} iceServers - An array representing the ephemeral credentials\n * @property {string} password - The temporary password used for authenticating\n * @property {string} ttl - The duration in seconds the credentials are valid\n * @property {string} username -\n *          The temporary username that uniquely identifies a Token\n *\n * @param {V2010} version - Version of the resource\n * @param {TokenPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nTokenInstance = function TokenInstance(version, payload, accountSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.iceServers = payload.ice_servers; // jshint ignore:line\n  this.password = payload.password; // jshint ignore:line\n  this.ttl = payload.ttl; // jshint ignore:line\n  this.username = payload.username; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.TokenInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTokenInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTokenInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TokenList: TokenList,\n  TokenPage: TokenPage,\n  TokenInstance: TokenInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}