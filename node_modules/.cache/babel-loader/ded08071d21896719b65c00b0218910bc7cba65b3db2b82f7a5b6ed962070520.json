{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Conversations\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebhookListInstance = exports.WebhookInstance = exports.WebhookContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nclass WebhookContextImpl {\n  constructor(_version) {\n    this._version = _version;\n    this._solution = {};\n    this._uri = `/Configuration/Webhooks`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new WebhookInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"method\"] !== undefined) data[\"Method\"] = params[\"method\"];\n    if (params[\"filters\"] !== undefined) data[\"Filters\"] = serialize.map(params[\"filters\"], e => e);\n    if (params[\"preWebhookUrl\"] !== undefined) data[\"PreWebhookUrl\"] = params[\"preWebhookUrl\"];\n    if (params[\"postWebhookUrl\"] !== undefined) data[\"PostWebhookUrl\"] = params[\"postWebhookUrl\"];\n    if (params[\"target\"] !== undefined) data[\"Target\"] = params[\"target\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new WebhookInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.WebhookContextImpl = WebhookContextImpl;\nclass WebhookInstance {\n  constructor(_version, payload) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.method = payload.method;\n    this.filters = payload.filters;\n    this.preWebhookUrl = payload.pre_webhook_url;\n    this.postWebhookUrl = payload.post_webhook_url;\n    this.target = payload.target;\n    this.url = payload.url;\n    this._solution = {};\n  }\n  get _proxy() {\n    this._context = this._context || new WebhookContextImpl(this._version);\n    return this._context;\n  }\n  /**\n   * Fetch a WebhookInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed WebhookInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      method: this.method,\n      filters: this.filters,\n      preWebhookUrl: this.preWebhookUrl,\n      postWebhookUrl: this.postWebhookUrl,\n      target: this.target,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.WebhookInstance = WebhookInstance;\nfunction WebhookListInstance(version) {\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new WebhookContextImpl(version);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.WebhookListInstance = WebhookListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","WebhookListInstance","WebhookInstance","WebhookContextImpl","util_1","require","deserialize","serialize","constructor","_version","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","update","params","Function","data","undefined","map","e","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","filters","preWebhookUrl","pre_webhook_url","postWebhookUrl","post_webhook_url","target","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/conversations/v1/configuration/webhook.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Conversations\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebhookListInstance = exports.WebhookInstance = exports.WebhookContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nclass WebhookContextImpl {\n    constructor(_version) {\n        this._version = _version;\n        this._solution = {};\n        this._uri = `/Configuration/Webhooks`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new WebhookInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"method\"] !== undefined)\n            data[\"Method\"] = params[\"method\"];\n        if (params[\"filters\"] !== undefined)\n            data[\"Filters\"] = serialize.map(params[\"filters\"], (e) => e);\n        if (params[\"preWebhookUrl\"] !== undefined)\n            data[\"PreWebhookUrl\"] = params[\"preWebhookUrl\"];\n        if (params[\"postWebhookUrl\"] !== undefined)\n            data[\"PostWebhookUrl\"] = params[\"postWebhookUrl\"];\n        if (params[\"target\"] !== undefined)\n            data[\"Target\"] = params[\"target\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new WebhookInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.WebhookContextImpl = WebhookContextImpl;\nclass WebhookInstance {\n    constructor(_version, payload) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.method = payload.method;\n        this.filters = payload.filters;\n        this.preWebhookUrl = payload.pre_webhook_url;\n        this.postWebhookUrl = payload.post_webhook_url;\n        this.target = payload.target;\n        this.url = payload.url;\n        this._solution = {};\n    }\n    get _proxy() {\n        this._context = this._context || new WebhookContextImpl(this._version);\n        return this._context;\n    }\n    /**\n     * Fetch a WebhookInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed WebhookInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            method: this.method,\n            filters: this.filters,\n            preWebhookUrl: this.preWebhookUrl,\n            postWebhookUrl: this.postWebhookUrl,\n            target: this.target,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.WebhookInstance = WebhookInstance;\nfunction WebhookListInstance(version) {\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new WebhookContextImpl(version);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.WebhookListInstance = WebhookListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}