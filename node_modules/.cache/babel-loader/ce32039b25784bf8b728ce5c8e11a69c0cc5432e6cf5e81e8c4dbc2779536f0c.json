{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Content\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApprovalFetchListInstance = exports.ApprovalFetchInstance = exports.ApprovalFetchContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass ApprovalFetchContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/Content/${sid}/ApprovalRequests`;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new ApprovalFetchInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ApprovalFetchContextImpl = ApprovalFetchContextImpl;\nclass ApprovalFetchInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.whatsapp = payload.whatsapp;\n    this.url = payload.url;\n    this._solution = {\n      sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new ApprovalFetchContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Fetch a ApprovalFetchInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed ApprovalFetchInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      whatsapp: this.whatsapp,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ApprovalFetchInstance = ApprovalFetchInstance;\nfunction ApprovalFetchListInstance(version, sid) {\n  if (!(0, utility_1.isValidPathParam)(sid)) {\n    throw new Error(\"Parameter 'sid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new ApprovalFetchContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    sid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.ApprovalFetchListInstance = ApprovalFetchListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","ApprovalFetchListInstance","ApprovalFetchInstance","ApprovalFetchContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","fetch","callback","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","accountSid","account_sid","whatsapp","url","_proxy","_context","version","get","inspectImpl"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/content/v1/content/approvalFetch.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Content\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApprovalFetchListInstance = exports.ApprovalFetchInstance = exports.ApprovalFetchContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass ApprovalFetchContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/Content/${sid}/ApprovalRequests`;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new ApprovalFetchInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ApprovalFetchContextImpl = ApprovalFetchContextImpl;\nclass ApprovalFetchInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.whatsapp = payload.whatsapp;\n        this.url = payload.url;\n        this._solution = { sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new ApprovalFetchContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Fetch a ApprovalFetchInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed ApprovalFetchInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            whatsapp: this.whatsapp,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ApprovalFetchInstance = ApprovalFetchInstance;\nfunction ApprovalFetchListInstance(version, sid) {\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n        throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new ApprovalFetchContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = { sid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.ApprovalFetchListInstance = ApprovalFetchListInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}