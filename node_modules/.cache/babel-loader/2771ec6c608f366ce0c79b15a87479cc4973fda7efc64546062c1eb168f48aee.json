{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar dayjs = require('dayjs');\nvar utc = require('dayjs/plugin/utc');\ndayjs.extend(utc);\nmodule.exports = {};\n\n/**\n * @namespace serialize\n */\n\n/**\n * @function iso8601Date\n * @memberOf serialize\n * @description turns a Date object into a string if parameter is a Date\n * otherwise returns the parameter\n *\n * @param  {Date} d date object to format\n * @return {string|object} date formatted in YYYY-MM-DD form\n */\nmodule.exports.iso8601Date = function (d) {\n  if (_.isUndefined(d) || _.isString(d) || !_.isDate(d)) {\n    return d;\n  } else {\n    return dayjs.utc(d).format('YYYY-MM-DD');\n  }\n};\n\n/**\n * @function iso8601DateTime\n * @memberOf serialize\n * @description turns a Date object into a string if parameter is a Date\n * otherwise returns the parameter\n *\n * @param  {Date} d date object to format\n * @return {string|object} date formatted in YYYY-MM-DD[T]HH:mm:ss[Z] form\n */\nmodule.exports.iso8601DateTime = function (d) {\n  if (_.isUndefined(d) || _.isString(d) || !(d instanceof Date)) {\n    return d;\n  } else {\n    return dayjs.utc(d).format('YYYY-MM-DD[T]HH:mm:ss[Z]');\n  }\n};\n\n/**\n * @function prefixedCollapsibleMap\n * @memberOf serialize\n * @description turns a map of params int oa flattened map separated by dots\n * if the parameter is an object, otherwise returns an empty map\n *\n * @param {object} m map to transform\n * @param {string|undefined} prefix to append to each flattened value\n * @return {object} flattened map\n */\nmodule.exports.prefixedCollapsibleMap = function (m, prefix) {\n  if (_.isUndefined(m) || !_.isPlainObject(m)) {\n    return {};\n  }\n  function flatten(m, result, previous) {\n    result = result || {};\n    previous = previous || [];\n    _.each(_.keys(m), function (key) {\n      if (_.isPlainObject(m[key])) {\n        flatten(m[key], result, _.union(previous, [key]));\n      } else {\n        result[_.join(_.union(previous, [key]), '.')] = m[key];\n      }\n    });\n    return result;\n  }\n  var flattened = flatten(m);\n  var result = flattened;\n  if (prefix) {\n    result = {};\n    _.each(_.keys(flattened), function (key) {\n      result[prefix + '.' + key] = flattened[key];\n    });\n  }\n  return result;\n};\n\n/**\n * @function object\n * @memberOf serialize\n * @description turns an object into a JSON string if the parameter\n * is an object, otherwise returns the passed in object\n *\n * @param {object|array} o json object or array\n * @returns {string|object} stringified object\n */\nmodule.exports.object = function (o) {\n  if (_.isObject(o) || _.isArray(o)) {\n    return JSON.stringify(o);\n  }\n  return o;\n};\n\n/**\n * @function bool\n * @memberOf serialize\n * @description coerces a boolean literal into a string\n *\n * @param {boolean|string} input boolean or string to be coerced\n * @returns {string} a string \"true\" or \"false\"\n */\nmodule.exports.bool = function (input) {\n  if (_.isString(input)) {\n    return input;\n  }\n  if (_.isBoolean(input)) {\n    return input.toString();\n  }\n  return input;\n};\n\n/**\n * @function map\n * @memberOf serialize\n * @description maps transform over each element in input if input is an array\n *\n * @param {array} input array to map transform over, if not an array then it is\n * returned as is.\n * @returns {array} new array with transform applied to each element.\n */\nmodule.exports.map = function (input, transform) {\n  if (_.isArray(input)) {\n    return _.map(input, transform);\n  }\n  return input;\n};","map":{"version":3,"names":["_","require","dayjs","utc","extend","module","exports","iso8601Date","d","isUndefined","isString","isDate","format","iso8601DateTime","Date","prefixedCollapsibleMap","m","prefix","isPlainObject","flatten","result","previous","each","keys","key","union","join","flattened","object","o","isObject","isArray","JSON","stringify","bool","input","isBoolean","toString","map","transform"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/base/serialize.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar dayjs = require('dayjs');\nvar utc = require('dayjs/plugin/utc');\n\ndayjs.extend(utc);\n\nmodule.exports = {};\n\n/**\n * @namespace serialize\n */\n\n/**\n * @function iso8601Date\n * @memberOf serialize\n * @description turns a Date object into a string if parameter is a Date\n * otherwise returns the parameter\n *\n * @param  {Date} d date object to format\n * @return {string|object} date formatted in YYYY-MM-DD form\n */\nmodule.exports.iso8601Date = function(d) {\n  if (_.isUndefined(d) || _.isString(d) || !(_.isDate(d))) {\n    return d;\n  } else {\n    return dayjs.utc(d).format('YYYY-MM-DD');\n  }\n};\n\n/**\n * @function iso8601DateTime\n * @memberOf serialize\n * @description turns a Date object into a string if parameter is a Date\n * otherwise returns the parameter\n *\n * @param  {Date} d date object to format\n * @return {string|object} date formatted in YYYY-MM-DD[T]HH:mm:ss[Z] form\n */\nmodule.exports.iso8601DateTime = function(d) {\n  if (_.isUndefined(d) || _.isString(d) || !(d instanceof Date)) {\n    return d;\n  } else {\n    return dayjs.utc(d).format('YYYY-MM-DD[T]HH:mm:ss[Z]');\n  }\n};\n\n/**\n * @function prefixedCollapsibleMap\n * @memberOf serialize\n * @description turns a map of params int oa flattened map separated by dots\n * if the parameter is an object, otherwise returns an empty map\n *\n * @param {object} m map to transform\n * @param {string|undefined} prefix to append to each flattened value\n * @return {object} flattened map\n */\nmodule.exports.prefixedCollapsibleMap = function(m, prefix) {\n  if (_.isUndefined(m) || !_.isPlainObject(m)) {\n    return {};\n  }\n\n  function flatten(m, result, previous) {\n    result = result || {};\n    previous = previous || [];\n\n    _.each(_.keys(m), function(key) {\n      if (_.isPlainObject(m[key])) {\n        flatten(m[key], result, _.union(previous, [key]));\n      } else {\n        result[_.join(_.union(previous, [key]), '.')] = m[key];\n      }\n    });\n\n    return result;\n  }\n\n  var flattened = flatten(m);\n  var result = flattened;\n  if (prefix) {\n    result = {};\n    _.each(_.keys(flattened), function(key) {\n      result[prefix + '.' + key] = flattened[key];\n    });\n  }\n\n  return result;\n};\n\n/**\n * @function object\n * @memberOf serialize\n * @description turns an object into a JSON string if the parameter\n * is an object, otherwise returns the passed in object\n *\n * @param {object|array} o json object or array\n * @returns {string|object} stringified object\n */\nmodule.exports.object = function(o) {\n  if (_.isObject(o) || _.isArray(o)) {\n    return JSON.stringify(o);\n  }\n\n  return o;\n};\n\n/**\n * @function bool\n * @memberOf serialize\n * @description coerces a boolean literal into a string\n *\n * @param {boolean|string} input boolean or string to be coerced\n * @returns {string} a string \"true\" or \"false\"\n */\nmodule.exports.bool = function(input) {\n  if (_.isString(input)) {\n    return input;\n  }\n  if (_.isBoolean(input)) {\n    return input.toString();\n  }\n\n  return input;\n};\n\n\n/**\n * @function map\n * @memberOf serialize\n * @description maps transform over each element in input if input is an array\n *\n * @param {array} input array to map transform over, if not an array then it is\n * returned as is.\n * @returns {array} new array with transform applied to each element.\n */\nmodule.exports.map = function(input, transform) {\n  if (_.isArray(input)) {\n    return _.map(input, transform);\n  }\n  return input;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACzB,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIE,GAAG,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAErCC,KAAK,CAACE,MAAM,CAACD,GAAG,CAAC;AAEjBE,MAAM,CAACC,OAAO,GAAG,CAAC,CAAC;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,MAAM,CAACC,OAAO,CAACC,WAAW,GAAG,UAASC,CAAC,EAAE;EACvC,IAAIR,CAAC,CAACS,WAAW,CAACD,CAAC,CAAC,IAAIR,CAAC,CAACU,QAAQ,CAACF,CAAC,CAAC,IAAI,CAAER,CAAC,CAACW,MAAM,CAACH,CAAC,CAAE,EAAE;IACvD,OAAOA,CAAC;EACV,CAAC,MAAM;IACL,OAAON,KAAK,CAACC,GAAG,CAACK,CAAC,CAAC,CAACI,MAAM,CAAC,YAAY,CAAC;EAC1C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,MAAM,CAACC,OAAO,CAACO,eAAe,GAAG,UAASL,CAAC,EAAE;EAC3C,IAAIR,CAAC,CAACS,WAAW,CAACD,CAAC,CAAC,IAAIR,CAAC,CAACU,QAAQ,CAACF,CAAC,CAAC,IAAI,EAAEA,CAAC,YAAYM,IAAI,CAAC,EAAE;IAC7D,OAAON,CAAC;EACV,CAAC,MAAM;IACL,OAAON,KAAK,CAACC,GAAG,CAACK,CAAC,CAAC,CAACI,MAAM,CAAC,0BAA0B,CAAC;EACxD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,MAAM,CAACC,OAAO,CAACS,sBAAsB,GAAG,UAASC,CAAC,EAAEC,MAAM,EAAE;EAC1D,IAAIjB,CAAC,CAACS,WAAW,CAACO,CAAC,CAAC,IAAI,CAAChB,CAAC,CAACkB,aAAa,CAACF,CAAC,CAAC,EAAE;IAC3C,OAAO,CAAC,CAAC;EACX;EAEA,SAASG,OAAOA,CAACH,CAAC,EAAEI,MAAM,EAAEC,QAAQ,EAAE;IACpCD,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;IACrBC,QAAQ,GAAGA,QAAQ,IAAI,EAAE;IAEzBrB,CAAC,CAACsB,IAAI,CAACtB,CAAC,CAACuB,IAAI,CAACP,CAAC,CAAC,EAAE,UAASQ,GAAG,EAAE;MAC9B,IAAIxB,CAAC,CAACkB,aAAa,CAACF,CAAC,CAACQ,GAAG,CAAC,CAAC,EAAE;QAC3BL,OAAO,CAACH,CAAC,CAACQ,GAAG,CAAC,EAAEJ,MAAM,EAAEpB,CAAC,CAACyB,KAAK,CAACJ,QAAQ,EAAE,CAACG,GAAG,CAAC,CAAC,CAAC;MACnD,CAAC,MAAM;QACLJ,MAAM,CAACpB,CAAC,CAAC0B,IAAI,CAAC1B,CAAC,CAACyB,KAAK,CAACJ,QAAQ,EAAE,CAACG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAGR,CAAC,CAACQ,GAAG,CAAC;MACxD;IACF,CAAC,CAAC;IAEF,OAAOJ,MAAM;EACf;EAEA,IAAIO,SAAS,GAAGR,OAAO,CAACH,CAAC,CAAC;EAC1B,IAAII,MAAM,GAAGO,SAAS;EACtB,IAAIV,MAAM,EAAE;IACVG,MAAM,GAAG,CAAC,CAAC;IACXpB,CAAC,CAACsB,IAAI,CAACtB,CAAC,CAACuB,IAAI,CAACI,SAAS,CAAC,EAAE,UAASH,GAAG,EAAE;MACtCJ,MAAM,CAACH,MAAM,GAAG,GAAG,GAAGO,GAAG,CAAC,GAAGG,SAAS,CAACH,GAAG,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,MAAM,CAACC,OAAO,CAACsB,MAAM,GAAG,UAASC,CAAC,EAAE;EAClC,IAAI7B,CAAC,CAAC8B,QAAQ,CAACD,CAAC,CAAC,IAAI7B,CAAC,CAAC+B,OAAO,CAACF,CAAC,CAAC,EAAE;IACjC,OAAOG,IAAI,CAACC,SAAS,CAACJ,CAAC,CAAC;EAC1B;EAEA,OAAOA,CAAC;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxB,MAAM,CAACC,OAAO,CAAC4B,IAAI,GAAG,UAASC,KAAK,EAAE;EACpC,IAAInC,CAAC,CAACU,QAAQ,CAACyB,KAAK,CAAC,EAAE;IACrB,OAAOA,KAAK;EACd;EACA,IAAInC,CAAC,CAACoC,SAAS,CAACD,KAAK,CAAC,EAAE;IACtB,OAAOA,KAAK,CAACE,QAAQ,CAAC,CAAC;EACzB;EAEA,OAAOF,KAAK;AACd,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9B,MAAM,CAACC,OAAO,CAACgC,GAAG,GAAG,UAASH,KAAK,EAAEI,SAAS,EAAE;EAC9C,IAAIvC,CAAC,CAAC+B,OAAO,CAACI,KAAK,CAAC,EAAE;IACpB,OAAOnC,CAAC,CAACsC,GAAG,CAACH,KAAK,EAAEI,SAAS,CAAC;EAChC;EACA,OAAOJ,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}