{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar RecordingList;\nvar RecordingPage;\nvar RecordingInstance;\nvar RecordingContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRecordingList = function RecordingList(version, trunkSid) {\n  /* jshint ignore:start */\n  /**\n   * @function recordings\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n  /* jshint ignore:end */\n  function RecordingListInstance(sid) {\n    return RecordingListInstance.get(sid);\n  }\n  RecordingListInstance._version = version;\n  // Path Solution\n  RecordingListInstance._solution = {\n    trunkSid: trunkSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a recording\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n  /* jshint ignore:end */\n  RecordingListInstance.get = function get() {\n    return new RecordingContext(this._version, this._solution.trunkSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RecordingListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  RecordingListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return RecordingListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RecordingSolution} solution - Path solution\n *\n * @returns RecordingPage\n */\n/* jshint ignore:end */\nRecordingPage = function RecordingPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(RecordingPage.prototype, Page.prototype);\nRecordingPage.prototype.constructor = RecordingPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RecordingInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @param {RecordingPayload} payload - Payload response from the API\n *\n * @returns RecordingInstance\n */\n/* jshint ignore:end */\nRecordingPage.prototype.getInstance = function getInstance(payload) {\n  return new RecordingInstance(this._version, payload, this._solution.trunkSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nRecordingPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingInstance\n *\n * @property {recording.recording_mode} mode - The recording mode for the trunk.\n * @property {recording.recording_trim} trim -\n *          The recording trim setting for the trunk.\n *\n * @param {V1} version - Version of the resource\n * @param {RecordingPayload} payload - The instance payload\n * @param {sid} trunkSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRecordingInstance = function RecordingInstance(version, payload, trunkSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.mode = payload.mode; // jshint ignore:line\n  this.trim = payload.trim; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    trunkSid: trunkSid\n  };\n};\nObject.defineProperty(RecordingInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new RecordingContext(this._version, this._solution.trunkSid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nRecordingInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the recording settings.\n */\n/* jshint ignore:end */\nRecordingContext = function RecordingContext(version, trunkSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    trunkSid: trunkSid\n  };\n  this._uri = `/Trunks/${trunkSid}/Recording`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Mode': _.get(opts, 'mode'),\n    'Trim': _.get(opts, 'trim')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nRecordingContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  RecordingList: RecordingList,\n  RecordingPage: RecordingPage,\n  RecordingInstance: RecordingInstance,\n  RecordingContext: RecordingContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","RecordingList","RecordingPage","RecordingInstance","RecordingContext","version","trunkSid","RecordingListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","mode","trim","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","data","of","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/trunking/v1/trunk/recording.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar RecordingList;\nvar RecordingPage;\nvar RecordingInstance;\nvar RecordingContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRecordingList = function RecordingList(version, trunkSid) {\n  /* jshint ignore:start */\n  /**\n   * @function recordings\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n  /* jshint ignore:end */\n  function RecordingListInstance(sid) {\n    return RecordingListInstance.get(sid);\n  }\n\n  RecordingListInstance._version = version;\n  // Path Solution\n  RecordingListInstance._solution = {trunkSid: trunkSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a recording\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.RecordingContext}\n   */\n  /* jshint ignore:end */\n  RecordingListInstance.get = function get() {\n    return new RecordingContext(this._version, this._solution.trunkSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.RecordingList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RecordingListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RecordingListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RecordingListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RecordingSolution} solution - Path solution\n *\n * @returns RecordingPage\n */\n/* jshint ignore:end */\nRecordingPage = function RecordingPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RecordingPage.prototype, Page.prototype);\nRecordingPage.prototype.constructor = RecordingPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RecordingInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @param {RecordingPayload} payload - Payload response from the API\n *\n * @returns RecordingInstance\n */\n/* jshint ignore:end */\nRecordingPage.prototype.getInstance = function getInstance(payload) {\n  return new RecordingInstance(this._version, payload, this._solution.trunkSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRecordingPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingInstance\n *\n * @property {recording.recording_mode} mode - The recording mode for the trunk.\n * @property {recording.recording_trim} trim -\n *          The recording trim setting for the trunk.\n *\n * @param {V1} version - Version of the resource\n * @param {RecordingPayload} payload - The instance payload\n * @param {sid} trunkSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRecordingInstance = function RecordingInstance(version, payload, trunkSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.mode = payload.mode; // jshint ignore:line\n  this.trim = payload.trim; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {trunkSid: trunkSid, };\n};\n\nObject.defineProperty(RecordingInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new RecordingContext(this._version, this._solution.trunkSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRecordingInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.RecordingContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the recording settings.\n */\n/* jshint ignore:end */\nRecordingContext = function RecordingContext(version, trunkSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {trunkSid: trunkSid, };\n  this._uri = `/Trunks/${trunkSid}/Recording`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a RecordingInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {recording.recording_mode} [opts.mode] -\n *          The recording mode for the trunk.\n * @param {recording.recording_trim} [opts.trim] -\n *          The recording trim setting for the trunk.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingInstance\n */\n/* jshint ignore:end */\nRecordingContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Mode': _.get(opts, 'mode'), 'Trim': _.get(opts, 'trim')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RecordingInstance(this._version, payload, this._solution.trunkSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.RecordingContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRecordingContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RecordingList: RecordingList,\n  RecordingPage: RecordingPage,\n  RecordingInstance: RecordingInstance,\n  RecordingContext: RecordingContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}