{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Supersim\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UsageRecordPage = exports.UsageRecordInstance = exports.UsageRecordListInstance = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nfunction UsageRecordListInstance(version) {\n  const instance = {};\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/UsageRecords`;\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"sim\"] !== undefined) data[\"Sim\"] = params[\"sim\"];\n    if (params[\"fleet\"] !== undefined) data[\"Fleet\"] = params[\"fleet\"];\n    if (params[\"network\"] !== undefined) data[\"Network\"] = params[\"network\"];\n    if (params[\"isoCountry\"] !== undefined) data[\"IsoCountry\"] = params[\"isoCountry\"];\n    if (params[\"group\"] !== undefined) data[\"Group\"] = params[\"group\"];\n    if (params[\"granularity\"] !== undefined) data[\"Granularity\"] = params[\"granularity\"];\n    if (params[\"startTime\"] !== undefined) data[\"StartTime\"] = serialize.iso8601DateTime(params[\"startTime\"]);\n    if (params[\"endTime\"] !== undefined) data[\"EndTime\"] = serialize.iso8601DateTime(params[\"endTime\"]);\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new UsageRecordPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new UsageRecordPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.UsageRecordListInstance = UsageRecordListInstance;\nclass UsageRecordInstance {\n  constructor(_version, payload) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.simSid = payload.sim_sid;\n    this.networkSid = payload.network_sid;\n    this.fleetSid = payload.fleet_sid;\n    this.isoCountry = payload.iso_country;\n    this.period = payload.period;\n    this.dataUpload = payload.data_upload;\n    this.dataDownload = payload.data_download;\n    this.dataTotal = payload.data_total;\n    this.dataTotalBilled = payload.data_total_billed;\n    this.billedUnit = payload.billed_unit;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      simSid: this.simSid,\n      networkSid: this.networkSid,\n      fleetSid: this.fleetSid,\n      isoCountry: this.isoCountry,\n      period: this.period,\n      dataUpload: this.dataUpload,\n      dataDownload: this.dataDownload,\n      dataTotal: this.dataTotal,\n      dataTotalBilled: this.dataTotalBilled,\n      billedUnit: this.billedUnit\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UsageRecordInstance = UsageRecordInstance;\nclass UsageRecordPage extends Page_1.default {\n  /**\n   * Initialize the UsageRecordPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of UsageRecordInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new UsageRecordInstance(this._version, payload);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UsageRecordPage = UsageRecordPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","UsageRecordPage","UsageRecordInstance","UsageRecordListInstance","util_1","require","Page_1","deserialize","serialize","version","instance","_version","_solution","_uri","page","params","callback","Function","data","undefined","iso8601DateTime","pageNumber","pageToken","headers","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","toJSON","inspect","custom","inspectImpl","_depth","options","constructor","accountSid","account_sid","simSid","sim_sid","networkSid","network_sid","fleetSid","fleet_sid","isoCountry","iso_country","period","dataUpload","data_upload","dataDownload","data_download","dataTotal","data_total","dataTotalBilled","data_total_billed","billedUnit","billed_unit","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/supersim/v1/usageRecord.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Supersim\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UsageRecordPage = exports.UsageRecordInstance = exports.UsageRecordListInstance = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nfunction UsageRecordListInstance(version) {\n    const instance = {};\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/UsageRecords`;\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"sim\"] !== undefined)\n            data[\"Sim\"] = params[\"sim\"];\n        if (params[\"fleet\"] !== undefined)\n            data[\"Fleet\"] = params[\"fleet\"];\n        if (params[\"network\"] !== undefined)\n            data[\"Network\"] = params[\"network\"];\n        if (params[\"isoCountry\"] !== undefined)\n            data[\"IsoCountry\"] = params[\"isoCountry\"];\n        if (params[\"group\"] !== undefined)\n            data[\"Group\"] = params[\"group\"];\n        if (params[\"granularity\"] !== undefined)\n            data[\"Granularity\"] = params[\"granularity\"];\n        if (params[\"startTime\"] !== undefined)\n            data[\"StartTime\"] = serialize.iso8601DateTime(params[\"startTime\"]);\n        if (params[\"endTime\"] !== undefined)\n            data[\"EndTime\"] = serialize.iso8601DateTime(params[\"endTime\"]);\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new UsageRecordPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new UsageRecordPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.UsageRecordListInstance = UsageRecordListInstance;\nclass UsageRecordInstance {\n    constructor(_version, payload) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.simSid = payload.sim_sid;\n        this.networkSid = payload.network_sid;\n        this.fleetSid = payload.fleet_sid;\n        this.isoCountry = payload.iso_country;\n        this.period = payload.period;\n        this.dataUpload = payload.data_upload;\n        this.dataDownload = payload.data_download;\n        this.dataTotal = payload.data_total;\n        this.dataTotalBilled = payload.data_total_billed;\n        this.billedUnit = payload.billed_unit;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            simSid: this.simSid,\n            networkSid: this.networkSid,\n            fleetSid: this.fleetSid,\n            isoCountry: this.isoCountry,\n            period: this.period,\n            dataUpload: this.dataUpload,\n            dataDownload: this.dataDownload,\n            dataTotal: this.dataTotal,\n            dataTotalBilled: this.dataTotalBilled,\n            billedUnit: this.billedUnit,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UsageRecordInstance = UsageRecordInstance;\nclass UsageRecordPage extends Page_1.default {\n    /**\n     * Initialize the UsageRecordPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of UsageRecordInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new UsageRecordInstance(this._version, payload);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UsageRecordPage = UsageRecordPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}