{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar WorkflowCumulativeStatisticsList = require('./workflow/workflowCumulativeStatistics').WorkflowCumulativeStatisticsList;\nvar WorkflowRealTimeStatisticsList = require('./workflow/workflowRealTimeStatistics').WorkflowRealTimeStatisticsList;\nvar WorkflowStatisticsList = require('./workflow/workflowStatistics').WorkflowStatisticsList;\nvar deserialize = require('../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar WorkflowList;\nvar WorkflowPage;\nvar WorkflowInstance;\nvar WorkflowContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n */\n/* jshint ignore:end */\nWorkflowList = function WorkflowList(version, workspaceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function workflows\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext}\n   */\n  /* jshint ignore:end */\n  function WorkflowListInstance(sid) {\n    return WorkflowListInstance.get(sid);\n  }\n  WorkflowListInstance._version = version;\n  // Path Solution\n  WorkflowListInstance._solution = {\n    workspaceSid: workspaceSid\n  };\n  WorkflowListInstance._uri = `/Workspaces/${workspaceSid}/Workflows`;\n  /* jshint ignore:start */\n  /**\n   * Streams WorkflowInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workflow resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists WorkflowInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workflow resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of WorkflowInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workflow resources to read\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkflowPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of WorkflowInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkflowPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a WorkflowInstance\n   *\n   * @function create\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *         descriptive string that you create to describe the Workflow resource\n   * @param {string} opts.configuration -\n   *          A JSON string that contains the rules to apply to the Workflow\n   * @param {string} [opts.assignmentCallbackUrl] -\n   *          The URL from your application that will process task assignment events\n   * @param {string} [opts.fallbackAssignmentCallbackUrl] -\n   *          The URL that we should call when a call to the `assignment_callback_url` fails\n   * @param {number} [opts.taskReservationTimeout] -\n   *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed WorkflowInstance\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n    if (_.isUndefined(opts.configuration)) {\n      throw new Error('Required parameter \"opts.configuration\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Configuration': _.get(opts, 'configuration'),\n      'AssignmentCallbackUrl': _.get(opts, 'assignmentCallbackUrl'),\n      'FallbackAssignmentCallbackUrl': _.get(opts, 'fallbackAssignmentCallbackUrl'),\n      'TaskReservationTimeout': _.get(opts, 'taskReservationTimeout')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkflowInstance(this._version, payload, this._solution.workspaceSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a workflow\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {string} sid - The SID of the resource\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext}\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.get = function get(sid) {\n    return new WorkflowContext(this._version, this._solution.workspaceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  WorkflowListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return WorkflowListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkflowSolution} solution - Path solution\n *\n * @returns WorkflowPage\n */\n/* jshint ignore:end */\nWorkflowPage = function WorkflowPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(WorkflowPage.prototype, Page.prototype);\nWorkflowPage.prototype.constructor = WorkflowPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkflowInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowPage#\n *\n * @param {WorkflowPayload} payload - Payload response from the API\n *\n * @returns WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkflowInstance(this._version, payload, this._solution.workspaceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWorkflowPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} assignmentCallbackUrl -\n *          The URL that we call when a task managed by the Workflow is assigned to a Worker\n * @property {string} configuration -\n *          A JSON string that contains the Workflow's configuration\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} documentContentType - The MIME type of the document\n * @property {string} fallbackAssignmentCallbackUrl -\n *          The URL that we call when a call to the `assignment_callback_url` fails\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Workflow resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {number} taskReservationTimeout -\n *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n * @property {string} url - The absolute URL of the Workflow resource\n * @property {string} links - The URLs of related resources\n *\n * @param {V1} version - Version of the resource\n * @param {WorkflowPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workflow\n * @param {sid} sid - The SID of the resource\n */\n/* jshint ignore:end */\nWorkflowInstance = function WorkflowInstance(version, payload, workspaceSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.assignmentCallbackUrl = payload.assignment_callback_url; // jshint ignore:line\n  this.configuration = payload.configuration; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.documentContentType = payload.document_content_type; // jshint ignore:line\n  this.fallbackAssignmentCallbackUrl = payload.fallback_assignment_callback_url; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.taskReservationTimeout = deserialize.integer(payload.task_reservation_timeout); // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(WorkflowInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkflowContext(this._version, this._solution.workspaceSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkflowInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *         descriptive string that you create to describe the Workflow resource\n * @param {string} [opts.assignmentCallbackUrl] -\n *          The URL from your application that will process task assignment events\n * @param {string} [opts.fallbackAssignmentCallbackUrl] -\n *          The URL that we should call when a call to the `assignment_callback_url` fails\n * @param {string} [opts.configuration] -\n *          A JSON string that contains the rules to apply to the Workflow\n * @param {number} [opts.taskReservationTimeout] -\n *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n * @param {string} [opts.reEvaluateTasks] - Whether or not to re-evaluate Tasks\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkflowInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the statistics\n *\n * @function statistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList}\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.statistics = function statistics() {\n  return this._proxy.statistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the realTimeStatistics\n *\n * @function realTimeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList}\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.realTimeStatistics = function realTimeStatistics() {\n  return this._proxy.realTimeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the cumulativeStatistics\n *\n * @function cumulativeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowCumulativeStatisticsList}\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.cumulativeStatistics = function cumulativeStatistics() {\n  return this._proxy.cumulativeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWorkflowInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext\n *\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList} statistics -\n *          statistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList} realTimeStatistics -\n *          realTimeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowCumulativeStatisticsList} cumulativeStatistics -\n *          cumulativeStatistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Workflow to fetch\n * @param {sid} sid - The SID of the resource\n */\n/* jshint ignore:end */\nWorkflowContext = function WorkflowContext(version, workspaceSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    workspaceSid: workspaceSid,\n    sid: sid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/Workflows/${sid}`;\n\n  // Dependents\n  this._statistics = undefined;\n  this._realTimeStatistics = undefined;\n  this._cumulativeStatistics = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkflowInstance(this._version, payload, this._solution.workspaceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkflowInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *         descriptive string that you create to describe the Workflow resource\n * @param {string} [opts.assignmentCallbackUrl] -\n *          The URL from your application that will process task assignment events\n * @param {string} [opts.fallbackAssignmentCallbackUrl] -\n *          The URL that we should call when a call to the `assignment_callback_url` fails\n * @param {string} [opts.configuration] -\n *          A JSON string that contains the rules to apply to the Workflow\n * @param {number} [opts.taskReservationTimeout] -\n *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n * @param {string} [opts.reEvaluateTasks] - Whether or not to re-evaluate Tasks\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'AssignmentCallbackUrl': _.get(opts, 'assignmentCallbackUrl'),\n    'FallbackAssignmentCallbackUrl': _.get(opts, 'fallbackAssignmentCallbackUrl'),\n    'Configuration': _.get(opts, 'configuration'),\n    'TaskReservationTimeout': _.get(opts, 'taskReservationTimeout'),\n    'ReEvaluateTasks': _.get(opts, 'reEvaluateTasks')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkflowInstance(this._version, payload, this._solution.workspaceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkflowInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(WorkflowContext.prototype, 'statistics', {\n  get: function () {\n    if (!this._statistics) {\n      this._statistics = new WorkflowStatisticsList(this._version, this._solution.workspaceSid, this._solution.sid);\n    }\n    return this._statistics;\n  }\n});\nObject.defineProperty(WorkflowContext.prototype, 'realTimeStatistics', {\n  get: function () {\n    if (!this._realTimeStatistics) {\n      this._realTimeStatistics = new WorkflowRealTimeStatisticsList(this._version, this._solution.workspaceSid, this._solution.sid);\n    }\n    return this._realTimeStatistics;\n  }\n});\nObject.defineProperty(WorkflowContext.prototype, 'cumulativeStatistics', {\n  get: function () {\n    if (!this._cumulativeStatistics) {\n      this._cumulativeStatistics = new WorkflowCumulativeStatisticsList(this._version, this._solution.workspaceSid, this._solution.sid);\n    }\n    return this._cumulativeStatistics;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nWorkflowContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  WorkflowList: WorkflowList,\n  WorkflowPage: WorkflowPage,\n  WorkflowInstance: WorkflowInstance,\n  WorkflowContext: WorkflowContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","WorkflowCumulativeStatisticsList","WorkflowRealTimeStatisticsList","WorkflowStatisticsList","deserialize","values","WorkflowList","WorkflowPage","WorkflowInstance","WorkflowContext","version","workspaceSid","WorkflowListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","friendlyName","configuration","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","assignmentCallbackUrl","assignment_callback_url","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","documentContentType","document_content_type","fallbackAssignmentCallbackUrl","fallback_assignment_callback_url","friendly_name","taskReservationTimeout","integer","task_reservation_timeout","workspace_sid","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","statistics","realTimeStatistics","cumulativeStatistics","_statistics","_realTimeStatistics","_cumulativeStatistics","module","exports"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/taskrouter/v1/workspace/workflow.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar WorkflowCumulativeStatisticsList = require(\n    './workflow/workflowCumulativeStatistics').WorkflowCumulativeStatisticsList;\nvar WorkflowRealTimeStatisticsList = require(\n    './workflow/workflowRealTimeStatistics').WorkflowRealTimeStatisticsList;\nvar WorkflowStatisticsList = require(\n    './workflow/workflowStatistics').WorkflowStatisticsList;\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar WorkflowList;\nvar WorkflowPage;\nvar WorkflowInstance;\nvar WorkflowContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n */\n/* jshint ignore:end */\nWorkflowList = function WorkflowList(version, workspaceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function workflows\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext}\n   */\n  /* jshint ignore:end */\n  function WorkflowListInstance(sid) {\n    return WorkflowListInstance.get(sid);\n  }\n\n  WorkflowListInstance._version = version;\n  // Path Solution\n  WorkflowListInstance._solution = {workspaceSid: workspaceSid};\n  WorkflowListInstance._uri = `/Workspaces/${workspaceSid}/Workflows`;\n  /* jshint ignore:start */\n  /**\n   * Streams WorkflowInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workflow resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists WorkflowInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workflow resources to read\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of WorkflowInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          The friendly_name of the Workflow resources to read\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkflowPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of WorkflowInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkflowPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a WorkflowInstance\n   *\n   * @function create\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *         descriptive string that you create to describe the Workflow resource\n   * @param {string} opts.configuration -\n   *          A JSON string that contains the rules to apply to the Workflow\n   * @param {string} [opts.assignmentCallbackUrl] -\n   *          The URL from your application that will process task assignment events\n   * @param {string} [opts.fallbackAssignmentCallbackUrl] -\n   *          The URL that we should call when a call to the `assignment_callback_url` fails\n   * @param {number} [opts.taskReservationTimeout] -\n   *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed WorkflowInstance\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n    if (_.isUndefined(opts.configuration)) {\n      throw new Error('Required parameter \"opts.configuration\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Configuration': _.get(opts, 'configuration'),\n      'AssignmentCallbackUrl': _.get(opts, 'assignmentCallbackUrl'),\n      'FallbackAssignmentCallbackUrl': _.get(opts, 'fallbackAssignmentCallbackUrl'),\n      'TaskReservationTimeout': _.get(opts, 'taskReservationTimeout')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkflowInstance(\n        this._version,\n        payload,\n        this._solution.workspaceSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a workflow\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @param {string} sid - The SID of the resource\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext}\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.get = function get(sid) {\n    return new WorkflowContext(this._version, this._solution.workspaceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkflowListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkflowListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkflowListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkflowSolution} solution - Path solution\n *\n * @returns WorkflowPage\n */\n/* jshint ignore:end */\nWorkflowPage = function WorkflowPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkflowPage.prototype, Page.prototype);\nWorkflowPage.prototype.constructor = WorkflowPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkflowInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowPage#\n *\n * @param {WorkflowPayload} payload - Payload response from the API\n *\n * @returns WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkflowInstance(this._version, payload, this._solution.workspaceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkflowPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} assignmentCallbackUrl -\n *          The URL that we call when a task managed by the Workflow is assigned to a Worker\n * @property {string} configuration -\n *          A JSON string that contains the Workflow's configuration\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} documentContentType - The MIME type of the document\n * @property {string} fallbackAssignmentCallbackUrl -\n *          The URL that we call when a call to the `assignment_callback_url` fails\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Workflow resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {number} taskReservationTimeout -\n *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workflow\n * @property {string} url - The absolute URL of the Workflow resource\n * @property {string} links - The URLs of related resources\n *\n * @param {V1} version - Version of the resource\n * @param {WorkflowPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workflow\n * @param {sid} sid - The SID of the resource\n */\n/* jshint ignore:end */\nWorkflowInstance = function WorkflowInstance(version, payload, workspaceSid,\n                                              sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.assignmentCallbackUrl = payload.assignment_callback_url; // jshint ignore:line\n  this.configuration = payload.configuration; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.documentContentType = payload.document_content_type; // jshint ignore:line\n  this.fallbackAssignmentCallbackUrl = payload.fallback_assignment_callback_url; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.taskReservationTimeout = deserialize.integer(payload.task_reservation_timeout); // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(WorkflowInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkflowContext(this._version, this._solution.workspaceSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkflowInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *         descriptive string that you create to describe the Workflow resource\n * @param {string} [opts.assignmentCallbackUrl] -\n *          The URL from your application that will process task assignment events\n * @param {string} [opts.fallbackAssignmentCallbackUrl] -\n *          The URL that we should call when a call to the `assignment_callback_url` fails\n * @param {string} [opts.configuration] -\n *          A JSON string that contains the rules to apply to the Workflow\n * @param {number} [opts.taskReservationTimeout] -\n *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n * @param {string} [opts.reEvaluateTasks] - Whether or not to re-evaluate Tasks\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkflowInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the statistics\n *\n * @function statistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList}\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.statistics = function statistics() {\n  return this._proxy.statistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the realTimeStatistics\n *\n * @function realTimeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList}\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.realTimeStatistics = function realTimeStatistics() {\n  return this._proxy.realTimeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the cumulativeStatistics\n *\n * @function cumulativeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowCumulativeStatisticsList}\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.cumulativeStatistics = function\n    cumulativeStatistics() {\n  return this._proxy.cumulativeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkflowInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkflowContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext\n *\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowStatisticsList} statistics -\n *          statistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowRealTimeStatisticsList} realTimeStatistics -\n *          realTimeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext.WorkflowCumulativeStatisticsList} cumulativeStatistics -\n *          cumulativeStatistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the Workflow to fetch\n * @param {sid} sid - The SID of the resource\n */\n/* jshint ignore:end */\nWorkflowContext = function WorkflowContext(version, workspaceSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, sid: sid, };\n  this._uri = `/Workspaces/${workspaceSid}/Workflows/${sid}`;\n\n  // Dependents\n  this._statistics = undefined;\n  this._realTimeStatistics = undefined;\n  this._cumulativeStatistics = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkflowInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkflowInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkflowInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *         descriptive string that you create to describe the Workflow resource\n * @param {string} [opts.assignmentCallbackUrl] -\n *          The URL from your application that will process task assignment events\n * @param {string} [opts.fallbackAssignmentCallbackUrl] -\n *          The URL that we should call when a call to the `assignment_callback_url` fails\n * @param {string} [opts.configuration] -\n *          A JSON string that contains the rules to apply to the Workflow\n * @param {number} [opts.taskReservationTimeout] -\n *          How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker\n * @param {string} [opts.reEvaluateTasks] - Whether or not to re-evaluate Tasks\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'AssignmentCallbackUrl': _.get(opts, 'assignmentCallbackUrl'),\n    'FallbackAssignmentCallbackUrl': _.get(opts, 'fallbackAssignmentCallbackUrl'),\n    'Configuration': _.get(opts, 'configuration'),\n    'TaskReservationTimeout': _.get(opts, 'taskReservationTimeout'),\n    'ReEvaluateTasks': _.get(opts, 'reEvaluateTasks')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkflowInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkflowInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkflowInstance\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(WorkflowContext.prototype,\n  'statistics', {\n    get: function() {\n      if (!this._statistics) {\n        this._statistics = new WorkflowStatisticsList(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.sid\n        );\n      }\n      return this._statistics;\n    }\n});\n\nObject.defineProperty(WorkflowContext.prototype,\n  'realTimeStatistics', {\n    get: function() {\n      if (!this._realTimeStatistics) {\n        this._realTimeStatistics = new WorkflowRealTimeStatisticsList(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.sid\n        );\n      }\n      return this._realTimeStatistics;\n    }\n});\n\nObject.defineProperty(WorkflowContext.prototype,\n  'cumulativeStatistics', {\n    get: function() {\n      if (!this._cumulativeStatistics) {\n        this._cumulativeStatistics = new WorkflowCumulativeStatisticsList(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.sid\n        );\n      }\n      return this._cumulativeStatistics;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkflowContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkflowContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkflowContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkflowList: WorkflowList,\n  WorkflowPage: WorkflowPage,\n  WorkflowInstance: WorkflowInstance,\n  WorkflowContext: WorkflowContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}