{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServicePage = exports.ServiceListInstance = exports.ServiceInstance = exports.ServiceContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst channel_1 = require(\"./service/channel\");\nconst role_1 = require(\"./service/role\");\nconst user_1 = require(\"./service/user\");\nclass ServiceContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/Services/${sid}`;\n  }\n  get channels() {\n    this._channels = this._channels || (0, channel_1.ChannelListInstance)(this._version, this._solution.sid);\n    return this._channels;\n  }\n  get roles() {\n    this._roles = this._roles || (0, role_1.RoleListInstance)(this._version, this._solution.sid);\n    return this._roles;\n  }\n  get users() {\n    this._users = this._users || (0, user_1.UserListInstance)(this._version, this._solution.sid);\n    return this._users;\n  }\n  remove(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\"\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\"\n      });\n    operationPromise = operationPromise.then(payload => new ServiceInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"defaultServiceRoleSid\"] !== undefined) data[\"DefaultServiceRoleSid\"] = params[\"defaultServiceRoleSid\"];\n    if (params[\"defaultChannelRoleSid\"] !== undefined) data[\"DefaultChannelRoleSid\"] = params[\"defaultChannelRoleSid\"];\n    if (params[\"defaultChannelCreatorRoleSid\"] !== undefined) data[\"DefaultChannelCreatorRoleSid\"] = params[\"defaultChannelCreatorRoleSid\"];\n    if (params[\"readStatusEnabled\"] !== undefined) data[\"ReadStatusEnabled\"] = serialize.bool(params[\"readStatusEnabled\"]);\n    if (params[\"reachabilityEnabled\"] !== undefined) data[\"ReachabilityEnabled\"] = serialize.bool(params[\"reachabilityEnabled\"]);\n    if (params[\"typingIndicatorTimeout\"] !== undefined) data[\"TypingIndicatorTimeout\"] = params[\"typingIndicatorTimeout\"];\n    if (params[\"consumptionReportInterval\"] !== undefined) data[\"ConsumptionReportInterval\"] = params[\"consumptionReportInterval\"];\n    if (params[\"notifications.newMessage.enabled\"] !== undefined) data[\"Notifications.NewMessage.Enabled\"] = serialize.bool(params[\"notifications.newMessage.enabled\"]);\n    if (params[\"notifications.newMessage.template\"] !== undefined) data[\"Notifications.NewMessage.Template\"] = params[\"notifications.newMessage.template\"];\n    if (params[\"notifications.addedToChannel.enabled\"] !== undefined) data[\"Notifications.AddedToChannel.Enabled\"] = serialize.bool(params[\"notifications.addedToChannel.enabled\"]);\n    if (params[\"notifications.addedToChannel.template\"] !== undefined) data[\"Notifications.AddedToChannel.Template\"] = params[\"notifications.addedToChannel.template\"];\n    if (params[\"notifications.removedFromChannel.enabled\"] !== undefined) data[\"Notifications.RemovedFromChannel.Enabled\"] = serialize.bool(params[\"notifications.removedFromChannel.enabled\"]);\n    if (params[\"notifications.removedFromChannel.template\"] !== undefined) data[\"Notifications.RemovedFromChannel.Template\"] = params[\"notifications.removedFromChannel.template\"];\n    if (params[\"notifications.invitedToChannel.enabled\"] !== undefined) data[\"Notifications.InvitedToChannel.Enabled\"] = serialize.bool(params[\"notifications.invitedToChannel.enabled\"]);\n    if (params[\"notifications.invitedToChannel.template\"] !== undefined) data[\"Notifications.InvitedToChannel.Template\"] = params[\"notifications.invitedToChannel.template\"];\n    if (params[\"preWebhookUrl\"] !== undefined) data[\"PreWebhookUrl\"] = params[\"preWebhookUrl\"];\n    if (params[\"postWebhookUrl\"] !== undefined) data[\"PostWebhookUrl\"] = params[\"postWebhookUrl\"];\n    if (params[\"webhookMethod\"] !== undefined) data[\"WebhookMethod\"] = params[\"webhookMethod\"];\n    if (params[\"webhookFilters\"] !== undefined) data[\"WebhookFilters\"] = serialize.map(params[\"webhookFilters\"], e => e);\n    if (params[\"webhooks.onMessageSend.url\"] !== undefined) data[\"Webhooks.OnMessageSend.Url\"] = params[\"webhooks.onMessageSend.url\"];\n    if (params[\"webhooks.onMessageSend.method\"] !== undefined) data[\"Webhooks.OnMessageSend.Method\"] = params[\"webhooks.onMessageSend.method\"];\n    if (params[\"webhooks.onMessageUpdate.url\"] !== undefined) data[\"Webhooks.OnMessageUpdate.Url\"] = params[\"webhooks.onMessageUpdate.url\"];\n    if (params[\"webhooks.onMessageUpdate.method\"] !== undefined) data[\"Webhooks.OnMessageUpdate.Method\"] = params[\"webhooks.onMessageUpdate.method\"];\n    if (params[\"webhooks.onMessageRemove.url\"] !== undefined) data[\"Webhooks.OnMessageRemove.Url\"] = params[\"webhooks.onMessageRemove.url\"];\n    if (params[\"webhooks.onMessageRemove.method\"] !== undefined) data[\"Webhooks.OnMessageRemove.Method\"] = params[\"webhooks.onMessageRemove.method\"];\n    if (params[\"webhooks.onChannelAdd.url\"] !== undefined) data[\"Webhooks.OnChannelAdd.Url\"] = params[\"webhooks.onChannelAdd.url\"];\n    if (params[\"webhooks.onChannelAdd.method\"] !== undefined) data[\"Webhooks.OnChannelAdd.Method\"] = params[\"webhooks.onChannelAdd.method\"];\n    if (params[\"webhooks.onChannelDestroy.url\"] !== undefined) data[\"Webhooks.OnChannelDestroy.Url\"] = params[\"webhooks.onChannelDestroy.url\"];\n    if (params[\"webhooks.onChannelDestroy.method\"] !== undefined) data[\"Webhooks.OnChannelDestroy.Method\"] = params[\"webhooks.onChannelDestroy.method\"];\n    if (params[\"webhooks.onChannelUpdate.url\"] !== undefined) data[\"Webhooks.OnChannelUpdate.Url\"] = params[\"webhooks.onChannelUpdate.url\"];\n    if (params[\"webhooks.onChannelUpdate.method\"] !== undefined) data[\"Webhooks.OnChannelUpdate.Method\"] = params[\"webhooks.onChannelUpdate.method\"];\n    if (params[\"webhooks.onMemberAdd.url\"] !== undefined) data[\"Webhooks.OnMemberAdd.Url\"] = params[\"webhooks.onMemberAdd.url\"];\n    if (params[\"webhooks.onMemberAdd.method\"] !== undefined) data[\"Webhooks.OnMemberAdd.Method\"] = params[\"webhooks.onMemberAdd.method\"];\n    if (params[\"webhooks.onMemberRemove.url\"] !== undefined) data[\"Webhooks.OnMemberRemove.Url\"] = params[\"webhooks.onMemberRemove.url\"];\n    if (params[\"webhooks.onMemberRemove.method\"] !== undefined) data[\"Webhooks.OnMemberRemove.Method\"] = params[\"webhooks.onMemberRemove.method\"];\n    if (params[\"webhooks.onMessageSent.url\"] !== undefined) data[\"Webhooks.OnMessageSent.Url\"] = params[\"webhooks.onMessageSent.url\"];\n    if (params[\"webhooks.onMessageSent.method\"] !== undefined) data[\"Webhooks.OnMessageSent.Method\"] = params[\"webhooks.onMessageSent.method\"];\n    if (params[\"webhooks.onMessageUpdated.url\"] !== undefined) data[\"Webhooks.OnMessageUpdated.Url\"] = params[\"webhooks.onMessageUpdated.url\"];\n    if (params[\"webhooks.onMessageUpdated.method\"] !== undefined) data[\"Webhooks.OnMessageUpdated.Method\"] = params[\"webhooks.onMessageUpdated.method\"];\n    if (params[\"webhooks.onMessageRemoved.url\"] !== undefined) data[\"Webhooks.OnMessageRemoved.Url\"] = params[\"webhooks.onMessageRemoved.url\"];\n    if (params[\"webhooks.onMessageRemoved.method\"] !== undefined) data[\"Webhooks.OnMessageRemoved.Method\"] = params[\"webhooks.onMessageRemoved.method\"];\n    if (params[\"webhooks.onChannelAdded.url\"] !== undefined) data[\"Webhooks.OnChannelAdded.Url\"] = params[\"webhooks.onChannelAdded.url\"];\n    if (params[\"webhooks.onChannelAdded.method\"] !== undefined) data[\"Webhooks.OnChannelAdded.Method\"] = params[\"webhooks.onChannelAdded.method\"];\n    if (params[\"webhooks.onChannelDestroyed.url\"] !== undefined) data[\"Webhooks.OnChannelDestroyed.Url\"] = params[\"webhooks.onChannelDestroyed.url\"];\n    if (params[\"webhooks.onChannelDestroyed.method\"] !== undefined) data[\"Webhooks.OnChannelDestroyed.Method\"] = params[\"webhooks.onChannelDestroyed.method\"];\n    if (params[\"webhooks.onChannelUpdated.url\"] !== undefined) data[\"Webhooks.OnChannelUpdated.Url\"] = params[\"webhooks.onChannelUpdated.url\"];\n    if (params[\"webhooks.onChannelUpdated.method\"] !== undefined) data[\"Webhooks.OnChannelUpdated.Method\"] = params[\"webhooks.onChannelUpdated.method\"];\n    if (params[\"webhooks.onMemberAdded.url\"] !== undefined) data[\"Webhooks.OnMemberAdded.Url\"] = params[\"webhooks.onMemberAdded.url\"];\n    if (params[\"webhooks.onMemberAdded.method\"] !== undefined) data[\"Webhooks.OnMemberAdded.Method\"] = params[\"webhooks.onMemberAdded.method\"];\n    if (params[\"webhooks.onMemberRemoved.url\"] !== undefined) data[\"Webhooks.OnMemberRemoved.Url\"] = params[\"webhooks.onMemberRemoved.url\"];\n    if (params[\"webhooks.onMemberRemoved.method\"] !== undefined) data[\"Webhooks.OnMemberRemoved.Method\"] = params[\"webhooks.onMemberRemoved.method\"];\n    if (params[\"limits.channelMembers\"] !== undefined) data[\"Limits.ChannelMembers\"] = params[\"limits.channelMembers\"];\n    if (params[\"limits.userChannels\"] !== undefined) data[\"Limits.UserChannels\"] = params[\"limits.userChannels\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ServiceInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ServiceContextImpl = ServiceContextImpl;\nclass ServiceInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.friendlyName = payload.friendly_name;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.defaultServiceRoleSid = payload.default_service_role_sid;\n    this.defaultChannelRoleSid = payload.default_channel_role_sid;\n    this.defaultChannelCreatorRoleSid = payload.default_channel_creator_role_sid;\n    this.readStatusEnabled = payload.read_status_enabled;\n    this.reachabilityEnabled = payload.reachability_enabled;\n    this.typingIndicatorTimeout = deserialize.integer(payload.typing_indicator_timeout);\n    this.consumptionReportInterval = deserialize.integer(payload.consumption_report_interval);\n    this.limits = payload.limits;\n    this.webhooks = payload.webhooks;\n    this.preWebhookUrl = payload.pre_webhook_url;\n    this.postWebhookUrl = payload.post_webhook_url;\n    this.webhookMethod = payload.webhook_method;\n    this.webhookFilters = payload.webhook_filters;\n    this.notifications = payload.notifications;\n    this.url = payload.url;\n    this.links = payload.links;\n    this._solution = {\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new ServiceContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a ServiceInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a ServiceInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed ServiceInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Access the channels.\n   */\n  channels() {\n    return this._proxy.channels;\n  }\n  /**\n   * Access the roles.\n   */\n  roles() {\n    return this._proxy.roles;\n  }\n  /**\n   * Access the users.\n   */\n  users() {\n    return this._proxy.users;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      friendlyName: this.friendlyName,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      defaultServiceRoleSid: this.defaultServiceRoleSid,\n      defaultChannelRoleSid: this.defaultChannelRoleSid,\n      defaultChannelCreatorRoleSid: this.defaultChannelCreatorRoleSid,\n      readStatusEnabled: this.readStatusEnabled,\n      reachabilityEnabled: this.reachabilityEnabled,\n      typingIndicatorTimeout: this.typingIndicatorTimeout,\n      consumptionReportInterval: this.consumptionReportInterval,\n      limits: this.limits,\n      webhooks: this.webhooks,\n      preWebhookUrl: this.preWebhookUrl,\n      postWebhookUrl: this.postWebhookUrl,\n      webhookMethod: this.webhookMethod,\n      webhookFilters: this.webhookFilters,\n      notifications: this.notifications,\n      url: this.url,\n      links: this.links\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ServiceInstance = ServiceInstance;\nfunction ServiceListInstance(version) {\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new ServiceContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/Services`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"friendlyName\"] === null || params[\"friendlyName\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n    }\n    let data = {};\n    data[\"FriendlyName\"] = params[\"friendlyName\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ServiceInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ServicePage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new ServicePage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.ServiceListInstance = ServiceListInstance;\nclass ServicePage extends Page_1.default {\n  /**\n   * Initialize the ServicePage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of ServiceInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new ServiceInstance(this._version, payload);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ServicePage = ServicePage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ServicePage","ServiceListInstance","ServiceInstance","ServiceContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","channel_1","role_1","user_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","channels","_channels","ChannelListInstance","roles","_roles","RoleListInstance","users","_users","UserListInstance","remove","callback","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","bool","map","e","headers","toJSON","inspect","custom","_depth","options","accountSid","account_sid","friendlyName","friendly_name","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","defaultServiceRoleSid","default_service_role_sid","defaultChannelRoleSid","default_channel_role_sid","defaultChannelCreatorRoleSid","default_channel_creator_role_sid","readStatusEnabled","read_status_enabled","reachabilityEnabled","reachability_enabled","typingIndicatorTimeout","integer","typing_indicator_timeout","consumptionReportInterval","consumption_report_interval","limits","webhooks","preWebhookUrl","pre_webhook_url","postWebhookUrl","post_webhook_url","webhookMethod","webhook_method","webhookFilters","webhook_filters","notifications","url","links","_proxy","_context","version","get","create","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["/Users/sachin/Desktop/Assignment/cpf/node_modules/twilio/lib/rest/chat/v1/service.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServicePage = exports.ServiceListInstance = exports.ServiceInstance = exports.ServiceContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst channel_1 = require(\"./service/channel\");\nconst role_1 = require(\"./service/role\");\nconst user_1 = require(\"./service/user\");\nclass ServiceContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/Services/${sid}`;\n    }\n    get channels() {\n        this._channels =\n            this._channels || (0, channel_1.ChannelListInstance)(this._version, this._solution.sid);\n        return this._channels;\n    }\n    get roles() {\n        this._roles =\n            this._roles || (0, role_1.RoleListInstance)(this._version, this._solution.sid);\n        return this._roles;\n    }\n    get users() {\n        this._users =\n            this._users || (0, user_1.UserListInstance)(this._version, this._solution.sid);\n        return this._users;\n    }\n    remove(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n        });\n        operationPromise = operationPromise.then((payload) => new ServiceInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"defaultServiceRoleSid\"] !== undefined)\n            data[\"DefaultServiceRoleSid\"] = params[\"defaultServiceRoleSid\"];\n        if (params[\"defaultChannelRoleSid\"] !== undefined)\n            data[\"DefaultChannelRoleSid\"] = params[\"defaultChannelRoleSid\"];\n        if (params[\"defaultChannelCreatorRoleSid\"] !== undefined)\n            data[\"DefaultChannelCreatorRoleSid\"] =\n                params[\"defaultChannelCreatorRoleSid\"];\n        if (params[\"readStatusEnabled\"] !== undefined)\n            data[\"ReadStatusEnabled\"] = serialize.bool(params[\"readStatusEnabled\"]);\n        if (params[\"reachabilityEnabled\"] !== undefined)\n            data[\"ReachabilityEnabled\"] = serialize.bool(params[\"reachabilityEnabled\"]);\n        if (params[\"typingIndicatorTimeout\"] !== undefined)\n            data[\"TypingIndicatorTimeout\"] = params[\"typingIndicatorTimeout\"];\n        if (params[\"consumptionReportInterval\"] !== undefined)\n            data[\"ConsumptionReportInterval\"] = params[\"consumptionReportInterval\"];\n        if (params[\"notifications.newMessage.enabled\"] !== undefined)\n            data[\"Notifications.NewMessage.Enabled\"] = serialize.bool(params[\"notifications.newMessage.enabled\"]);\n        if (params[\"notifications.newMessage.template\"] !== undefined)\n            data[\"Notifications.NewMessage.Template\"] =\n                params[\"notifications.newMessage.template\"];\n        if (params[\"notifications.addedToChannel.enabled\"] !== undefined)\n            data[\"Notifications.AddedToChannel.Enabled\"] = serialize.bool(params[\"notifications.addedToChannel.enabled\"]);\n        if (params[\"notifications.addedToChannel.template\"] !== undefined)\n            data[\"Notifications.AddedToChannel.Template\"] =\n                params[\"notifications.addedToChannel.template\"];\n        if (params[\"notifications.removedFromChannel.enabled\"] !== undefined)\n            data[\"Notifications.RemovedFromChannel.Enabled\"] = serialize.bool(params[\"notifications.removedFromChannel.enabled\"]);\n        if (params[\"notifications.removedFromChannel.template\"] !== undefined)\n            data[\"Notifications.RemovedFromChannel.Template\"] =\n                params[\"notifications.removedFromChannel.template\"];\n        if (params[\"notifications.invitedToChannel.enabled\"] !== undefined)\n            data[\"Notifications.InvitedToChannel.Enabled\"] = serialize.bool(params[\"notifications.invitedToChannel.enabled\"]);\n        if (params[\"notifications.invitedToChannel.template\"] !== undefined)\n            data[\"Notifications.InvitedToChannel.Template\"] =\n                params[\"notifications.invitedToChannel.template\"];\n        if (params[\"preWebhookUrl\"] !== undefined)\n            data[\"PreWebhookUrl\"] = params[\"preWebhookUrl\"];\n        if (params[\"postWebhookUrl\"] !== undefined)\n            data[\"PostWebhookUrl\"] = params[\"postWebhookUrl\"];\n        if (params[\"webhookMethod\"] !== undefined)\n            data[\"WebhookMethod\"] = params[\"webhookMethod\"];\n        if (params[\"webhookFilters\"] !== undefined)\n            data[\"WebhookFilters\"] = serialize.map(params[\"webhookFilters\"], (e) => e);\n        if (params[\"webhooks.onMessageSend.url\"] !== undefined)\n            data[\"Webhooks.OnMessageSend.Url\"] = params[\"webhooks.onMessageSend.url\"];\n        if (params[\"webhooks.onMessageSend.method\"] !== undefined)\n            data[\"Webhooks.OnMessageSend.Method\"] =\n                params[\"webhooks.onMessageSend.method\"];\n        if (params[\"webhooks.onMessageUpdate.url\"] !== undefined)\n            data[\"Webhooks.OnMessageUpdate.Url\"] =\n                params[\"webhooks.onMessageUpdate.url\"];\n        if (params[\"webhooks.onMessageUpdate.method\"] !== undefined)\n            data[\"Webhooks.OnMessageUpdate.Method\"] =\n                params[\"webhooks.onMessageUpdate.method\"];\n        if (params[\"webhooks.onMessageRemove.url\"] !== undefined)\n            data[\"Webhooks.OnMessageRemove.Url\"] =\n                params[\"webhooks.onMessageRemove.url\"];\n        if (params[\"webhooks.onMessageRemove.method\"] !== undefined)\n            data[\"Webhooks.OnMessageRemove.Method\"] =\n                params[\"webhooks.onMessageRemove.method\"];\n        if (params[\"webhooks.onChannelAdd.url\"] !== undefined)\n            data[\"Webhooks.OnChannelAdd.Url\"] = params[\"webhooks.onChannelAdd.url\"];\n        if (params[\"webhooks.onChannelAdd.method\"] !== undefined)\n            data[\"Webhooks.OnChannelAdd.Method\"] =\n                params[\"webhooks.onChannelAdd.method\"];\n        if (params[\"webhooks.onChannelDestroy.url\"] !== undefined)\n            data[\"Webhooks.OnChannelDestroy.Url\"] =\n                params[\"webhooks.onChannelDestroy.url\"];\n        if (params[\"webhooks.onChannelDestroy.method\"] !== undefined)\n            data[\"Webhooks.OnChannelDestroy.Method\"] =\n                params[\"webhooks.onChannelDestroy.method\"];\n        if (params[\"webhooks.onChannelUpdate.url\"] !== undefined)\n            data[\"Webhooks.OnChannelUpdate.Url\"] =\n                params[\"webhooks.onChannelUpdate.url\"];\n        if (params[\"webhooks.onChannelUpdate.method\"] !== undefined)\n            data[\"Webhooks.OnChannelUpdate.Method\"] =\n                params[\"webhooks.onChannelUpdate.method\"];\n        if (params[\"webhooks.onMemberAdd.url\"] !== undefined)\n            data[\"Webhooks.OnMemberAdd.Url\"] = params[\"webhooks.onMemberAdd.url\"];\n        if (params[\"webhooks.onMemberAdd.method\"] !== undefined)\n            data[\"Webhooks.OnMemberAdd.Method\"] =\n                params[\"webhooks.onMemberAdd.method\"];\n        if (params[\"webhooks.onMemberRemove.url\"] !== undefined)\n            data[\"Webhooks.OnMemberRemove.Url\"] =\n                params[\"webhooks.onMemberRemove.url\"];\n        if (params[\"webhooks.onMemberRemove.method\"] !== undefined)\n            data[\"Webhooks.OnMemberRemove.Method\"] =\n                params[\"webhooks.onMemberRemove.method\"];\n        if (params[\"webhooks.onMessageSent.url\"] !== undefined)\n            data[\"Webhooks.OnMessageSent.Url\"] = params[\"webhooks.onMessageSent.url\"];\n        if (params[\"webhooks.onMessageSent.method\"] !== undefined)\n            data[\"Webhooks.OnMessageSent.Method\"] =\n                params[\"webhooks.onMessageSent.method\"];\n        if (params[\"webhooks.onMessageUpdated.url\"] !== undefined)\n            data[\"Webhooks.OnMessageUpdated.Url\"] =\n                params[\"webhooks.onMessageUpdated.url\"];\n        if (params[\"webhooks.onMessageUpdated.method\"] !== undefined)\n            data[\"Webhooks.OnMessageUpdated.Method\"] =\n                params[\"webhooks.onMessageUpdated.method\"];\n        if (params[\"webhooks.onMessageRemoved.url\"] !== undefined)\n            data[\"Webhooks.OnMessageRemoved.Url\"] =\n                params[\"webhooks.onMessageRemoved.url\"];\n        if (params[\"webhooks.onMessageRemoved.method\"] !== undefined)\n            data[\"Webhooks.OnMessageRemoved.Method\"] =\n                params[\"webhooks.onMessageRemoved.method\"];\n        if (params[\"webhooks.onChannelAdded.url\"] !== undefined)\n            data[\"Webhooks.OnChannelAdded.Url\"] =\n                params[\"webhooks.onChannelAdded.url\"];\n        if (params[\"webhooks.onChannelAdded.method\"] !== undefined)\n            data[\"Webhooks.OnChannelAdded.Method\"] =\n                params[\"webhooks.onChannelAdded.method\"];\n        if (params[\"webhooks.onChannelDestroyed.url\"] !== undefined)\n            data[\"Webhooks.OnChannelDestroyed.Url\"] =\n                params[\"webhooks.onChannelDestroyed.url\"];\n        if (params[\"webhooks.onChannelDestroyed.method\"] !== undefined)\n            data[\"Webhooks.OnChannelDestroyed.Method\"] =\n                params[\"webhooks.onChannelDestroyed.method\"];\n        if (params[\"webhooks.onChannelUpdated.url\"] !== undefined)\n            data[\"Webhooks.OnChannelUpdated.Url\"] =\n                params[\"webhooks.onChannelUpdated.url\"];\n        if (params[\"webhooks.onChannelUpdated.method\"] !== undefined)\n            data[\"Webhooks.OnChannelUpdated.Method\"] =\n                params[\"webhooks.onChannelUpdated.method\"];\n        if (params[\"webhooks.onMemberAdded.url\"] !== undefined)\n            data[\"Webhooks.OnMemberAdded.Url\"] = params[\"webhooks.onMemberAdded.url\"];\n        if (params[\"webhooks.onMemberAdded.method\"] !== undefined)\n            data[\"Webhooks.OnMemberAdded.Method\"] =\n                params[\"webhooks.onMemberAdded.method\"];\n        if (params[\"webhooks.onMemberRemoved.url\"] !== undefined)\n            data[\"Webhooks.OnMemberRemoved.Url\"] =\n                params[\"webhooks.onMemberRemoved.url\"];\n        if (params[\"webhooks.onMemberRemoved.method\"] !== undefined)\n            data[\"Webhooks.OnMemberRemoved.Method\"] =\n                params[\"webhooks.onMemberRemoved.method\"];\n        if (params[\"limits.channelMembers\"] !== undefined)\n            data[\"Limits.ChannelMembers\"] = params[\"limits.channelMembers\"];\n        if (params[\"limits.userChannels\"] !== undefined)\n            data[\"Limits.UserChannels\"] = params[\"limits.userChannels\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ServiceInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ServiceContextImpl = ServiceContextImpl;\nclass ServiceInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.friendlyName = payload.friendly_name;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.defaultServiceRoleSid = payload.default_service_role_sid;\n        this.defaultChannelRoleSid = payload.default_channel_role_sid;\n        this.defaultChannelCreatorRoleSid =\n            payload.default_channel_creator_role_sid;\n        this.readStatusEnabled = payload.read_status_enabled;\n        this.reachabilityEnabled = payload.reachability_enabled;\n        this.typingIndicatorTimeout = deserialize.integer(payload.typing_indicator_timeout);\n        this.consumptionReportInterval = deserialize.integer(payload.consumption_report_interval);\n        this.limits = payload.limits;\n        this.webhooks = payload.webhooks;\n        this.preWebhookUrl = payload.pre_webhook_url;\n        this.postWebhookUrl = payload.post_webhook_url;\n        this.webhookMethod = payload.webhook_method;\n        this.webhookFilters = payload.webhook_filters;\n        this.notifications = payload.notifications;\n        this.url = payload.url;\n        this.links = payload.links;\n        this._solution = { sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new ServiceContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a ServiceInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a ServiceInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed ServiceInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Access the channels.\n     */\n    channels() {\n        return this._proxy.channels;\n    }\n    /**\n     * Access the roles.\n     */\n    roles() {\n        return this._proxy.roles;\n    }\n    /**\n     * Access the users.\n     */\n    users() {\n        return this._proxy.users;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            friendlyName: this.friendlyName,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            defaultServiceRoleSid: this.defaultServiceRoleSid,\n            defaultChannelRoleSid: this.defaultChannelRoleSid,\n            defaultChannelCreatorRoleSid: this.defaultChannelCreatorRoleSid,\n            readStatusEnabled: this.readStatusEnabled,\n            reachabilityEnabled: this.reachabilityEnabled,\n            typingIndicatorTimeout: this.typingIndicatorTimeout,\n            consumptionReportInterval: this.consumptionReportInterval,\n            limits: this.limits,\n            webhooks: this.webhooks,\n            preWebhookUrl: this.preWebhookUrl,\n            postWebhookUrl: this.postWebhookUrl,\n            webhookMethod: this.webhookMethod,\n            webhookFilters: this.webhookFilters,\n            notifications: this.notifications,\n            url: this.url,\n            links: this.links,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ServiceInstance = ServiceInstance;\nfunction ServiceListInstance(version) {\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new ServiceContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/Services`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"friendlyName\"] === null ||\n            params[\"friendlyName\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['friendlyName']\\\" missing.\");\n        }\n        let data = {};\n        data[\"FriendlyName\"] = params[\"friendlyName\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ServiceInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ServicePage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new ServicePage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.ServiceListInstance = ServiceListInstance;\nclass ServicePage extends Page_1.default {\n    /**\n     * Initialize the ServicePage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of ServiceInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new ServiceInstance(this._version, payload);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ServicePage = ServicePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}